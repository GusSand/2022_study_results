{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813440==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555902874924 bp 0x7ffc08db5ae0 sp 0x7ffc08db5aa0 T0)\n==3813440==The signal is caused by a READ memory access.\n==3813440==Hint: address points to the zero page.\n    #0 0x555902874923 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:46\n    #1 0x55590288087c in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55590287ec77 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55590287f1b7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55590287fbe5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x555902880a2b in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7fb387764fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fb38776507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x555902874824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:46 in list_add_item_at_pos\n==3813440==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813685==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fb408dc605d bp 0x7fffbce244f0 sp 0x7fffbce23c68 T0)\n==3813685==The signal is caused by a READ memory access.\n==3813685==Hint: address points to the zero page.\n    #0 0x7fb408dc605c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7fb408eb990b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x55c533441986 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:65\n    #3 0x55c53344d94a in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x55c53344bc77 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55c53344c1b7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55c53344cbe5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55c53344db4b in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7fb408c53fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fb408c5407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55c533441824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3813685==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[       OK ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814092==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f8b341a4667 bp 0x000000000031 sp 0x7ffda8bbc710 T0)\n==3814092==The signal is caused by a WRITE memory access.\n==3814092==Hint: address points to the zero page.\n    #0 0x7f8b341a4666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f8b341a2de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f8b341a2de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f8b3418ab23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f8b3418ab23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f8b34196ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f8b34196ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f8b343db664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f8b343dbbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x559a0269293d in list_item_to_string parts/gen_list_item_to_string.c:38\n    #10 0x559a0269e8f5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x559a0269cbcf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x559a0269d10f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x559a0269db3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x559a0269eb1c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f8b3413efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f8b3413f07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x559a02692824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3814092==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3814467==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff084547a4 at pc 0x7ff42f072725 bp 0x7fff084545a0 sp 0x7fff08453d30\nWRITE of size 527 at 0x7fff084547a4 thread T0\n    #0 0x7ff42f072724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff42f072bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x555823a9095d in list_item_to_string parts/gen_list_item_to_string.c:38\n    #3 0x555823a9c9bc in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x555823a9abef in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x555823a9b12f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x555823a9bb5d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x555823a9cc71 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff42edd5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff42edd607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x555823a90844 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7fff084547a4 is located in stack of thread T0 at offset 196 in frame\n    #0 0x555823a9c7d1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x1000610828a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000610828b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000610828c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000610828d0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n  0x1000610828e0: 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00\n=>0x1000610828f0: 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n  0x100061082900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061082910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061082920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061082930: 00 00 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3\n  0x100061082940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3814467==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[       OK ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814972==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5562d4bc7923 bp 0x7fff63e46630 sp 0x7fff63e46600 T0)\n==3814972==The signal is caused by a READ memory access.\n==3814972==Hint: address points to the zero page.\n    #0 0x5562d4bc7922 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:35\n    #1 0x5562d4bd3849 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x5562d4bd1c39 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5562d4bd2179 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5562d4bd2ba7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5562d4bd39f8 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f6cda0e4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f6cda0e507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5562d4bc7824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:35 in list_update_item_at_pos\n==3814972==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815201==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7ff72f27e05d bp 0x7fff6afeb5c0 sp 0x7fff6afead38 T0)\n==3815201==The signal is caused by a READ memory access.\n==3815201==Hint: address points to the zero page.\n    #0 0x7ff72f27e05c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7ff72f37190b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x5646c64d1973 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:50\n    #3 0x5646c64dd94e in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x5646c64dbc39 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5646c64dc179 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5646c64dcba7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5646c64ddcd1 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7ff72f10bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff72f10c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5646c64d1824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3815201==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[       OK ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815649==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5652eb4c98f8 bp 0x7ffc44a2fbd0 sp 0x7ffc44a2fba0 T0)\n==3815649==The signal is caused by a READ memory access.\n==3815649==Hint: address points to the zero page.\n    #0 0x5652eb4c98f7 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:36\n    #1 0x5652eb4d57f1 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x5652eb4d3c00 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5652eb4d4140 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5652eb4d4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5652eb4d59a0 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fe1a1383fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe1a138407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5652eb4c9804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:36 in list_remove_item_at_pos\n==3815649==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[       OK ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815971==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5623b1f9b907 bp 0x7ffe050b0220 sp 0x7ffe050b0220 T0)\n==3815971==The signal is caused by a READ memory access.\n==3815971==Hint: address points to the zero page.\n    #0 0x5623b1f9b906 in list_swap_item_positions parts/gen_list_swap_item_positions.c:38\n    #1 0x5623b1fa786c in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x5623b1fa5c76 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5623b1fa61b6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5623b1fa6be4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5623b1fa7a1b in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fa54ce2bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa54ce2c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5623b1f9b804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:38 in list_swap_item_positions\n==3815971==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[       OK ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816313==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55de934648e4 bp 0x7fff7188bf90 sp 0x7fff7188bf90 T0)\n==3816313==The signal is caused by a WRITE memory access.\n==3816313==Hint: address points to the zero page.\n    #0 0x55de934648e3 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:32\n    #1 0x55de934708b2 in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55de9346ebcd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55de9346f10d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55de9346fb3b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55de93470ab1 in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7f299992cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f299992d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55de93464804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:32 in list_find_highest_price_item_position\n==3816313==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816615==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x564705f1892e bp 0x7ffc8c56e3a0 sp 0x7ffc8c56e3a0 T0)\n==3816615==The signal is caused by a WRITE memory access.\n==3816615==Hint: address points to the zero page.\n    #0 0x564705f1892d in list_cost_sum parts/gen_list_cost_sum.c:40\n    #1 0x564705f2495b in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x564705f22bb3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x564705f230f3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564705f23b21 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564705f24b82 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7ffbb7820fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ffbb782107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x564705f18804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:40 in list_cost_sum\n==3816615==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817061==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a6ad130947 bp 0x7ffd3deb2e30 sp 0x7ffd3deb2d90 T0)\n==3817061==The signal is caused by a READ memory access.\n==3817061==Hint: address points to the zero page.\n    #0 0x55a6ad130946 in list_load parts/gen_list_load.c:40\n    #1 0x55a6ad13c88b in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x55a6ad13ac8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a6ad13b1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a6ad13bbfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a6ad13ca3a in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fa397873fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa39787407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a6ad130824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_load_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:40 in list_load\n==3817061==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "=================================================================\n==3817401==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3817412==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd238ede808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x563709a63ec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/reflist.c:114\n    #2 0x563709a6f9b4 in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x563709a6dc8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563709a6e1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563709a6ebfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563709a6fddc in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd238bd2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 48 byte(s) in 2 object(s) allocated from:\n    #0 0x7fd238ede808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x563709a63ec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/reflist.c:114\n    #2 0x563709a6399c in list_load parts/gen_list_load.c:56\n    #3 0x563709a6f9e5 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x563709a6dc8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x563709a6e1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x563709a6ebfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x563709a6fddc in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7fd238bd2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 20 byte(s) in 2 object(s) allocated from:\n    #0 0x7fd238e673ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x563709a63ee8 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/reflist.c:118\n    #2 0x563709a6399c in list_load parts/gen_list_load.c:56\n    #3 0x563709a6f9e5 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x563709a6dc8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x563709a6e1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x563709a6ebfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x563709a6fddc in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7fd238bd2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd238e673ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x563709a63ee8 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/reflist.c:118\n    #2 0x563709a6f9b4 in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x563709a6dc8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563709a6e1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563709a6ebfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563709a6fddc in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd238bd2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 98 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817886==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5589085598dd bp 0x7fff5bda3820 sp 0x7fff5bda37e0 T0)\n==3817886==The signal is caused by a READ memory access.\n==3817886==Hint: address points to the zero page.\n    #0 0x5589085598dc in list_deduplicate parts/gen_list_deduplicate.c:32\n    #1 0x55890856580f in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x558908563c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x558908564163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x558908564b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5589085659be in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f7c3b6cefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f7c3b6cf07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x558908559804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:32 in list_deduplicate\n==3817886==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 26,
    "total": 45,
    "passed_functional": 22,
    "total_functional": 26
}
