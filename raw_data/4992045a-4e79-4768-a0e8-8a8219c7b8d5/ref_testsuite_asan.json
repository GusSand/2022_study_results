{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[  FAILED  ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3808576==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b3138c88fb bp 0x7ffe2c02fa20 sp 0x7ffe2c02f9d0 T0)\n==3808576==The signal is caused by a READ memory access.\n==3808576==Hint: address points to the zero page.\n    #0 0x55b3138c88fa in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:50\n    #1 0x55b3138d483a in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55b3138d2c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b3138d3175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b3138d3ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b3138d49e9 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7fc1ebbd2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc1ebbd307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55b3138c8804 in _start (/home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:50 in list_add_item_at_pos\n==3808576==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3809197==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fe135ba6667 bp 0x000000000031 sp 0x7ffc0d4b88a0 T0)\n==3809197==The signal is caused by a WRITE memory access.\n==3809197==Hint: address points to the zero page.\n    #0 0x7fe135ba6666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7fe135ba4de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7fe135ba4de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7fe135b8cb23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7fe135b8cb23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7fe135b98ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7fe135b98ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7fe135ddd664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7fe135dddbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x555b8954d93d in list_item_to_string parts/gen_list_item_to_string.c:45\n    #10 0x555b895598e5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x555b89557bbf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x555b895580ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x555b89558b2d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x555b89559b0c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7fe135b40fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7fe135b4107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x555b8954d824 in _start (/home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3809197==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3809899==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffab6babc4 at pc 0x7ff20fca5725 bp 0x7fffab6ba9d0 sp 0x7fffab6ba160\nWRITE of size 527 at 0x7fffab6babc4 thread T0\n    #0 0x7ff20fca5724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff20fca5bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55637b2e195d in list_item_to_string parts/gen_list_item_to_string.c:45\n    #3 0x55637b2ed9ac in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55637b2ebbdf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55637b2ec11f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55637b2ecb4d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55637b2edc61 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff20fa08fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff20fa0907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55637b2e1844 in _start (/home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7fffab6babc4 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55637b2ed7c1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x1000756cf520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf560: f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n=>0x1000756cf570: 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2\n  0x1000756cf580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf5a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf5b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000756cf5c0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3809899==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[  FAILED  ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"0 3 * banana @ $1.00 ea\n1 2 * orange @ $2.00 ea\n2 4 * apple @ $3.00 ea\n\" != \"1: 3 * banana @ $1.00 ea\n2: 2 * orange @ $2.00 ea\n3: 4 * apple @ $3.00 ea\n\"\n[   LINE   ] --- tests_ref/test_list_print.c:34: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3810489==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc846808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b7e2d6ce24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:114\n    #2 0x55b7e2d788c1 in test_list_print tests_ref/test_list_print.c:25\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc846808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b7e2d6ce24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:114\n    #2 0x55b7e2d78902 in test_list_print tests_ref/test_list_print.c:26\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc846808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b7e2d6ce24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:114\n    #2 0x55b7e2d78943 in test_list_print tests_ref/test_list_print.c:27\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 7 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc7cf3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b7e2d6ce45 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:118\n    #2 0x55b7e2d788c1 in test_list_print tests_ref/test_list_print.c:25\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 7 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc7cf3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b7e2d6ce45 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:118\n    #2 0x55b7e2d78902 in test_list_print tests_ref/test_list_print.c:26\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9dc7cf3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b7e2d6ce45 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:118\n    #2 0x55b7e2d78943 in test_list_print tests_ref/test_list_print.c:27\n    #3 0x55b7e2d76bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b7e2d7712a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b7e2d77b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b7e2d78c17 in main tests_ref/test_list_print.c:43\n    #7 0x7fc9dc53afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 92 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[       OK ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811085==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f89ced41808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558867e66e44 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:114\n    #2 0x558867e72968 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x558867e70c0a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558867e7114a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558867e71b78 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558867e72c79 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f89cea35fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f89cecca3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558867e66e65 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:118\n    #2 0x558867e72968 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x558867e70c0a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558867e7114a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558867e71b78 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558867e72c79 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f89cea35fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[  FAILED  ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811522==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbc384c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a6f0163d9f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:114\n    #2 0x55a6f016f83c in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:25\n    #3 0x55a6f016db65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6f016e0a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6f016ead3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6f016fc0d in main tests_ref/test_list_update_item_at_pos.c:38\n    #7 0x7ffbc3540fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbc37d53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a6f0163dc0 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/4992045a-4e79-4768-a0e8-8a8219c7b8d5/reflist.c:118\n    #2 0x55a6f016f83c in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:25\n    #3 0x55a6f016db65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6f016e0a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6f016ead3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6f016fc0d in main tests_ref/test_list_update_item_at_pos.c:38\n    #7 0x7ffbc3540fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n[       OK ] test_list_update_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[       OK ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[       OK ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_oob": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_longitem": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badparse": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_missingfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_single": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nodups": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        }
    },
    "passed": 6,
    "total": 45,
    "passed_functional": 2,
    "total_functional": 26
}
