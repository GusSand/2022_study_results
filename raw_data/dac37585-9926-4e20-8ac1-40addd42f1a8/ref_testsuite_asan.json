{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3810648==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a79c77c8d9 bp 0x7ffd8c5aa1f0 sp 0x7ffd8c5aa1f0 T0)\n==3810648==The signal is caused by a WRITE memory access.\n==3810648==Hint: address points to the zero page.\n    #0 0x55a79c77c8d8 in list_init parts/gen_list_init.c:27\n    #1 0x55a79c78874d in test_list_init_nullhead tests_ref/test_list_init_nullhead.c:23\n    #2 0x55a79c786b61 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a79c7870a1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a79c787acf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a79c7888fc in main tests_ref/test_list_init_nullhead.c:30\n    #6 0x7f2e3a159fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f2e3a15a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a79c77c804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_init_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_init.c:27 in list_init\n==3810648==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3810987==ERROR: AddressSanitizer: SEGV on unknown address 0x5557fc6f6710 (pc 0x7f2a29138a16 bp 0x5557fc6f6710 sp 0x7fff9f28d8d0 T0)\n==3810987==The signal is caused by a WRITE memory access.\n    #0 0x7f2a29138a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f2a29138a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f2a29138a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f2a29138a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f2a2921d3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x5557fc6f143f in list_free test_common.h:35\n    #6 0x5557fc6f1d65 in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x5557fc6efc60 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x5557fc6f01a0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x5557fc6f0bce in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x5557fc6f1f66 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7f2a28f11fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f2a28f1207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x5557fc6e5804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3810987==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3811287==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563aba3588ec bp 0x7ffd09e54fc0 sp 0x7ffd09e54f80 T0)\n==3811287==The signal is caused by a READ memory access.\n==3811287==Hint: address points to the zero page.\n    #0 0x563aba3588eb in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #1 0x563aba364865 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x563aba362c60 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563aba3631a0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563aba363bce in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563aba364a14 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f79bbe1dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f79bbe1e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563aba358804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:38 in list_add_item_at_pos\n==3811287==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811559==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f838a341808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55716e42b8fd in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #2 0x55716e437933 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x55716e435c60 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55716e4361a0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55716e436bce in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55716e437b34 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f838a035fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811898==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f3843c4a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x562e04af88fd in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #2 0x562e04b04937 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x562e04b02c60 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562e04b031a0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562e04b03bce in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562e04b04c03 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f384393efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3812242==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f003d433667 bp 0x000000000031 sp 0x7ffd8a5d1dd0 T0)\n==3812242==The signal is caused by a WRITE memory access.\n==3812242==Hint: address points to the zero page.\n    #0 0x7f003d433666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f003d431de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f003d431de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f003d419b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f003d419b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f003d425ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f003d425ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f003d66a664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f003d66abde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x5594bcc9f93d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #10 0x5594bccab8e5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x5594bcca9bbf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x5594bccaa0ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x5594bccaab2d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x5594bccabb0c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f003d3cdfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f003d3ce07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x5594bcc9f824 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3812242==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3812647==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffedf6d05b4 at pc 0x7ff5e752d725 bp 0x7ffedf6d03c0 sp 0x7ffedf6cfb50\nWRITE of size 527 at 0x7ffedf6d05b4 thread T0\n    #0 0x7ff5e752d724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff5e752dbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x5583144e295d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #3 0x5583144ee9ac in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x5583144ecbdf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5583144ed11f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5583144edb4d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5583144eec61 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff5e7290fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff5e729107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5583144e2844 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffedf6d05b4 is located in stack of thread T0 at offset 196 in frame\n    #0 0x5583144ee7c1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10005bed2060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed2070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed2080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed2090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1\n  0x10005bed20a0: f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n=>0x10005bed20b0: 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00\n  0x10005bed20c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed20d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed20e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005bed20f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f3 f3\n  0x10005bed2100: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3812647==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n",
            "stderr": "=================================================================\n==3813044==ERROR: AddressSanitizer: heap-use-after-free on address 0x60b0000000f0 at pc 0x7f446c3b7a8d bp 0x7ffe37d68360 sp 0x7ffe37d67af0\nWRITE of size 22 at 0x60b0000000f0 thread T0\n    #0 0x7f446c3b7a8c in __interceptor_vsnprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608\n    #1 0x7f446c3b7f2e in __interceptor_snprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1679\n    #2 0x55a8ef115aa6 in ref_list_item_to_string /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:44\n    #3 0x55a8ef115918 in list_print parts/gen_list_print.c:46\n    #4 0x55a8ef121997 in test_list_print tests_ref/test_list_print.c:29\n    #5 0x55a8ef11fbd7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55a8ef120117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55a8ef120b45 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55a8ef121c04 in main tests_ref/test_list_print.c:43\n    #9 0x7f446c119fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f446c11a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55a8ef115804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_print.bin+0x6804)\n\n0x60b0000000f0 is located 0 bytes inside of 100-byte region [0x60b0000000f0,0x60b000000154)\nfreed by thread T0 here:\n==3813044==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_descriptions.cc:176 \"((res.trace)) != (0)\" (0x0, 0x0)\n    #0 0x7f446c42f8be in AsanCheckFailed ../../../../src/libsanitizer/asan/asan_rtl.cc:72\n    #1 0x7f446c44defe in __sanitizer::CheckFailed(char const*, int, char const*, unsigned long long, unsigned long long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_termination.cc:77\n    #2 0x7f446c3454fc in GetStackTraceFromId ../../../../src/libsanitizer/asan/asan_descriptions.cc:176\n    #3 0x7f446c34708e in __asan::HeapAddressDescription::Print() const ../../../../src/libsanitizer/asan/asan_descriptions.cc:424\n    #4 0x7f446c34ab83 in __asan::AddressDescription::Print(char const*) const ../../../../src/libsanitizer/asan/asan_descriptions.h:233\n    #5 0x7f446c34ab83 in __asan::ErrorGeneric::Print() ../../../../src/libsanitizer/asan/asan_errors.cc:576\n    #6 0x7f446c42f62c in __asan::ErrorDescription::Print() ../../../../src/libsanitizer/asan/asan_errors.h:420\n    #7 0x7f446c42f62c in __asan::ScopedInErrorReport::~ScopedInErrorReport() ../../../../src/libsanitizer/asan/asan_report.cc:140\n    #8 0x7f446c42efa2 in __asan::ReportGenericError(unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long, unsigned int, bool) ../../../../src/libsanitizer/asan/asan_report.cc:458\n    #9 0x7f446c3b7aae in __interceptor_vsnprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608\n    #10 0x7f446c3b7f2e in __interceptor_snprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1679\n    #11 0x55a8ef115aa6 in ref_list_item_to_string /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:44\n    #12 0x55a8ef115918 in list_print parts/gen_list_print.c:46\n    #13 0x55a8ef121997 in test_list_print tests_ref/test_list_print.c:29\n    #14 0x55a8ef11fbd7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #15 0x55a8ef120117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #16 0x55a8ef120b45 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #17 0x55a8ef121c04 in main tests_ref/test_list_print.c:43\n    #18 0x7f446c119fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #19 0x7f446c11a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #20 0x55a8ef115804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_print.bin+0x6804)\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[       OK ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3813494==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0ce1b68808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55ed8ce99e31 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x55ed8cea5955 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x55ed8cea3bf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55ed8cea4137 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55ed8cea4b65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55ed8cea5c66 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f0ce185cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0ce1af13ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55ed8ce99e52 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x55ed8cea5955 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x55ed8cea3bf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55ed8cea4137 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55ed8cea4b65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55ed8cea5c66 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f0ce185cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3813837==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8058fad3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x561e8f439e47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x561e8f4458c3 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:25\n    #3 0x561e8f443bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x561e8f44412c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x561e8f444b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x561e8f445c94 in main tests_ref/test_list_update_item_at_pos.c:38\n    #7 0x7f8058d18fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 6 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814231==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55dfbe1638ec bp 0x7fff95787720 sp 0x7fff957876f0 T0)\n==3814231==The signal is caused by a READ memory access.\n==3814231==Hint: address points to the zero page.\n    #0 0x55dfbe1638eb in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:28\n    #1 0x55dfbe16f7fc in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55dfbe16dbec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55dfbe16e12c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55dfbe16eb5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55dfbe16f9ab in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f24bed66fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f24bed6707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55dfbe163804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:28 in list_update_item_at_pos\n==3814231==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814476==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f69375d305d bp 0x7ffced77be80 sp 0x7ffced77b5f8 T0)\n==3814476==The signal is caused by a READ memory access.\n==3814476==Hint: address points to the zero page.\n    #0 0x7f69375d305c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7f69376f5232 in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:441\n    #2 0x5641d59c6960 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:43\n    #3 0x5641d59d2901 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x5641d59d0bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5641d59d112c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5641d59d1b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5641d59d2c84 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7f6937460fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f693746107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5641d59c6804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3814476==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3814883==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5d2bacb808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5557a3c46e26 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x5557a3c528d1 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x5557a3c50bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5557a3c5112c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5557a3c51b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5557a3c52d14 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f5d2b7bffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5d2ba543ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5557a3c46e47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x5557a3c528d1 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x5557a3c50bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5557a3c5112c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5557a3c51b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5557a3c52d14 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f5d2b7bffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 4 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5d2ba543ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5557a3c46960 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:43\n    #2 0x5557a3c52911 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:27\n    #3 0x5557a3c50bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5557a3c5112c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5557a3c51b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5557a3c52d14 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f5d2b7bffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 34 byte(s) leaked in 3 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3815279==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8d35d93808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5606eb446e5c in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x5606eb452979 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x5606eb450c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606eb451162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606eb451b90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606eb452dab in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f8d35a87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8d35d1c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5606eb446e7d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x5606eb4528f9 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x5606eb450c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606eb451162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606eb451b90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606eb452dab in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f8d35a87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8d35d1c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5606eb446e7d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x5606eb452939 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x5606eb450c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606eb451162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606eb451b90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606eb452dab in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f8d35a87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8d35d1c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5606eb446e7d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x5606eb452979 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x5606eb450c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606eb451162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606eb451b90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606eb452dab in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f8d35a87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 42 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815685==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a0a0bcb8e0 bp 0x7fff282fe100 sp 0x7fff282fe0d0 T0)\n==3815685==The signal is caused by a READ memory access.\n==3815685==Hint: address points to the zero page.\n    #0 0x55a0a0bcb8df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:29\n    #1 0x55a0a0bd7813 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55a0a0bd5c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a0a0bd6162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a0a0bd6b90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a0a0bd79c2 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f9ba57b4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f9ba57b507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a0a0bcb804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:29 in list_remove_item_at_pos\n==3815685==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815956==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55a516c1f987 bp 0x7ffe3358beb0 sp 0x7ffe3358be80 T0)\n==3815956==The signal is caused by a READ memory access.\n==3815956==Hint: address points to the zero page.\n    #0 0x55a516c1f986 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:50\n    #1 0x55a516c2b925 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55a516c29c22 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a516c2a162 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a516c2ab90 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a516c2bd40 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7f02a8c90fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f02a8c9107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a516c1f804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:50 in list_remove_item_at_pos\n==3815956==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[  FAILED  ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item2\" != \"item1\"\n[   LINE   ] --- tests_ref/test_list_swap_item_positions.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816204==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe38a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a9af0c9f58 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x55a9af0d59f5 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:25\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe38a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a9af0c9f58 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x55a9af0d5a35 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:26\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe38a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a9af0c9f58 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:114\n    #2 0x55a9af0d5a75 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:27\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe3133ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a9af0c9f79 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x55a9af0d5a75 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:27\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe3133ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a9af0c9f79 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x55a9af0d5a35 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:26\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7efcbe3133ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a9af0c9f79 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/reflist.c:118\n    #2 0x55a9af0d59f5 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:25\n    #3 0x55a9af0d3d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a9af0d425e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a9af0d4c8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a9af0d61f8 in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7efcbe07efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816678==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f5797ff8df bp 0x7fff5213eb40 sp 0x7fff5213eb40 T0)\n==3816678==The signal is caused by a READ memory access.\n==3816678==Hint: address points to the zero page.\n    #0 0x55f5797ff8de in list_swap_item_positions parts/gen_list_swap_item_positions.c:28\n    #1 0x55f57980b914 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x55f579809d1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f57980a25e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f57980ac8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f57980bac3 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fecbb7a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fecbb7a107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55f5797ff804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:28 in list_swap_item_positions\n==3816678==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816939==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55fdf8c24a64 bp 0x7ffefdfd91c0 sp 0x7ffefdfd91c0 T0)\n==3816939==The signal is caused by a READ memory access.\n==3816939==Hint: address points to the zero page.\n    #0 0x55fdf8c24a63 in list_swap_item_positions parts/gen_list_swap_item_positions.c:82\n    #1 0x55fdf8c30ac8 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:29\n    #2 0x55fdf8c2ed1e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55fdf8c2f25e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55fdf8c2fc8c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55fdf8c30e6e in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7ff08bdc0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ff08bdc107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55fdf8c24804 in _start (/home/gustavo/git/codex_study_grading/repos/dac37585-9926-4e20-8ac1-40addd42f1a8/tests_ref/test_list_swap_item_positions_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:82 in list_swap_item_positions\n==3816939==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_longitem": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badparse": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_missingfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_single": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nodups": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        }
    },
    "passed": 5,
    "total": 45,
    "passed_functional": 3,
    "total_functional": 26
}
