{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3866844==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x557c93acc90a bp 0x7fff968b8780 sp 0x7fff968b8780 T0)\n==3866844==The signal is caused by a WRITE memory access.\n==3866844==Hint: address points to the zero page.\n    #0 0x557c93acc909 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x557c93ad890a in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:25\n    #2 0x557c93ad6c33 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557c93ad7173 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557c93ad7ba1 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557c93ad8f39 in main tests_ref/test_list_add_item_at_pos.c:41\n    #6 0x7ff07d61cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ff07d61d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x557c93acc804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3866844==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3866922==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x555a83d38929 bp 0x7ffce2d2c050 sp 0x7ffce2d2c050 T0)\n==3866922==The signal is caused by a READ memory access.\n==3866922==Hint: address points to the zero page.\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3866924==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5611cfa2590a bp 0x7fffee161e10 sp 0x7fffee161e10 T0)\n==3866924==The signal is caused by a WRITE memory access.\n==3866924==Hint: address points to the zero page.\n    #0 0x5611cfa25909 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x5611cfa31906 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #2 0x5611cfa2fc33 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5611cfa30173 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5611cfa30ba1 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5611cfa31b07 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #6 0x7f8767987fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f876798807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5611cfa25804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3866924==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": "timeout",
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3872716==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000001 (pc 0x7fc3b0284616 bp 0x7fff91ff27e0 sp 0x7fff91ff1f08 T0)\n==3872716==The signal is caused by a READ memory access.\n==3872716==Hint: address points to the zero page.\n    #0 0x7fc3b0284615 in __sanitizer::internal_strlen(char const*) ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164\n    #1 0x7fc3b01fa84a in printf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:489\n    #2 0x7fc3b01fc762 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #3 0x7fc3b01fcbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #4 0x55c459386934 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #5 0x55c459392912 in test_list_item_to_string tests_ref/test_list_item_to_string.c:27\n    #6 0x55c459390bbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #7 0x55c4593910fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #8 0x55c459391b2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #9 0x55c459392ba5 in main tests_ref/test_list_item_to_string.c:37\n    #10 0x7fc3aff5ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #11 0x7fc3aff6007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #12 0x55c459386824 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_item_to_string.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164 in __sanitizer::internal_strlen(char const*)\n==3872716==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3872828==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x562f5dbb2901 bp 0x7ffee924fd10 sp 0x7ffee924fd00 T0)\n==3872828==The signal is caused by a READ memory access.\n==3872828==Hint: address points to the zero page.\n    #0 0x562f5dbb2900 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #1 0x562f5dbbe837 in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x562f5dbbcbbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x562f5dbbd0fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x562f5dbbdb2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x562f5dbbea66 in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7f100e1b9fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f100e1ba07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x562f5dbb2824 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:32 in list_item_to_string\n==3872828==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3872871==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000001 (pc 0x7f49f32c5616 bp 0x7ffe7e0fc780 sp 0x7ffe7e0fbea8 T0)\n==3872871==The signal is caused by a READ memory access.\n==3872871==Hint: address points to the zero page.\n    #0 0x7f49f32c5615 in __sanitizer::internal_strlen(char const*) ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164\n    #1 0x7f49f323b84a in printf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:489\n    #2 0x7f49f323d762 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #3 0x7f49f323dbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #4 0x55b645803934 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #5 0x55b64580f8e2 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #6 0x55b64580dbbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #7 0x55b64580e0fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #8 0x55b64580eb2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #9 0x55b64580fb09 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #10 0x7f49f2fa0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #11 0x7f49f2fa107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #12 0x55b645803824 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164 in __sanitizer::internal_strlen(char const*)\n==3872871==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3872958==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000001 (pc 0x7f7ce497c616 bp 0x7fffac758070 sp 0x7fffac757798 T0)\n==3872958==The signal is caused by a READ memory access.\n==3872958==Hint: address points to the zero page.\n    #0 0x7f7ce497c615 in __sanitizer::internal_strlen(char const*) ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164\n    #1 0x7f7ce48f284a in printf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:489\n    #2 0x7f7ce48f4762 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #3 0x7f7ce48f4bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #4 0x55ec86cc6954 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #5 0x55ec86cd29a9 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #6 0x55ec86cd0bdc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #7 0x55ec86cd111c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #8 0x55ec86cd1b4a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #9 0x55ec86cd2c5e in main tests_ref/test_list_item_to_string_longstr.c:38\n    #10 0x7f7ce4657fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #11 0x7f7ce465807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #12 0x55ec86cc6844 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_libc.cc:164 in __sanitizer::internal_strlen(char const*)\n==3872958==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[  FAILED  ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"3. 16 * (null) @ $1.000000 ea2. 48 * (null) @ $2.000000 ea4. 80 * (null) @ $3.000000 ea\" != \"1: 3 * banana @ $1.00 ea\n2: 2 * orange @ $2.00 ea\n3: 4 * apple @ $3.00 ea\n\"\n[   LINE   ] --- tests_ref/test_list_print.c:34: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[       OK ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873060==ERROR: AddressSanitizer: SEGV on unknown address 0x56397535e40c (pc 0x563975351914 bp 0x7ffeeef93dc0 sp 0x7ffeeef93dc0 T0)\n==3873060==The signal is caused by a WRITE memory access.\n    #0 0x563975351913 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:37\n    #1 0x56397535d8d6 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:27\n    #2 0x56397535bbb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56397535c0f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56397535cb1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56397535dc59 in main tests_ref/test_list_update_item_at_pos.c:38\n    #6 0x7fb473e1afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fb473e1b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563975351804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:37 in list_update_item_at_pos\n==3873060==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873123==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5559c1e268fd bp 0x7ffcc51b8cb0 sp 0x7ffcc51b8cb0 T0)\n==3873123==The signal is caused by a READ memory access.\n==3873123==Hint: address points to the zero page.\n    #0 0x5559c1e268fc in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:35\n    #1 0x5559c1e327c1 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x5559c1e30bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5559c1e310f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5559c1e31b1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5559c1e32970 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f84a8635fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f84a863607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5559c1e26804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:35 in list_update_item_at_pos\n==3873123==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873173==ERROR: AddressSanitizer: SEGV on unknown address 0x563e851c940c (pc 0x563e851bc914 bp 0x7ffd06a2a510 sp 0x7ffd06a2a510 T0)\n==3873173==The signal is caused by a WRITE memory access.\n    #0 0x563e851bc913 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:37\n    #1 0x563e851c88c6 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #2 0x563e851c6bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563e851c70f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563e851c7b1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563e851c8c49 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #6 0x7fc4bd652fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc4bd65307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563e851bc804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:37 in list_update_item_at_pos\n==3873173==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873246==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55ed53c44913 bp 0x7ffc9e255f70 sp 0x7ffc9e255f70 T0)\n==3873246==The signal is caused by a READ memory access.\n==3873246==Hint: address points to the zero page.\n    #0 0x55ed53c44912 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:38\n    #1 0x55ed53c50927 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:29\n    #2 0x55ed53c4eba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ed53c4f0e4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ed53c4fb12 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ed53c50d2d in main tests_ref/test_list_remove_item_at_pos.c:45\n    #6 0x7f7ee6aa6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f7ee6aa707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55ed53c44804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_remove_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:38 in list_remove_item_at_pos\n==3873246==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873298==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x558d31e12913 bp 0x7ffdeca20040 sp 0x7ffdeca20040 T0)\n==3873298==The signal is caused by a READ memory access.\n==3873298==Hint: address points to the zero page.\n    #0 0x558d31e12912 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:38\n    #1 0x558d31e1e795 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x558d31e1cba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x558d31e1d0e4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x558d31e1db12 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x558d31e1e944 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fa934df4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa934df507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x558d31e12804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:38 in list_remove_item_at_pos\n==3873298==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873356==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55bebe05e8fc bp 0x7fff891773f0 sp 0x7fff891773f0 T0)\n==3873356==The signal is caused by a READ memory access.\n==3873356==Hint: address points to the zero page.\n    #0 0x55bebe05e8fb in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:36\n    #1 0x55bebe06a8a7 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55bebe068ba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55bebe0690e4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55bebe069b12 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55bebe06acc2 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7f2931bb4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f2931bb507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55bebe05e804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:36 in list_remove_item_at_pos\n==3873356==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873411==ERROR: AddressSanitizer: SEGV on unknown address 0x5594f048f410 (pc 0x5594f0481987 bp 0x7ffd19f9de20 sp 0x7ffd19f9de20 T0)\n==3873411==The signal is caused by a WRITE memory access.\n    #0 0x5594f0481986 in list_swap_item_positions parts/gen_list_swap_item_positions.c:52\n    #1 0x5594f048d9bc in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #2 0x5594f048bc34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5594f048c174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5594f048cba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5594f048e10e in main tests_ref/test_list_swap_item_positions.c:47\n    #6 0x7f3efcba6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f3efcba707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5594f0481804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_swap_item_positions.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:52 in list_swap_item_positions\n==3873411==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873474==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x560b61da6941 bp 0x7ffd41e4f840 sp 0x7ffd41e4f840 T0)\n==3873474==The signal is caused by a READ memory access.\n==3873474==Hint: address points to the zero page.\n    #0 0x560b61da6940 in list_swap_item_positions parts/gen_list_swap_item_positions.c:44\n    #1 0x560b61db282a in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x560b61db0c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x560b61db1174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x560b61db1ba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x560b61db29d9 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fa7534aafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa7534ab07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x560b61da6804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:44 in list_swap_item_positions\n==3873474==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3873529==ERROR: AddressSanitizer: SEGV on unknown address 0x563a0bb41410 (pc 0x563a0bb34987 bp 0x7ffecf85ed90 sp 0x7ffecf85ed90 T0)\n==3873529==The signal is caused by a WRITE memory access.\n    #0 0x563a0bb34986 in list_swap_item_positions parts/gen_list_swap_item_positions.c:52\n    #1 0x563a0bb4097c in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:27\n    #2 0x563a0bb3ec34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563a0bb3f174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563a0bb3fba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563a0bb40d84 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7fe4808d3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe4808d407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563a0bb34804 in _start (/home/gustavo/git/codex_study_grading/repos/5a790fe9-4950-4f24-903a-a7440f7f826f/tests_ref/test_list_swap_item_positions_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:52 in list_swap_item_positions\n==3873529==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[  FAILED  ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x3\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[  FAILED  ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullpos.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullpos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": "timeout",
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n",
            "stderr": "",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "timeout",
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_longitem": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badparse": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_missingfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_single": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nodups": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        }
    },
    "passed": 2,
    "total": 45,
    "passed_functional": 1,
    "total_functional": 26
}
