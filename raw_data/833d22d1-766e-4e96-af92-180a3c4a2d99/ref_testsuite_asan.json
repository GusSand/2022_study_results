{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815618==ERROR: AddressSanitizer: SEGV on unknown address 0x55e45e639710 (pc 0x7fd0cecaea16 bp 0x55e45e639710 sp 0x7ffcf7fcd330 T0)\n==3815618==The signal is caused by a WRITE memory access.\n    #0 0x7fd0cecaea15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fd0cecaea15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fd0cecaea15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fd0cecaea15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fd0ced933d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55e45e6353c9 in list_free test_common.h:35\n    #6 0x55e45e635cef in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x55e45e633bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55e45e63412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55e45e634b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55e45e635ef0 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7fd0cea87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fd0cea8807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55e45e629804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3815618==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815850==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561112b5f930 bp 0x7ffd1408b640 sp 0x7ffd1408b610 T0)\n==3815850==The signal is caused by a READ memory access.\n==3815850==Hint: address points to the zero page.\n    #0 0x561112b5f92f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x561112b6b7ef in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x561112b69bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561112b6a12a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561112b6ab58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561112b6b99e in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f5b84699fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f5b8469a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561112b5f804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3815850==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816124==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f28c3b7b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5595278d5904 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:41\n    #2 0x5595278e18bd in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x5595278dfbea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5595278e012a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5595278e0b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5595278e1abe in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f28c386ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816419==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5629c6a6d951 bp 0x7fff52cf8580 sp 0x7fff52cf8550 T0)\n==3816419==The signal is caused by a READ memory access.\n==3816419==Hint: address points to the zero page.\n    #0 0x5629c6a6d950 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:50\n    #1 0x5629c6a79902 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:26\n    #2 0x5629c6a77bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5629c6a7812a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5629c6a78b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5629c6a79b8d in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #6 0x7fce2ab97fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fce2ab9807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5629c6a6d804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:50 in list_add_item_at_pos\n==3816419==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816684==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55cf18ff5901 bp 0x7ffe2d13ffd0 sp 0x7ffe2d13ffc0 T0)\n==3816684==The signal is caused by a READ memory access.\n==3816684==Hint: address points to the zero page.\n    #0 0x55cf18ff5900 in list_item_to_string parts/gen_list_item_to_string.c:30\n    #1 0x55cf19001837 in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x55cf18fffbbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55cf190000fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55cf19000b2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55cf19001a66 in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7f137f9d5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f137f9d607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55cf18ff5824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:30 in list_item_to_string\n==3816684==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816949==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f98edb40667 bp 0x000000000031 sp 0x7ffedf814180 T0)\n==3816949==The signal is caused by a WRITE memory access.\n==3816949==Hint: address points to the zero page.\n    #0 0x7f98edb40666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f98edb3ede3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f98edb3ede3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f98edb26b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f98edb26b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f98edb32ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f98edb32ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f98edd77664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f98edd77bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55bf3e29192f in list_item_to_string parts/gen_list_item_to_string.c:30\n    #10 0x55bf3e29d8e2 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x55bf3e29bbbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x55bf3e29c0fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x55bf3e29cb2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x55bf3e29db09 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f98edadafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f98edadb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55bf3e291824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3816949==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3817427==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff0b1d39d4 at pc 0x7f7ac7fce725 bp 0x7fff0b1d37e0 sp 0x7fff0b1d2f70\nWRITE of size 527 at 0x7fff0b1d39d4 thread T0\n    #0 0x7f7ac7fce724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f7ac7fcebde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55894cade94f in list_item_to_string parts/gen_list_item_to_string.c:30\n    #3 0x55894caea9a9 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55894cae8bdc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55894cae911c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55894cae9b4a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55894caeac5e in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f7ac7d31fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f7ac7d3207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55894cade844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7fff0b1d39d4 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55894caea7be in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x1000616326e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000616326f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632720: 00 00 f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00\n=>0x100061632730: 00 00 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2\n  0x100061632740: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100061632780: 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3817427==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817844==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55ca32d6f927 bp 0x7ffc196f8ad0 sp 0x7ffc196f8a80 T0)\n==3817844==The signal is caused by a READ memory access.\n==3817844==Hint: address points to the zero page.\n    #0 0x55ca32d6f926 in list_print parts/gen_list_print.c:45\n    #1 0x55ca32d7b7bb in test_list_print_nullhead tests_ref/test_list_print_nullhead.c:23\n    #2 0x55ca32d79bcf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ca32d7a10f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ca32d7ab3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ca32d7b96a in main tests_ref/test_list_print_nullhead.c:30\n    #6 0x7f218e069fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f218e06a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55ca32d6f804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_print_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_print.c:45 in list_print\n==3817844==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n",
            "stderr": "=================================================================\n==3818091==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818099==ERROR: AddressSanitizer: SEGV on unknown address 0x563c31fb5750 (pc 0x7f1d4301fa16 bp 0x563c31fb5750 sp 0x7ffe1b90df10 T0)\n==3818099==The signal is caused by a WRITE memory access.\n    #0 0x7f1d4301fa15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f1d4301fa15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f1d4301fa15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f1d4301fa15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f1d431043d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x563c31fb13f7 in list_free test_common.h:35\n    #6 0x563c31fb1abf in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x563c31fafc18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x563c31fb0158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x563c31fb0b86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x563c31fb1cc0 in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7f1d42df8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f1d42df907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x563c31fa5804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3818099==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818338==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5614c54a4949 bp 0x7ffda0d52120 sp 0x7ffda0d520f0 T0)\n==3818338==The signal is caused by a READ memory access.\n==3818338==Hint: address points to the zero page.\n    #0 0x5614c54a4948 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:37\n    #1 0x5614c54b0828 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x5614c54aec18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5614c54af158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5614c54afb86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5614c54b09d7 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7fa02eb38fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa02eb3907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5614c54a4804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:37 in list_update_item_at_pos\n==3818338==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818551==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0f45501808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x564bfb36a91d in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:33\n    #2 0x564bfb37692d in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #3 0x564bfb374c18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x564bfb375158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x564bfb375b86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x564bfb376cb0 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f0f451f5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818763==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x556232c8197b bp 0x7ffc16f597d0 sp 0x7ffc16f597a0 T0)\n==3818763==The signal is caused by a READ memory access.\n==3818763==Hint: address points to the zero page.\n    #0 0x556232c8197a in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:43\n    #1 0x556232c8d97d in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:28\n    #2 0x556232c8bc18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x556232c8c158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x556232c8cb86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x556232c8dd40 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7f6530d74fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f6530d7507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x556232c81804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:43 in list_update_item_at_pos\n==3818763==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[  FAILED  ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head->next->next\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818998==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1ab7808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55988bddbe27 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x55988bde78c4 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1ab7808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55988bddbe27 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x55988bde7904 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1ab7808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55988bddbe27 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x55988bde7944 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1a403ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55988bddbe48 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x55988bde7944 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1a403ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55988bddbe48 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x55988bde7904 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f45a1a403ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55988bddbe48 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x55988bde78c4 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x55988bde5bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55988bde612d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55988bde6b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55988bde7d76 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f45a17abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819363==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55dabc6118e0 bp 0x7ffcc0988000 sp 0x7ffcc0987fd0 T0)\n==3819363==The signal is caused by a READ memory access.\n==3819363==Hint: address points to the zero page.\n    #0 0x55dabc6118df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:27\n    #1 0x55dabc61d7de in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55dabc61bbed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55dabc61c12d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55dabc61cb5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55dabc61d98d in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f86f63defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f86f63df07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55dabc611804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:27 in list_remove_item_at_pos\n==3819363==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3819553==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2840a1c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55c82e9fae27 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x55c82ea068c4 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55c82ea04bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55c82ea0512d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55c82ea05b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55c82ea06d0b in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f2840710fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f28409a53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55c82e9fae48 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x55c82ea068c4 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55c82ea04bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55c82ea0512d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55c82ea05b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55c82ea06d0b in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f2840710fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819950==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555c585b98f9 bp 0x7ffe4be8d730 sp 0x7ffe4be8d730 T0)\n==3819950==The signal is caused by a READ memory access.\n==3819950==Hint: address points to the zero page.\n    #0 0x555c585b98f8 in list_swap_item_positions parts/gen_list_swap_item_positions.c:29\n    #1 0x555c585c5867 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x555c585c3c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x555c585c41b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x555c585c4bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x555c585c5a16 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f92e95ecfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f92e95ed07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x555c585b9804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:29 in list_swap_item_positions\n==3819950==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[  FAILED  ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_swap_item_positions_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3820150==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f08bdb76808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5631362c8eab in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x5631362d4948 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x5631362d2c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5631362d31b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5631362d3bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5631362d4dc1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f08bd86afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f08bdb76808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5631362c8eab in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x5631362d4988 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x5631362d2c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5631362d31b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5631362d3bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5631362d4dc1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f08bd86afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f08bdaff3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5631362c8ecc in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x5631362d4988 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x5631362d2c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5631362d31b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5631362d3bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5631362d4dc1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f08bd86afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f08bdaff3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5631362c8ecc in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x5631362d4948 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x5631362d2c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5631362d31b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5631362d3bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5631362d4dc1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f08bd86afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820502==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x559a10d7b933 bp 0x7fffac82fc30 sp 0x7fffac82fc30 T0)\n==3820502==The signal is caused by a WRITE memory access.\n==3820502==Hint: address points to the zero page.\n    #0 0x559a10d7b932 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:39\n    #1 0x559a10d8789b in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x559a10d85bb6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x559a10d860f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559a10d86b24 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x559a10d87a9a in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7fdc0fdb3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fdc0fdb407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x559a10d7b804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:39 in list_find_highest_price_item_position\n==3820502==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820770==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x557550edf926 bp 0x7fff81878920 sp 0x7fff81878920 T0)\n==3820770==The signal is caused by a WRITE memory access.\n==3820770==Hint: address points to the zero page.\n    #0 0x557550edf925 in list_cost_sum parts/gen_list_cost_sum.c:33\n    #1 0x557550eeb953 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x557550ee9bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557550eea0eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557550eeab19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557550eebb7a in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f77971cafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f77971cb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x557550edf804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:33 in list_cost_sum\n==3820770==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821007==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fbd52b19d1b bp 0x000000000000 sp 0x7ffcff9d2c80 T0)\n==3821007==The signal is caused by a READ memory access.\n==3821007==Hint: address points to the zero page.\n    #0 0x7fbd52b19d1a in _IO_new_fclose libio/iofclose.c:34\n    #1 0x7fbd52dce548 in __interceptor_fclose ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:5899\n    #2 0x7fbd52dce548 in __interceptor_fclose ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:5894\n    #3 0x55f5486d0947 in list_save parts/gen_list_save.c:40\n    #4 0x55f5486dc7e8 in test_list_save_nullhead tests_ref/test_list_save_nullhead.c:23\n    #5 0x55f5486dabc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55f5486db109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55f5486dbb37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55f5486dc997 in main tests_ref/test_list_save_nullhead.c:30\n    #9 0x7fbd52ac4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fbd52ac507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55f5486d0804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iofclose.c:34 in _IO_new_fclose\n==3821007==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821351==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7f4daab45fa5 bp 0x000000000000 sp 0x7ffc771e9be0 T0)\n==3821351==The signal is caused by a READ memory access.\n==3821351==Hint: address points to the zero page.\n    #0 0x7f4daab45fa4 in __vfprintf_internal stdio-common/vfprintf-internal.c:1351\n    #1 0x7f4daad96f88 in __interceptor_vfprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1604\n    #2 0x7f4daad970be in __interceptor_fprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1661\n    #3 0x55b07ab13928 in list_save parts/gen_list_save.c:36\n    #4 0x55b07ab1f8ef in test_list_save_nullfilename tests_ref/test_list_save_nullfilename.c:26\n    #5 0x55b07ab1dbc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55b07ab1e109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55b07ab1eb37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55b07ab1fb16 in main tests_ref/test_list_save_nullfilename.c:34\n    #9 0x7f4daaafafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f4daaafb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55b07ab13804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_nullfilename.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfprintf-internal.c:1351 in __vfprintf_internal\n==3821351==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821696==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7fa2b9750fa5 bp 0x000000000000 sp 0x7fff2e0804b0 T0)\n==3821696==The signal is caused by a READ memory access.\n==3821696==Hint: address points to the zero page.\n    #0 0x7fa2b9750fa4 in __vfprintf_internal stdio-common/vfprintf-internal.c:1351\n    #1 0x7fa2b99a1f88 in __interceptor_vfprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1604\n    #2 0x7fa2b99a20be in __interceptor_fprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1661\n    #3 0x563635b51948 in list_save parts/gen_list_save.c:36\n    #4 0x563635b5d9e1 in test_list_save_badfile tests_ref/test_list_save_badfile.c:31\n    #5 0x563635b5bbe9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x563635b5c129 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x563635b5cb57 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x563635b5dc0e in main tests_ref/test_list_save_badfile.c:39\n    #9 0x7fa2b9705fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fa2b970607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x563635b51824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_badfile.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfprintf-internal.c:1351 in __vfprintf_internal\n==3821696==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3822044==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 300 byte(s) in 3 object(s) allocated from:\n    #0 0x7f9df913a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x562936ba598c in list_load parts/gen_list_load.c:45\n    #2 0x562936bb19e0 in test_list_load tests_ref/test_list_load.c:27\n    #3 0x562936bafc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562936bb01c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562936bb0bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562936bb24f1 in main tests_ref/test_list_load.c:53\n    #7 0x7f9df8e2efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 300 byte(s) leaked in 3 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822271==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5637e0c70930 bp 0x7ffc0a8b8760 sp 0x7ffc0a8b8710 T0)\n==3822271==The signal is caused by a READ memory access.\n==3822271==Hint: address points to the zero page.\n    #0 0x5637e0c7092f in list_load parts/gen_list_load.c:31\n    #1 0x5637e0c7c886 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x5637e0c7ac88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5637e0c7b1c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5637e0c7bbf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5637e0c7ca35 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f0c174fcfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f0c174fd07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5637e0c70844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_nullhead.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:31 in list_load\n==3822271==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822498==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f769e683354 bp 0x7ffe1cb9ff80 sp 0x7ffe1cb9ff28 T0)\n==3822498==The signal is caused by a READ memory access.\n==3822498==Hint: address points to the zero page.\n    #0 0x7f769e683353 in _IO_feof libio/feof.c:32\n    #1 0x56091f6829e2 in list_load parts/gen_list_load.c:44\n    #2 0x56091f68e91d in test_list_load_nullfilename tests_ref/test_list_load_nullfilename.c:24\n    #3 0x56091f68cc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56091f68d1c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56091f68dbf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56091f68eb1c in main tests_ref/test_list_load_nullfilename.c:31\n    #7 0x7f769e625fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f769e62607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x56091f682844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_nullfilename.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3822498==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "=================================================================\n==3822705==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b000000154 at pc 0x7f1317a7f4fd bp 0x7ffe34294ff0 sp 0x7ffe34294778\nWRITE of size 512 at 0x60b000000154 thread T0\n    #0 0x7f1317a7f4fc in scanf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341\n    #1 0x7f1317a80a4f in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7f1317a80b5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x564ada7339d7 in list_load parts/gen_list_load.c:46\n    #4 0x564ada73fa46 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #5 0x564ada73dca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x564ada73e1e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x564ada73ec16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x564ada73fe55 in main tests_ref/test_list_load_longitem.c:40\n    #9 0x7f1317812fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f131781307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x564ada733864 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_longitem.bin+0x6864)\n\n0x60b000000154 is located 0 bytes to the right of 100-byte region [0x60b0000000f0,0x60b000000154)\nallocated by thread T0 here:\n    #0 0x7f1317b1e808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x564ada7339ac in list_load parts/gen_list_load.c:45\n    #2 0x564ada73fa46 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #3 0x564ada73dca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x564ada73e1e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x564ada73ec16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x564ada73fe55 in main tests_ref/test_list_load_longitem.c:40\n    #7 0x7f1317812fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341 in scanf_common\nShadow bytes around the buggy address:\n  0x0c167fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff8000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c167fff8010: fd fd fd fd fd fa fa fa fa fa fa fa fa fa 00 00\n=>0x0c167fff8020: 00 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa\n  0x0c167fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3822705==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3823098==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 200 byte(s) in 2 object(s) allocated from:\n    #0 0x7f28b422c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558c0818598c in list_load parts/gen_list_load.c:45\n    #2 0x558c081919e0 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x558c0818fc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558c081901c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558c08190bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558c08191dd7 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f28b3f20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f28b422c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558c08185ec2 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x558c081919af in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x558c0818fc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558c081901c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558c08190bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558c08191dd7 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f28b3f20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 48 byte(s) in 2 object(s) allocated from:\n    #0 0x7f28b422c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558c08185ec2 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x558c081859d2 in list_load parts/gen_list_load.c:47\n    #3 0x558c081919e0 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x558c0818fc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x558c081901c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x558c08190bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x558c08191dd7 in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f28b3f20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 20 byte(s) in 2 object(s) allocated from:\n    #0 0x7f28b41b53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558c08185ee3 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x558c081859d2 in list_load parts/gen_list_load.c:47\n    #3 0x558c081919e0 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x558c0818fc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x558c081901c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x558c08190bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x558c08191dd7 in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f28b3f20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f28b41b53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558c08185ee3 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x558c081919af in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x558c0818fc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558c081901c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558c08190bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558c08191dd7 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f28b3f20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 298 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823502==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f4456c05354 bp 0x7ffd815d94a0 sp 0x7ffd815d9448 T0)\n==3823502==The signal is caused by a READ memory access.\n==3823502==Hint: address points to the zero page.\n    #0 0x7f4456c05353 in _IO_feof libio/feof.c:32\n    #1 0x563236fb2a02 in list_load parts/gen_list_load.c:44\n    #2 0x563236fbea3b in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #3 0x563236fbcca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563236fbd1e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563236fbdc16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563236fbec42 in main tests_ref/test_list_load_badfile.c:37\n    #7 0x7f4456ba7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f4456ba807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x563236fb2864 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_badfile.bin+0x6864)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3823502==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823737==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f1ee61f9354 bp 0x7ffeec518c60 sp 0x7ffeec518c08 T0)\n==3823737==The signal is caused by a READ memory access.\n==3823737==Hint: address points to the zero page.\n    #0 0x7f1ee61f9353 in _IO_feof libio/feof.c:32\n    #1 0x560e444b89e2 in list_load parts/gen_list_load.c:44\n    #2 0x560e444c49a2 in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #3 0x560e444c2c88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560e444c31c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560e444c3bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560e444c4ba3 in main tests_ref/test_list_load_missingfile.c:36\n    #7 0x7f1ee619bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f1ee619c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x560e444b8844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_missingfile.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3823737==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3823981==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f27e4c65808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5640d9fe4ec1 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:114\n    #2 0x5640d9ff099e in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x5640d9feec87 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5640d9fef1c7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5640d9fefbf5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5640d9ff0db6 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f27e4959fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f27e4bee3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5640d9fe4ee2 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/reflist.c:118\n    #2 0x5640d9ff099e in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x5640d9feec87 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5640d9fef1c7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5640d9fefbf5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5640d9ff0db6 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f27e4959fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3824378==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a771e608eb bp 0x7ffd7d0cb1d0 sp 0x7ffd7d0cb190 T0)\n==3824378==The signal is caused by a READ memory access.\n==3824378==Hint: address points to the zero page.\n    #0 0x55a771e608ea in list_deduplicate parts/gen_list_deduplicate.c:33\n    #1 0x55a771e6c873 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55a771e6ac87 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a771e6b1c7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a771e6bbf5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a771e6ca22 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fd573f59fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fd573f5a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a771e60804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:33 in list_deduplicate\n==3824378==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 9,
    "total": 45,
    "passed_functional": 9,
    "total_functional": 26
}
