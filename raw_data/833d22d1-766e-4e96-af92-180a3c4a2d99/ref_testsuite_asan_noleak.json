{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3824685==ERROR: AddressSanitizer: SEGV on unknown address 0x5600ac921710 (pc 0x7fa81f08fa16 bp 0x5600ac921710 sp 0x7fff1f981cc0 T0)\n==3824685==The signal is caused by a WRITE memory access.\n    #0 0x7fa81f08fa15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fa81f08fa15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fa81f08fa15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fa81f08fa15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fa81f1743d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x5600ac91d3c9 in list_free test_common.h:35\n    #6 0x5600ac91dcef in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x5600ac91bbea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x5600ac91c12a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x5600ac91cb58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x5600ac91def0 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7fa81ee68fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fa81ee6907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x5600ac911804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3824685==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3824919==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x564d3202b930 bp 0x7ffc49a9ae30 sp 0x7ffc49a9ae00 T0)\n==3824919==The signal is caused by a READ memory access.\n==3824919==Hint: address points to the zero page.\n    #0 0x564d3202b92f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x564d320377ef in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x564d32035bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x564d3203612a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564d32036b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564d3203799e in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f55b3852fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f55b385307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x564d3202b804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3824919==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3825145==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55b2edbf9951 bp 0x7ffda11e2590 sp 0x7ffda11e2560 T0)\n==3825145==The signal is caused by a READ memory access.\n==3825145==Hint: address points to the zero page.\n    #0 0x55b2edbf9950 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:50\n    #1 0x55b2edc05902 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:26\n    #2 0x55b2edc03bea in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b2edc0412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b2edc04b58 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b2edc05b8d in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #6 0x7effd6098fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7effd609907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55b2edbf9804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_add_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:50 in list_add_item_at_pos\n==3825145==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3825359==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x56440be93901 bp 0x7fff13b03f60 sp 0x7fff13b03f50 T0)\n==3825359==The signal is caused by a READ memory access.\n==3825359==Hint: address points to the zero page.\n    #0 0x56440be93900 in list_item_to_string parts/gen_list_item_to_string.c:30\n    #1 0x56440be9f837 in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x56440be9dbbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56440be9e0fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56440be9eb2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56440be9fa66 in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7f0bbb7dafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f0bbb7db07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x56440be93824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:30 in list_item_to_string\n==3825359==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3825566==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fadb2791667 bp 0x000000000031 sp 0x7ffe6cad7a60 T0)\n==3825566==The signal is caused by a WRITE memory access.\n==3825566==Hint: address points to the zero page.\n    #0 0x7fadb2791666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7fadb278fde3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7fadb278fde3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7fadb2777b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7fadb2777b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7fadb2783ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7fadb2783ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7fadb29c8664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7fadb29c8bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55e334da692f in list_item_to_string parts/gen_list_item_to_string.c:30\n    #10 0x55e334db28e2 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x55e334db0bbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x55e334db10fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x55e334db1b2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x55e334db2b09 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7fadb272bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7fadb272c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55e334da6824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3825566==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3825887==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd16b9b644 at pc 0x7f7ec2b50725 bp 0x7ffd16b9b450 sp 0x7ffd16b9abe0\nWRITE of size 527 at 0x7ffd16b9b644 thread T0\n    #0 0x7f7ec2b50724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f7ec2b50bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55ecba81e94f in list_item_to_string parts/gen_list_item_to_string.c:30\n    #3 0x55ecba82a9a9 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55ecba828bdc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55ecba82911c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55ecba829b4a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55ecba82ac5e in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f7ec28b3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f7ec28b407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55ecba81e844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffd16b9b644 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55ecba82a7be in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100022d6b670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b6b0: f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n=>0x100022d6b6c0: 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2\n  0x100022d6b6d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b6e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b6f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100022d6b710: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3825887==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826205==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x561441fc3927 bp 0x7ffe554b8680 sp 0x7ffe554b8630 T0)\n==3826205==The signal is caused by a READ memory access.\n==3826205==Hint: address points to the zero page.\n    #0 0x561441fc3926 in list_print parts/gen_list_print.c:45\n    #1 0x561441fcf7bb in test_list_print_nullhead tests_ref/test_list_print_nullhead.c:23\n    #2 0x561441fcdbcf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561441fce10f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561441fceb3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561441fcf96a in main tests_ref/test_list_print_nullhead.c:30\n    #6 0x7fc2ebab2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc2ebab307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561441fc3804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_print_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_print.c:45 in list_print\n==3826205==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n",
            "stderr": "=================================================================\n==3826379==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826392==ERROR: AddressSanitizer: SEGV on unknown address 0x556527e33750 (pc 0x7f28ee952a16 bp 0x556527e33750 sp 0x7ffdd5de8250 T0)\n==3826392==The signal is caused by a WRITE memory access.\n    #0 0x7f28ee952a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f28ee952a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f28ee952a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f28ee952a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f28eea373d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x556527e2f3f7 in list_free test_common.h:35\n    #6 0x556527e2fabf in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x556527e2dc18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x556527e2e158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x556527e2eb86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x556527e2fcc0 in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7f28ee72bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f28ee72c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x556527e23804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3826392==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826615==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x564fb7b38949 bp 0x7fff8378b1b0 sp 0x7fff8378b180 T0)\n==3826615==The signal is caused by a READ memory access.\n==3826615==Hint: address points to the zero page.\n    #0 0x564fb7b38948 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:37\n    #1 0x564fb7b44828 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x564fb7b42c18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x564fb7b43158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564fb7b43b86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564fb7b449d7 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f1143d0bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f1143d0c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x564fb7b38804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:37 in list_update_item_at_pos\n==3826615==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826832==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x562326fe997b bp 0x7ffc9d2dfc40 sp 0x7ffc9d2dfc10 T0)\n==3826832==The signal is caused by a READ memory access.\n==3826832==Hint: address points to the zero page.\n    #0 0x562326fe997a in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:43\n    #1 0x562326ff597d in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:28\n    #2 0x562326ff3c18 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x562326ff4158 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x562326ff4b86 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x562326ff5d40 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7feb3de43fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7feb3de4407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x562326fe9804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_update_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:43 in list_update_item_at_pos\n==3826832==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[  FAILED  ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head->next->next\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826968==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561d8effe8e0 bp 0x7ffd4d4705b0 sp 0x7ffd4d470580 T0)\n==3826968==The signal is caused by a READ memory access.\n==3826968==Hint: address points to the zero page.\n    #0 0x561d8effe8df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:27\n    #1 0x561d8f00a7de in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x561d8f008bed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561d8f00912d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561d8f009b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561d8f00a98d in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fd717e60fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fd717e6107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561d8effe804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:27 in list_remove_item_at_pos\n==3826968==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3827148==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55c5915a68f9 bp 0x7ffca972a570 sp 0x7ffca972a570 T0)\n==3827148==The signal is caused by a READ memory access.\n==3827148==Hint: address points to the zero page.\n    #0 0x55c5915a68f8 in list_swap_item_positions parts/gen_list_swap_item_positions.c:29\n    #1 0x55c5915b2867 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x55c5915b0c71 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55c5915b11b1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55c5915b1bdf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55c5915b2a16 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7eff5b23dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7eff5b23e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55c5915a6804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:29 in list_swap_item_positions\n==3827148==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[  FAILED  ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_swap_item_positions_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3827323==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55d70aa0e933 bp 0x7ffdb8012310 sp 0x7ffdb8012310 T0)\n==3827323==The signal is caused by a WRITE memory access.\n==3827323==Hint: address points to the zero page.\n    #0 0x55d70aa0e932 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:39\n    #1 0x55d70aa1a89b in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55d70aa18bb6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55d70aa190f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55d70aa19b24 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55d70aa1aa9a in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7f38a01aafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f38a01ab07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55d70aa0e804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:39 in list_find_highest_price_item_position\n==3827323==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3827513==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5644053fa926 bp 0x7fff2062db90 sp 0x7fff2062db90 T0)\n==3827513==The signal is caused by a WRITE memory access.\n==3827513==Hint: address points to the zero page.\n    #0 0x5644053fa925 in list_cost_sum parts/gen_list_cost_sum.c:33\n    #1 0x564405406953 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x564405404bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5644054050eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564405405b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564405406b7a in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7fa30bc2afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa30bc2b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5644053fa804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:33 in list_cost_sum\n==3827513==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3827656==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f831c0e2d1b bp 0x000000000000 sp 0x7ffe51787140 T0)\n==3827656==The signal is caused by a READ memory access.\n==3827656==Hint: address points to the zero page.\n    #0 0x7f831c0e2d1a in _IO_new_fclose libio/iofclose.c:34\n    #1 0x7f831c397548 in __interceptor_fclose ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:5899\n    #2 0x7f831c397548 in __interceptor_fclose ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:5894\n    #3 0x555a9aaba947 in list_save parts/gen_list_save.c:40\n    #4 0x555a9aac67e8 in test_list_save_nullhead tests_ref/test_list_save_nullhead.c:23\n    #5 0x555a9aac4bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x555a9aac5109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x555a9aac5b37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x555a9aac6997 in main tests_ref/test_list_save_nullhead.c:30\n    #9 0x7f831c08dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f831c08e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x555a9aaba804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iofclose.c:34 in _IO_new_fclose\n==3827656==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3827918==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7f69552d6fa5 bp 0x000000000000 sp 0x7ffc2de540e0 T0)\n==3827918==The signal is caused by a READ memory access.\n==3827918==Hint: address points to the zero page.\n    #0 0x7f69552d6fa4 in __vfprintf_internal stdio-common/vfprintf-internal.c:1351\n    #1 0x7f6955527f88 in __interceptor_vfprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1604\n    #2 0x7f69555280be in __interceptor_fprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1661\n    #3 0x55c8e96d7928 in list_save parts/gen_list_save.c:36\n    #4 0x55c8e96e38ef in test_list_save_nullfilename tests_ref/test_list_save_nullfilename.c:26\n    #5 0x55c8e96e1bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55c8e96e2109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55c8e96e2b37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55c8e96e3b16 in main tests_ref/test_list_save_nullfilename.c:34\n    #9 0x7f695528bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f695528c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55c8e96d7804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_nullfilename.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfprintf-internal.c:1351 in __vfprintf_internal\n==3827918==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3828190==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7f0f4b9d7fa5 bp 0x000000000000 sp 0x7ffc338f4680 T0)\n==3828190==The signal is caused by a READ memory access.\n==3828190==Hint: address points to the zero page.\n    #0 0x7f0f4b9d7fa4 in __vfprintf_internal stdio-common/vfprintf-internal.c:1351\n    #1 0x7f0f4bc28f88 in __interceptor_vfprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1604\n    #2 0x7f0f4bc290be in __interceptor_fprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1661\n    #3 0x5556e75cf948 in list_save parts/gen_list_save.c:36\n    #4 0x5556e75db9e1 in test_list_save_badfile tests_ref/test_list_save_badfile.c:31\n    #5 0x5556e75d9be9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x5556e75da129 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x5556e75dab57 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x5556e75dbc0e in main tests_ref/test_list_save_badfile.c:39\n    #9 0x7f0f4b98cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f0f4b98d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x5556e75cf824 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_save_badfile.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfprintf-internal.c:1351 in __vfprintf_internal\n==3828190==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3828430==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a18f75e930 bp 0x7ffc688d53d0 sp 0x7ffc688d5380 T0)\n==3828430==The signal is caused by a READ memory access.\n==3828430==Hint: address points to the zero page.\n    #0 0x55a18f75e92f in list_load parts/gen_list_load.c:31\n    #1 0x55a18f76a886 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x55a18f768c88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a18f7691c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a18f769bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a18f76aa35 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f78295b5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f78295b607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a18f75e844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_nullhead.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:31 in list_load\n==3828430==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3828577==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fbb5d1f1354 bp 0x7ffdb7bca920 sp 0x7ffdb7bca8c8 T0)\n==3828577==The signal is caused by a READ memory access.\n==3828577==Hint: address points to the zero page.\n    #0 0x7fbb5d1f1353 in _IO_feof libio/feof.c:32\n    #1 0x56239c5f59e2 in list_load parts/gen_list_load.c:44\n    #2 0x56239c60191d in test_list_load_nullfilename tests_ref/test_list_load_nullfilename.c:24\n    #3 0x56239c5ffc88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56239c6001c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56239c600bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56239c601b1c in main tests_ref/test_list_load_nullfilename.c:31\n    #7 0x7fbb5d193fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7fbb5d19407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x56239c5f5844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_nullfilename.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3828577==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "=================================================================\n==3828751==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b000000154 at pc 0x7ff3d77b44fd bp 0x7ffecd999460 sp 0x7ffecd998be8\nWRITE of size 512 at 0x60b000000154 thread T0\n    #0 0x7ff3d77b44fc in scanf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341\n    #1 0x7ff3d77b5a4f in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7ff3d77b5b5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x55ae68fab9d7 in list_load parts/gen_list_load.c:46\n    #4 0x55ae68fb7a46 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #5 0x55ae68fb5ca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55ae68fb61e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55ae68fb6c16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55ae68fb7e55 in main tests_ref/test_list_load_longitem.c:40\n    #9 0x7ff3d7547fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7ff3d754807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55ae68fab864 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_longitem.bin+0x6864)\n\n0x60b000000154 is located 0 bytes to the right of 100-byte region [0x60b0000000f0,0x60b000000154)\nallocated by thread T0 here:\n    #0 0x7ff3d7853808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55ae68fab9ac in list_load parts/gen_list_load.c:45\n    #2 0x55ae68fb7a46 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #3 0x55ae68fb5ca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55ae68fb61e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55ae68fb6c16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55ae68fb7e55 in main tests_ref/test_list_load_longitem.c:40\n    #7 0x7ff3d7547fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341 in scanf_common\nShadow bytes around the buggy address:\n  0x0c167fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff8000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c167fff8010: fd fd fd fd fd fa fa fa fa fa fa fa fa fa 00 00\n=>0x0c167fff8020: 00 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa\n  0x0c167fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3828751==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3829002==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fe1f996c354 bp 0x7ffe15624090 sp 0x7ffe15624038 T0)\n==3829002==The signal is caused by a READ memory access.\n==3829002==Hint: address points to the zero page.\n    #0 0x7fe1f996c353 in _IO_feof libio/feof.c:32\n    #1 0x555d6c502a02 in list_load parts/gen_list_load.c:44\n    #2 0x555d6c50ea3b in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #3 0x555d6c50cca8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555d6c50d1e8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555d6c50dc16 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555d6c50ec42 in main tests_ref/test_list_load_badfile.c:37\n    #7 0x7fe1f990efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7fe1f990f07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x555d6c502864 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_badfile.bin+0x6864)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3829002==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3829153==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f20a7472354 bp 0x7ffd1e7732a0 sp 0x7ffd1e773248 T0)\n==3829153==The signal is caused by a READ memory access.\n==3829153==Hint: address points to the zero page.\n    #0 0x7f20a7472353 in _IO_feof libio/feof.c:32\n    #1 0x55d0a809c9e2 in list_load parts/gen_list_load.c:44\n    #2 0x55d0a80a89a2 in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #3 0x55d0a80a6c88 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d0a80a71c8 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d0a80a7bf6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d0a80a8ba3 in main tests_ref/test_list_load_missingfile.c:36\n    #7 0x7f20a7414fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f20a741507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x55d0a809c844 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_load_missingfile.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/feof.c:32 in _IO_feof\n==3829153==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3829286==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55602a1b38eb bp 0x7ffde925aa40 sp 0x7ffde925aa00 T0)\n==3829286==The signal is caused by a READ memory access.\n==3829286==Hint: address points to the zero page.\n    #0 0x55602a1b38ea in list_deduplicate parts/gen_list_deduplicate.c:33\n    #1 0x55602a1bf873 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55602a1bdc87 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55602a1be1c7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55602a1bebf5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55602a1bfa22 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fed72edbfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fed72edc07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55602a1b3804 in _start (/home/gustavo/git/codex_study_grading/repos/833d22d1-766e-4e96-af92-180a3c4a2d99/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:33 in list_deduplicate\n==3829286==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 11,
    "total": 45,
    "passed_functional": 11,
    "total_functional": 26
}
