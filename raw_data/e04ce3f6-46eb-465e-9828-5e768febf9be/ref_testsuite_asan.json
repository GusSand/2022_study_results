{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821212==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5556d6d0395e bp 0x7ffd1f88a5e0 sp 0x7ffd1f88a5a0 T0)\n==3821212==The signal is caused by a READ memory access.\n==3821212==Hint: address points to the zero page.\n    #0 0x5556d6d0395d in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:44\n    #1 0x5556d6d0f86e in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x5556d6d0dc69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5556d6d0e1a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5556d6d0ebd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5556d6d0fa1d in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f6049cdbfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f6049cdc07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5556d6d03824 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:44 in list_add_item_at_pos\n==3821212==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821433==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f9dee2e705d bp 0x7ffefd198fa0 sp 0x7ffefd198708 T0)\n==3821433==The signal is caused by a READ memory access.\n==3821433==Hint: address points to the zero page.\n    #0 0x7f9dee2e705c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7f9dee40ecf5 in __interceptor_strcpy ../../../../src/libsanitizer/asan/asan_interceptors.cc:428\n    #2 0x562cd9037936 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #3 0x562cd904393c in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x562cd9041c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x562cd90421a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x562cd9042bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x562cd9043b3d in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7f9dee174fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f9dee17507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x562cd9037824 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3821433==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[       OK ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3821783==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d46911 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:37\n    #2 0x55aca2d529c2 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:27\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d46911 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:37\n    #2 0x55aca2d52981 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:26\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d46911 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:37\n    #2 0x55aca2d52940 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d4691f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55aca2d529c2 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:27\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d4691f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55aca2d52981 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:26\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb9f39db808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aca2d4691f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55aca2d52940 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x55aca2d50c69 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aca2d511a9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aca2d51bd7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aca2d52c0c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fb9f36cffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 96 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822072==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f9807bbf667 bp 0x000000000031 sp 0x7ffeacae7e40 T0)\n==3822072==The signal is caused by a WRITE memory access.\n==3822072==Hint: address points to the zero page.\n    #0 0x7f9807bbf666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f9807bbdde3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f9807bbdde3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f9807ba5b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f9807ba5b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f9807bb1ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f9807bb1ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f9807df6664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f9807df6bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55da262e393d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #10 0x55da262ef8e5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x55da262edbbf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x55da262ee0ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x55da262eeb2d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x55da262efb0c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f9807b59fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f9807b5a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55da262e3824 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3822072==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3822433==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffecbcd1dc4 at pc 0x7fa3ff7a2725 bp 0x7ffecbcd1bd0 sp 0x7ffecbcd1360\nWRITE of size 527 at 0x7ffecbcd1dc4 thread T0\n    #0 0x7fa3ff7a2724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7fa3ff7a2bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x560594d9f95d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #3 0x560594dab9ac in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x560594da9bdf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x560594daa11f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x560594daab4d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x560594dabc61 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7fa3ff505fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fa3ff50607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x560594d9f844 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffecbcd1dc4 is located in stack of thread T0 at offset 196 in frame\n    #0 0x560594dab7c1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100059792360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100059792370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100059792380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100059792390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000597923a0: f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n=>0x1000597923b0: 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2\n  0x1000597923c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000597923d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000597923e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000597923f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100059792400: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3822433==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3822792==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f4effdd0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5570936d7e23 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:114\n    #2 0x5570936e3947 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5570936e1be9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5570936e2129 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5570936e2b57 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5570936e3c58 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f4effac4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f4effd593ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5570936d7e44 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x5570936e3947 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5570936e1be9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5570936e2129 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5570936e2b57 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5570936e3c58 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f4effac4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3823195==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe53cb61808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555b42af296a in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:40\n    #2 0x555b42afe959 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:27\n    #3 0x555b42afcc34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555b42afd174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555b42afdba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555b42afecdc in main tests_ref/test_list_update_item_at_pos.c:38\n    #7 0x7fe53c855fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe53caea3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555b42af2e8f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x555b42afe90b in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:25\n    #3 0x555b42afcc34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555b42afd174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555b42afdba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555b42afecdc in main tests_ref/test_list_update_item_at_pos.c:38\n    #7 0x7fe53c855fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n[       OK ] test_list_update_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823617==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f23aa2b205d bp 0x7fff3fc74f60 sp 0x7fff3fc746c8 T0)\n==3823617==The signal is caused by a READ memory access.\n==3823617==Hint: address points to the zero page.\n    #0 0x7f23aa2b205c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7f23aa3d9cf5 in __interceptor_strcpy ../../../../src/libsanitizer/asan/asan_interceptors.cc:428\n    #2 0x55f2994d398f in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:42\n    #3 0x55f2994df949 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x55f2994ddc34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55f2994de174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55f2994deba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55f2994dfccc in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7f23aa13ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f23aa14007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55f2994d3824 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3823617==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:29: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3823991==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe3c3739808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bd05faa96a in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:40\n    #2 0x55bd05fb69d9 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:29\n    #3 0x55bd05fb4c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bd05fb5174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bd05fb5ba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bd05fb6d5c in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fe3c342dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe3c3739808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bd05faae6e in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:114\n    #2 0x55bd05fb6919 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x55bd05fb4c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bd05fb5174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bd05fb5ba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bd05fb6d5c in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fe3c342dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe3c36c23ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55bd05faae8f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x55bd05fb6919 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x55bd05fb4c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bd05fb5174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bd05fb5ba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bd05fb6d5c in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fe3c342dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe3c3739808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bd05faa978 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:41\n    #2 0x55bd05fb69d9 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:29\n    #3 0x55bd05fb4c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bd05fb5174 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bd05fb5ba2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bd05fb6d5c in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fe3c342dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 62 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3824386==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55e22c1ef992 bp 0x7ffdfeb5b2a0 sp 0x7ffdfeb5b270 T0)\n==3824386==The signal is caused by a WRITE memory access.\n==3824386==Hint: address points to the zero page.\n    #0 0x55e22c1ef991 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:52\n    #1 0x55e22c1fba65 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:32\n    #2 0x55e22c1f9c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e22c1fa163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e22c1fab91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e22c1fbdac in main tests_ref/test_list_remove_item_at_pos.c:45\n    #6 0x7fb6b1977fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fb6b197807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e22c1ef804 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_remove_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:52 in list_remove_item_at_pos\n==3824386==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n[       OK ] test_list_remove_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[       OK ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3824691==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56283089c8dc bp 0x7ffc0f5bce30 sp 0x7ffc0f5bce30 T0)\n==3824691==The signal is caused by a READ memory access.\n==3824691==Hint: address points to the zero page.\n    #0 0x56283089c8db in get_item_at_pos parts/gen_list_swap_item_positions.c:25\n    #1 0x56283089c93e in list_swap_item_positions parts/gen_list_swap_item_positions.c:38\n    #2 0x5628308a8858 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #3 0x5628308a6c62 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5628308a71a2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5628308a7bd0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5628308a8a07 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #7 0x7fe9333bffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7fe9333c007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x56283089c804 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:25 in get_item_at_pos\n==3824691==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[       OK ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[       OK ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[       OK ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[       OK ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3825037==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55fb1bb858f7 bp 0x7ffd8c3bb510 sp 0x7ffd8c3bb510 T0)\n==3825037==The signal is caused by a WRITE memory access.\n==3825037==Hint: address points to the zero page.\n    #0 0x55fb1bb858f6 in list_cost_sum parts/gen_list_cost_sum.c:32\n    #1 0x55fb1bb91965 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x55fb1bb8fbbd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55fb1bb900fd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55fb1bb90b2b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55fb1bb91b8c in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7fdbbf55afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fdbbf55b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55fb1bb85804 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:32 in list_cost_sum\n==3825037==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[  FAILED  ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"apple\" != \"item1\"\n[   LINE   ] --- tests_ref/test_list_load.c:33: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3825309==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9ba212808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56122a42af86 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:114\n    #2 0x56122a42aa5e in list_load parts/gen_list_load.c:54\n    #3 0x56122a436aa4 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x56122a434d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56122a43528c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56122a435cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56122a4375b5 in main tests_ref/test_list_load.c:53\n    #8 0x7fc9b9f06fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 48 byte(s) in 2 object(s) allocated from:\n    #0 0x7fc9ba212808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56122a42af86 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:114\n    #2 0x56122a42aa5e in list_load parts/gen_list_load.c:54\n    #3 0x56122a436aa4 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x56122a434d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56122a43528c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56122a435cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56122a4375b5 in main tests_ref/test_list_load.c:53\n    #8 0x7fc9b9f06fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9ba212808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56122a42af86 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:114\n    #2 0x56122a436a73 in test_list_load tests_ref/test_list_load.c:26\n    #3 0x56122a434d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56122a43528c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56122a435cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56122a4375b5 in main tests_ref/test_list_load.c:53\n    #7 0x7fc9b9f06fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 20 byte(s) in 3 object(s) allocated from:\n    #0 0x7fc9ba19b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56122a42afa7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x56122a42aa5e in list_load parts/gen_list_load.c:54\n    #3 0x56122a436aa4 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x56122a434d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56122a43528c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56122a435cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56122a4375b5 in main tests_ref/test_list_load.c:53\n    #8 0x7fc9b9f06fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc9ba19b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56122a42afa7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x56122a436a73 in test_list_load tests_ref/test_list_load.c:26\n    #3 0x56122a434d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56122a43528c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56122a435cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56122a4375b5 in main tests_ref/test_list_load.c:53\n    #7 0x7fc9b9f06fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 122 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n[  FAILED  ] test_list_load_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n[       OK ] test_list_load_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3825726==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f3ce848356c bp 0x7ffff7b9cc40 sp 0x7ffff7b9c360 T0)\n==3825726==The signal is caused by a READ memory access.\n==3825726==Hint: address points to the zero page.\n    #0 0x7f3ce848356b in __GI_____strtol_l_internal ../stdlib/strtol_l.c:283\n    #1 0x7f3ce86b5207 in __interceptor_atoi ../../../../src/libsanitizer/asan/asan_interceptors.cc:510\n    #2 0x558b0e307a36 in list_load parts/gen_list_load.c:54\n    #3 0x558b0e313aa4 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x558b0e311d4c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x558b0e31228c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x558b0e312cba in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x558b0e313e9b in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f3ce8465fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f3ce846607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x558b0e307884 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_load_badparse.bin+0x6884)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../stdlib/strtol_l.c:283 in __GI_____strtol_l_internal\n==3825726==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n",
            "stderr": "=================================================================\n==3826067==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000010 at pc 0x7f7bdd1cc3ad bp 0x7fff7da08ed0 sp 0x7fff7da08678\nREAD of size 2 at 0x602000000010 thread T0\n    #0 0x7f7bdd1cc3ac in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:443\n    #1 0x5639655b6295 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:164\n    #2 0x5639655b5a0f in list_deduplicate parts/gen_list_deduplicate.c:58\n    #3 0x5639655c1a4b in test_list_deduplicate tests_ref/test_list_deduplicate.c:27\n    #4 0x5639655bfd0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5639655c024d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5639655c0c7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5639655c1e3c in main tests_ref/test_list_deduplicate.c:39\n    #8 0x7f7bdcf37fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f7bdcf3807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5639655b5804 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_deduplicate.bin+0x5804)\n\n0x602000000010 is located 0 bytes inside of 6-byte region [0x602000000010,0x602000000016)\nfreed by thread T0 here:\n    #0 0x7f7bdd24340f in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:122\n    #1 0x5639655b6289 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:162\n    #2 0x5639655b5a0f in list_deduplicate parts/gen_list_deduplicate.c:58\n    #3 0x5639655c1a4b in test_list_deduplicate tests_ref/test_list_deduplicate.c:27\n    #4 0x5639655bfd0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5639655c024d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5639655c0c7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5639655c1e3c in main tests_ref/test_list_deduplicate.c:39\n    #8 0x7f7bdcf37fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\npreviously allocated by thread T0 here:\n    #0 0x7f7bdd1cc3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5639655b5f68 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/reflist.c:118\n    #2 0x5639655c19e4 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x5639655bfd0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5639655c024d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5639655c0c7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5639655c1e3c in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f7bdcf37fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/asan/asan_interceptors.cc:443 in __interceptor_strdup\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[fd]fa fa fa 06 fa fa fa fa fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3826067==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3826402==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55d160e86948 bp 0x7fff1345f840 sp 0x7fff1345f800 T0)\n==3826402==The signal is caused by a READ memory access.\n==3826402==Hint: address points to the zero page.\n    #0 0x55d160e86947 in list_deduplicate parts/gen_list_deduplicate.c:44\n    #1 0x55d160e928f9 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55d160e90d0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55d160e9124d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55d160e91c7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55d160e92aa8 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fc6fa807fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc6fa80807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55d160e86804 in _start (/home/gustavo/git/codex_study_grading/repos/e04ce3f6-46eb-465e-9828-5e768febf9be/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:44 in list_deduplicate\n==3826402==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3826619==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 1024 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5a1c740808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x564931cd493f in list_deduplicate parts/gen_list_deduplicate.c:42\n    #2 0x564931ce0a0b in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:26\n    #3 0x564931cded0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x564931cdf24d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x564931cdfc7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x564931ce0dfc in main tests_ref/test_list_deduplicate_single.c:38\n    #7 0x7f5a1c434fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 1024 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3826820==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 1024 byte(s) in 1 object(s) allocated from:\n    #0 0x7f393cd6b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x563b0af9b93f in list_deduplicate parts/gen_list_deduplicate.c:42\n    #2 0x563b0afa7a4b in test_list_deduplicate_nodups tests_ref/test_list_deduplicate_nodups.c:27\n    #3 0x563b0afa5d0d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563b0afa624d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563b0afa6c7b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563b0afa802b in main tests_ref/test_list_deduplicate_nodups.c:42\n    #7 0x7f393ca5ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 1024 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        }
    },
    "passed": 23,
    "total": 45,
    "passed_functional": 14,
    "total_functional": 26
}
