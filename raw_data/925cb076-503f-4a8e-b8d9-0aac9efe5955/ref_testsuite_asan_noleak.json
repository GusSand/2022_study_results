{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n[       OK ] test_list_init_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819464==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f87d2498e2f bp 0x7fff75414350 sp 0x7fff75413ac0 T0)\n==3819464==The signal is caused by a READ memory access.\n==3819464==Hint: address points to the zero page.\n    #0 0x7f87d2498e2e in AddressIsPoisoned ../../../../src/libsanitizer/asan/asan_mapping.h:396\n    #1 0x7f87d2498e2e in QuickCheckForUnpoisonedRegion ../../../../src/libsanitizer/asan/asan_interceptors_memintrinsics.h:30\n    #2 0x7f87d2498e2e in __interceptor_strcpy ../../../../src/libsanitizer/asan/asan_interceptors.cc:431\n    #3 0x5563dadd595a in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:48\n    #4 0x5563dade1974 in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:25\n    #5 0x5563daddfc9d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x5563dade01dd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x5563dade0c0b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x5563dade1fa3 in main tests_ref/test_list_add_item_at_pos.c:41\n    #9 0x7f87d21fefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f87d21ff07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x5563dadd5824 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_add_item_at_pos.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/asan/asan_mapping.h:396 in AddressIsPoisoned\n==3819464==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n[       OK ] test_list_add_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[       OK ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819781==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fb8c10f6e2f bp 0x7ffc672b66d0 sp 0x7ffc672b5e40 T0)\n==3819781==The signal is caused by a READ memory access.\n==3819781==Hint: address points to the zero page.\n    #0 0x7fb8c10f6e2e in AddressIsPoisoned ../../../../src/libsanitizer/asan/asan_mapping.h:396\n    #1 0x7fb8c10f6e2e in QuickCheckForUnpoisonedRegion ../../../../src/libsanitizer/asan/asan_interceptors_memintrinsics.h:30\n    #2 0x7fb8c10f6e2e in __interceptor_strcpy ../../../../src/libsanitizer/asan/asan_interceptors.cc:431\n    #3 0x564a403ca95a in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:48\n    #4 0x564a403d6974 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #5 0x564a403d4c9d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x564a403d51dd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x564a403d5c0b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x564a403d6c40 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #9 0x7fb8c0e5cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fb8c0e5d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x564a403ca824 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_add_item_at_pos_oob.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/asan/asan_mapping.h:396 in AddressIsPoisoned\n==3819781==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820138==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fb41d87f667 bp 0x000000000031 sp 0x7ffef5900ed0 T0)\n==3820138==The signal is caused by a WRITE memory access.\n==3820138==Hint: address points to the zero page.\n    #0 0x7fb41d87f666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7fb41d87dde3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7fb41d87dde3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7fb41d865b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7fb41d865b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7fb41d871ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7fb41d871ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7fb41dab6664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7fb41dab6bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55692108a956 in list_item_to_string parts/gen_list_item_to_string.c:41\n    #10 0x55692109694d in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x556921094c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x556921095167 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x556921095b95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x556921096b74 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7fb41d819fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7fb41d81a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55692108a824 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3820138==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3820428==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd8fb9c084 at pc 0x7f594e491725 bp 0x7ffd8fb9be80 sp 0x7ffd8fb9b610\nWRITE of size 527 at 0x7ffd8fb9c084 thread T0\n    #0 0x7f594e491724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f594e491bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55dd2aad3976 in list_item_to_string parts/gen_list_item_to_string.c:41\n    #3 0x55dd2aadfa14 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55dd2aaddc47 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55dd2aade187 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55dd2aadebb5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55dd2aadfcc9 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f594e1f4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f594e1f507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55dd2aad3844 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffd8fb9c084 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55dd2aadf829 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100031f6b7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b7f0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 f2 f2 f2\n  0x100031f6b800: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x100031f6b810:[04]f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00\n  0x100031f6b820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100031f6b850: 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00 00 00\n  0x100031f6b860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3820428==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[       OK ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820811==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e356d78915 bp 0x7fff7fcb0f90 sp 0x7fff7fcb0f90 T0)\n==3820811==The signal is caused by a WRITE memory access.\n==3820811==Hint: address points to the zero page.\n    #0 0x55e356d78914 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:33\n    #1 0x55e356d848d6 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:27\n    #2 0x55e356d82bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e356d830f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e356d83b1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e356d84c59 in main tests_ref/test_list_update_item_at_pos.c:38\n    #6 0x7fcdb1920fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fcdb192107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e356d78804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:33 in list_update_item_at_pos\n==3820811==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821023==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55bee8e668ea bp 0x7ffd3e0ab1c0 sp 0x7ffd3e0ab1c0 T0)\n==3821023==The signal is caused by a READ memory access.\n==3821023==Hint: address points to the zero page.\n    #0 0x55bee8e668e9 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:29\n    #1 0x55bee8e727c1 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55bee8e70bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55bee8e710f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55bee8e71b1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55bee8e72970 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f2da32c7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f2da32c807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55bee8e66804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:29 in list_update_item_at_pos\n==3821023==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821255==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x564d7814f915 bp 0x7fff398c1860 sp 0x7fff398c1860 T0)\n==3821255==The signal is caused by a WRITE memory access.\n==3821255==Hint: address points to the zero page.\n    #0 0x564d7814f914 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:33\n    #1 0x564d7815b8c6 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #2 0x564d78159bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x564d7815a0f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564d7815ab1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564d7815bc49 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #6 0x7f1659f72fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f1659f7307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x564d7814f804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:33 in list_update_item_at_pos\n==3821255==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821463==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5590ab88e909 bp 0x7ffcff8c5d10 sp 0x7ffcff8c5cf0 T0)\n==3821463==The signal is caused by a READ memory access.\n==3821463==Hint: address points to the zero page.\n    #0 0x5590ab88e908 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:34\n    #1 0x5590ab89a924 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:29\n    #2 0x5590ab898ba1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5590ab8990e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5590ab899b0f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5590ab89ad2a in main tests_ref/test_list_remove_item_at_pos.c:45\n    #6 0x7f81c9330fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f81c933107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5590ab88e804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_remove_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:34 in list_remove_item_at_pos\n==3821463==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821680==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5572c113e8e2 bp 0x7ffdee8b5470 sp 0x7ffdee8b5450 T0)\n==3821680==The signal is caused by a READ memory access.\n==3821680==Hint: address points to the zero page.\n    #0 0x5572c113e8e1 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:30\n    #1 0x5572c114a792 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x5572c1148ba1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5572c11490e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5572c1149b0f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5572c114a941 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7ff52fafdfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ff52fafe07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5572c113e804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:30 in list_remove_item_at_pos\n==3821680==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821918==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55ed56830935 bp 0x7ffff4360700 sp 0x7ffff4360700 T0)\n==3821918==The signal is caused by a READ memory access.\n==3821918==Hint: address points to the zero page.\n    #0 0x55ed56830934 in list_swap_item_positions parts/gen_list_swap_item_positions.c:39\n    #1 0x55ed5683c98b in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #2 0x55ed5683ac03 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ed5683b143 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ed5683bb71 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ed5683d0dd in main tests_ref/test_list_swap_item_positions.c:47\n    #6 0x7fecf7548fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fecf754907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55ed56830804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_swap_item_positions.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:39 in list_swap_item_positions\n==3821918==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822115==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55908ea3a935 bp 0x7fff4f6a8730 sp 0x7fff4f6a8730 T0)\n==3822115==The signal is caused by a READ memory access.\n==3822115==Hint: address points to the zero page.\n    #0 0x55908ea3a934 in list_swap_item_positions parts/gen_list_swap_item_positions.c:39\n    #1 0x55908ea4694b in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #2 0x55908ea44c03 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55908ea45143 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55908ea45b71 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55908ea46c5e in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #6 0x7fdf01fb2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fdf01fb307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55908ea3a804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_swap_item_positions_samepos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:39 in list_swap_item_positions\n==3822115==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822330==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561ef6f538e1 bp 0x7ffc18b322f0 sp 0x7ffc18b322f0 T0)\n==3822330==The signal is caused by a READ memory access.\n==3822330==Hint: address points to the zero page.\n    #0 0x561ef6f538e0 in list_swap_item_positions parts/gen_list_swap_item_positions.c:29\n    #1 0x561ef6f5f7f9 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x561ef6f5dc03 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561ef6f5e143 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561ef6f5eb71 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561ef6f5f9a8 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f7cd9b9bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f7cd9b9c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561ef6f53804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:29 in list_swap_item_positions\n==3822330==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822543==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55cfba31f935 bp 0x7ffdf0ca3770 sp 0x7ffdf0ca3770 T0)\n==3822543==The signal is caused by a READ memory access.\n==3822543==Hint: address points to the zero page.\n    #0 0x55cfba31f934 in list_swap_item_positions parts/gen_list_swap_item_positions.c:39\n    #1 0x55cfba32b94b in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:27\n    #2 0x55cfba329c03 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55cfba32a143 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55cfba32ab71 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55cfba32bd53 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7f888e2b9fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f888e2ba07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55cfba31f804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_swap_item_positions_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:39 in list_swap_item_positions\n==3822543==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[  FAILED  ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x2 != 0x3\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822793==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x562117003936 bp 0x7ffdd3801d20 sp 0x7ffdd3801d20 T0)\n==3822793==The signal is caused by a WRITE memory access.\n==3822793==Hint: address points to the zero page.\n    #0 0x562117003935 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:42\n    #1 0x56211700f89e in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x56211700dbb9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56211700e0f9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56211700eb27 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56211700fa9d in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7f7b3d6cefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f7b3d6cf07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x562117003804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:42 in list_find_highest_price_item_position\n==3822793==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823058==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5558dcfbf92e bp 0x7ffe79601b70 sp 0x7ffe79601b70 T0)\n==3823058==The signal is caused by a WRITE memory access.\n==3823058==Hint: address points to the zero page.\n    #0 0x5558dcfbf92d in list_cost_sum parts/gen_list_cost_sum.c:37\n    #1 0x5558dcfcb95b in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x5558dcfc9bb3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5558dcfca0f3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5558dcfcab21 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5558dcfcbb82 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7fc79cfa5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc79cfa607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5558dcfbf804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:37 in list_cost_sum\n==3823058==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item1,1.000000,1\n\" != \"item1,1.00,1\n\"\n[   LINE   ] --- tests_ref/test_list_save.c:40: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[  FAILED  ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[  FAILED  ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_nullfilename\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[  FAILED  ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_badfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823323==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b40165fa93 bp 0x7ffd8a0ab830 sp 0x7ffd8a0ab790 T0)\n==3823323==The signal is caused by a READ memory access.\n==3823323==Hint: address points to the zero page.\n    #0 0x55b40165fa92 in test_list_load tests_ref/test_list_load.c:36\n    #1 0x55b40165db5a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55b40165e09a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55b40165eac8 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55b4016603c3 in main tests_ref/test_list_load.c:53\n    #5 0x7efe436cefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7efe436cf07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55b401653804 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_load.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3823323==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n[  FAILED  ] test_list_load_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[  FAILED  ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_nullfilename.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_nullfilename\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3823584==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b04b09897f bp 0x7ffdaf10a4c0 sp 0x7ffdaf10a1e0 T0)\n==3823584==The signal is caused by a READ memory access.\n==3823584==Hint: address points to the zero page.\n    #0 0x55b04b09897e in test_list_load_longitem tests_ref/test_list_load_longitem.c:30\n    #1 0x55b04b096b7a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55b04b0970ba in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55b04b097ae8 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55b04b098d27 in main tests_ref/test_list_load_longitem.c:40\n    #5 0x7fe820089fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7fe82008a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55b04b08c824 in _start (/home/gustavo/git/codex_study_grading/repos/925cb076-503f-4a8e-b8d9-0aac9efe5955/tests_ref/test_list_load_longitem.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load_longitem.c:30 in test_list_load_longitem\n==3823584==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[  FAILED  ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badfile.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[  FAILED  ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_missingfile.c:29: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_missingfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_single": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nodups": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        }
    },
    "passed": 9,
    "total": 45,
    "passed_functional": 5,
    "total_functional": 26
}
