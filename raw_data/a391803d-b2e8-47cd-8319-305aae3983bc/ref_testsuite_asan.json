{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[  FAILED  ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_item_to_string_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815154==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f86f1f04667 bp 0x000000000031 sp 0x7ffca342e720 T0)\n==3815154==The signal is caused by a WRITE memory access.\n==3815154==Hint: address points to the zero page.\n    #0 0x7f86f1f04666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f86f1f02de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f86f1f02de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f86f1eeab23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f86f1eeab23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f86f1ef6ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f86f1ef6ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f86f213b664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f86f213bbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x556cb86c594e in list_item_to_string parts/gen_list_item_to_string.c:38\n    #10 0x556cb86d18f6 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x556cb86cfbd0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x556cb86d0110 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x556cb86d0b3e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x556cb86d1b1d in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f86f1e9efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f86f1e9f07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x556cb86c5824 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3815154==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3815568==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffde9aa6924 at pc 0x7ff642705725 bp 0x7ffde9aa6730 sp 0x7ffde9aa5ec0\nWRITE of size 527 at 0x7ffde9aa6924 thread T0\n    #0 0x7ff642705724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff642705bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55700492396e in list_item_to_string parts/gen_list_item_to_string.c:38\n    #3 0x55700492f9bd in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55700492dbf0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55700492e130 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55700492eb5e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55700492fc72 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff642468fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff64246907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x557004923844 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffde9aa6924 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55700492f7d2 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10003d34ccd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34cce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34ccf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34cd00: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n  0x10003d34cd10: 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00\n=>0x10003d34cd20: 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n  0x10003d34cd30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34cd40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34cd50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003d34cd60: 00 00 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3\n  0x10003d34cd70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3815568==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_print_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_print_longitem": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_update_item_at_pos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_remove_item_at_pos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816031==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555a7fee28e1 bp 0x7ffd54f92bd0 sp 0x7ffd54f92bd0 T0)\n==3816031==The signal is caused by a WRITE memory access.\n==3816031==Hint: address points to the zero page.\n    #0 0x555a7fee28e0 in list_cost_sum parts/gen_list_cost_sum.c:32\n    #1 0x555a7feee957 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x555a7feecbaf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x555a7feed0ef in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x555a7feedb1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x555a7feeeb7e in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7ffbec010fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ffbec01107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x555a7fee2804 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:32 in list_cost_sum\n==3816031==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[  FAILED  ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[  FAILED  ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_nullfilename\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816401==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f82fdf18808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x559ac1399e2f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:114\n    #2 0x559ac13a58cc in test_list_save_nullfilename tests_ref/test_list_save_nullfilename.c:25\n    #3 0x559ac13a3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x559ac13a4135 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x559ac13a4b63 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x559ac13a5b42 in main tests_ref/test_list_save_nullfilename.c:34\n    #7 0x7f82fdc0cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f82fdea13ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x559ac1399e50 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:118\n    #2 0x559ac13a58cc in test_list_save_nullfilename tests_ref/test_list_save_nullfilename.c:25\n    #3 0x559ac13a3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x559ac13a4135 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x559ac13a4b63 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x559ac13a5b42 in main tests_ref/test_list_save_nullfilename.c:34\n    #7 0x7f82fdc0cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[  FAILED  ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save_badfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816846==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fce1d3b7808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560abe4ebe4f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:114\n    #2 0x560abe4f79b9 in test_list_save_badfile tests_ref/test_list_save_badfile.c:30\n    #3 0x560abe4f5c15 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560abe4f6155 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560abe4f6b83 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560abe4f7c3a in main tests_ref/test_list_save_badfile.c:39\n    #7 0x7fce1d0abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fce1d3403ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560abe4ebe70 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:118\n    #2 0x560abe4f79b9 in test_list_save_badfile tests_ref/test_list_save_badfile.c:30\n    #3 0x560abe4f5c15 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560abe4f6155 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560abe4f6b83 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560abe4f7c3a in main tests_ref/test_list_save_badfile.c:39\n    #7 0x7fce1d0abfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817325==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f8752771f64 bp 0x000000000d68 sp 0x7ffea4dcdb50 T0)\n==3817325==The signal is caused by a READ memory access.\n==3817325==Hint: address points to the zero page.\n    #0 0x7f8752771f63 in __GI__IO_default_xsputn libio/genops.c:394\n    #1 0x7f8752771f63 in __GI__IO_default_xsputn libio/genops.c:370\n    #2 0x7f875275abc2 in outstring_func stdio-common/vfprintf-internal.c:239\n    #3 0x7f875275abc2 in __vfprintf_internal stdio-common/vfprintf-internal.c:1647\n    #4 0x7f8752765ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #5 0x7f8752765ae7 in __vsprintf libio/iovsprintf.c:104\n    #6 0x7f87529aa664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #7 0x7f87529aabde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #8 0x55e648e2f9e3 in list_load parts/gen_list_load.c:59\n    #9 0x55e648e3ba32 in test_list_load tests_ref/test_list_load.c:27\n    #10 0x55e648e39cda in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #11 0x55e648e3a21a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #12 0x55e648e3ac48 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #13 0x55e648e3c543 in main tests_ref/test_list_load.c:53\n    #14 0x7f875270dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #15 0x7f875270e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #16 0x55e648e2f844 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_load.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/genops.c:394 in __GI__IO_default_xsputn\n==3817325==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817738==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x560e55a56921 bp 0x7ffee7fa1400 sp 0x7ffee7fa13c0 T0)\n==3817738==The signal is caused by a READ memory access.\n==3817738==Hint: address points to the zero page.\n    #0 0x560e55a56920 in list_load parts/gen_list_load.c:36\n    #1 0x560e55a628d8 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x560e55a60cda in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x560e55a6121a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x560e55a61c48 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x560e55a62a87 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f88d7ff4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f88d7ff507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x560e55a56844 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_load_nullhead.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:36 in list_load\n==3817738==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[  FAILED  ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_nullfilename\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n[  FAILED  ] test_list_load_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818045==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fee50ee9f64 bp 0x000000000d68 sp 0x7ffe8ccdb550 T0)\n==3818045==The signal is caused by a READ memory access.\n==3818045==Hint: address points to the zero page.\n    #0 0x7fee50ee9f63 in __GI__IO_default_xsputn libio/genops.c:394\n    #1 0x7fee50ee9f63 in __GI__IO_default_xsputn libio/genops.c:370\n    #2 0x7fee50ed2bc2 in outstring_func stdio-common/vfprintf-internal.c:239\n    #3 0x7fee50ed2bc2 in __vfprintf_internal stdio-common/vfprintf-internal.c:1647\n    #4 0x7fee50eddae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #5 0x7fee50eddae7 in __vsprintf libio/iovsprintf.c:104\n    #6 0x7fee51122664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #7 0x7fee51122bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #8 0x55bd51bc39e3 in list_load parts/gen_list_load.c:59\n    #9 0x55bd51bcfa32 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #10 0x55bd51bcdcda in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #11 0x55bd51bce21a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #12 0x55bd51bcec48 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #13 0x55bd51bcfe29 in main tests_ref/test_list_load_badparse.c:39\n    #14 0x7fee50e85fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #15 0x7fee50e8607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #16 0x55bd51bc3844 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_load_badparse.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/genops.c:394 in __GI__IO_default_xsputn\n==3818045==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[  FAILED  ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[  FAILED  ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_missingfile\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818430==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe57b93d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55667201ceec in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:114\n    #2 0x556672028989 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x556672026cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5566720271f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556672027c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556672028de1 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fe57b631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe57b93d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55667201ceec in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:114\n    #2 0x5566720289c9 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x556672026cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5566720271f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556672027c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556672028de1 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fe57b631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe57b8c63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55667201cf0d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:118\n    #2 0x5566720289c9 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x556672026cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5566720271f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556672027c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556672028de1 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fe57b631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe57b8c63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55667201cf0d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/reflist.c:118\n    #2 0x556672028989 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x556672026cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5566720271f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556672027c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556672028de1 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fe57b631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818789==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55cb11d57944 bp 0x7ffd88e3eb60 sp 0x7ffd88e3eb20 T0)\n==3818789==The signal is caused by a READ memory access.\n==3818789==Hint: address points to the zero page.\n    #0 0x55cb11d57943 in list_deduplicate parts/gen_list_deduplicate.c:46\n    #1 0x55cb11d6389e in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55cb11d61cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55cb11d621f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55cb11d62c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55cb11d63a4d in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f62d18d7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f62d18d807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55cb11d57804 in _start (/home/gustavo/git/codex_study_grading/repos/a391803d-b2e8-47cd-8319-305aae3983bc/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:46 in list_deduplicate\n==3818789==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 5,
    "total": 45,
    "passed_functional": 5,
    "total_functional": 26
}
