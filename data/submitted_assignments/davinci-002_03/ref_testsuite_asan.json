{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3171048==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a1441eb8d9 bp 0x7ffd34268090 sp 0x7ffd34268090 T0)\n==3171048==The signal is caused by a WRITE memory access.\n==3171048==Hint: address points to the zero page.\n    #0 0x55a1441eb8d8 in list_init parts/gen_list_init.c:25\n    #1 0x55a1441f774f in test_list_init_nullhead tests_ref/test_list_init_nullhead.c:23\n    #2 0x55a1441f5b26 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a1441f605b in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a1441f6a9f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a1441f7916 in main tests_ref/test_list_init_nullhead.c:30\n    #6 0x7f9fb2300082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55a1441eb80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_init_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_init.c:25 in list_init\n==3171048==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3171286==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5596881c3934 bp 0x7ffd7bc28750 sp 0x7ffd7bc28710 T0)\n==3171286==The signal is caused by a READ memory access.\n==3171286==Hint: address points to the zero page.\n    #0 0x5596881c3933 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:41\n    #1 0x5596881cf876 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x5596881cdc34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5596881ce169 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5596881cebad in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5596881cfa3d in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7fdd275ab082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5596881c380d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:41 in list_add_item_at_pos\n==3171286==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3171996==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fc830c346e5 bp 0x7ffee5343590 sp 0x7ffee5342d08 T0)\n==3171996==The signal is caused by a READ memory access.\n==3171996==Hint: address points to the zero page.\n    #0 0x7fc830c346e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7fc830d34232 in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:441\n    #2 0x55909fecf901 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:36\n    #3 0x55909fedb944 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x55909fed9c34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55909feda169 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55909fedabad in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55909fedbb5d in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7fc830ad0082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x55909fecf80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3171996==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3172669==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f85c4007808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555e56cc08f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:35\n    #2 0x555e56ccc948 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x555e56ccac34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555e56ccb169 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555e56ccbbad in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555e56cccc2c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f85c3d2c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f85c3f903ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555e56cc0901 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:36\n    #2 0x555e56ccc948 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x555e56ccac34 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555e56ccb169 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555e56ccbbad in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555e56cccc2c in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f85c3d2c082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3173235==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x557cc6b5a901 bp 0x7ffedb451c30 sp 0x7ffedb451c20 T0)\n==3173235==The signal is caused by a READ memory access.\n==3173235==Hint: address points to the zero page.\n    #0 0x557cc6b5a900 in list_item_to_string parts/gen_list_item_to_string.c:28\n    #1 0x557cc6b66846 in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x557cc6b64b76 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557cc6b650ab in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557cc6b65aef in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557cc6b66a93 in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7ff86b240082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x557cc6b5a82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_item_to_string_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:28 in list_item_to_string\n==3173235==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3173815==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f39473c5ae7 bp 0x000000000031 sp 0x7ffebfe380e0 T0)\n==3173815==The signal is caused by a WRITE memory access.\n==3173815==Hint: address points to the zero page.\n    #0 0x7f39473c5ae6 in __GI__IO_str_overflow /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133\n    #1 0x7f39473c4023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:399\n    #2 0x7f39473c4023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:370\n    #3 0x7f39473a97ac in __vfprintf_internal /build/glibc-SzIz7B/glibc-2.31/stdio-common/vfprintf-internal.c:1687\n    #4 0x7f39473b71b7 in __vsprintf_internal /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:95\n    #5 0x7f39473b71b7 in __vsprintf /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:104\n    #6 0x7f39475c2664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #7 0x7f39475c2bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #8 0x562c2941392f in list_item_to_string parts/gen_list_item_to_string.c:28\n    #9 0x562c2941f8d9 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #10 0x562c2941db76 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #11 0x562c2941e0ab in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #12 0x562c2941eaef in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #13 0x562c2941fb18 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #14 0x7f3947356082 in __libc_start_main ../csu/libc-start.c:308\n    #15 0x562c2941382d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_item_to_string_nullstr.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133 in __GI__IO_str_overflow\n==3173815==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3174430==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeadbbf564 at pc 0x7ff8920a5725 bp 0x7ffeadbbf380 sp 0x7ffeadbbeb10\nWRITE of size 527 at 0x7ffeadbbf564 thread T0\n    #0 0x7ff8920a5724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff8920a5bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x564917b1694f in list_item_to_string parts/gen_list_item_to_string.c:28\n    #3 0x564917b229b4 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x564917b20b96 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x564917b210cb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x564917b21b0f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x564917b22c82 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff891e39082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x564917b1684d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_item_to_string_longstr.bin+0x584d)\n\nAddress 0x7ffeadbbf564 is located in stack of thread T0 at offset 180 in frame\n    #0 0x564917b227b5 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [48, 56) 'head' (line 27)\n    [80, 180) 'str' (line 23)\n    [224, 736) 'longstr' (line 24) <== Memory access at offset 180 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100055b6fe50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fe60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fe70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fe90: 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 f2 f2 f2\n=>0x100055b6fea0: 00 00 00 00 00 00 00 00 00 00 00 00[04]f2 f2 f2\n  0x100055b6feb0: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100055b6fef0: 00 00 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3174430==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3175498==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5dca2f1808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558f34d5be54 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:114\n    #2 0x558f34d6795c in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x558f34d65bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558f34d660f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558f34d66b3a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558f34d67c7c in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f5dca016082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5dca27a3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558f34d5be75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:118\n    #2 0x558f34d6795c in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x558f34d65bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558f34d660f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558f34d66b3a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558f34d67c7c in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f5dca016082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3175998==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56269808d8f3 bp 0x7ffe3f180160 sp 0x7ffe3f180130 T0)\n==3175998==The signal is caused by a READ memory access.\n==3175998==Hint: address points to the zero page.\n    #0 0x56269808d8f2 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:26\n    #1 0x5626980997f2 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x562698097ba5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5626980980da in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x562698098b1e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5626980999b9 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f247ee2e082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x56269808d80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:26 in list_update_item_at_pos\n==3175998==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3176782==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f57ad2fd6e5 bp 0x7fffe6a73ef0 sp 0x7fffe6a73668 T0)\n==3176782==The signal is caused by a READ memory access.\n==3176782==Hint: address points to the zero page.\n    #0 0x7f57ad2fd6e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7f57ad3fd232 in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:441\n    #2 0x55f411a8b91e in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:30\n    #3 0x55f411a978f7 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x55f411a95ba5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55f411a960da in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55f411a96b1e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55f411a97c94 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7f57ad199082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x55f411a8b80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3176782==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[       OK ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3177193==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5558f78558e0 bp 0x7ffdf55a5c40 sp 0x7ffdf55a5c10 T0)\n==3177193==The signal is caused by a READ memory access.\n==3177193==Hint: address points to the zero page.\n    #0 0x5558f78558df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:25\n    #1 0x5558f78617f3 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x5558f785fbc5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5558f78600fa in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5558f7860b3e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5558f78619ba in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f9affc7c082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5558f785580d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:25 in list_remove_item_at_pos\n==3177193==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[       OK ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3177917==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x559607e4e8df bp 0x7ffcf14005c0 sp 0x7ffcf14005c0 T0)\n==3177917==The signal is caused by a READ memory access.\n==3177917==Hint: address points to the zero page.\n    #0 0x559607e4e8de in list_swap_item_positions parts/gen_list_swap_item_positions.c:25\n    #1 0x559607e5a88f in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x559607e58c5c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x559607e59191 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559607e59bd5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x559607e5aa56 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f166dfac082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x559607e4e80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_swap_item_positions_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:25 in list_swap_item_positions\n==3177917==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[       OK ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[       OK ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[       OK ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[       OK ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3178232==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5606ea0c593c bp 0x7fffca9486b0 sp 0x7fffca9486b0 T0)\n==3178232==The signal is caused by a WRITE memory access.\n==3178232==Hint: address points to the zero page.\n    #0 0x5606ea0c593b in list_cost_sum parts/gen_list_cost_sum.c:35\n    #1 0x5606ea0d196b in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x5606ea0cfb86 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5606ea0d00bb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5606ea0d0aff in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5606ea0d1baa in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f2b18f48082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5606ea0c580d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_cost_sum_nulltotal.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:35 in list_cost_sum\n==3178232==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item1,1.000000,1\n\" != \"item1,1.00,1\n\"\n[   LINE   ] --- tests_ref/test_list_save.c:40: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3178558==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7febecb03808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5582649b9e88 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:114\n    #2 0x5582649c5a57 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7febeca8c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5582649b9ea9 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:118\n    #2 0x5582649c5b20 in test_list_save tests_ref/test_list_save.c:31\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7febecb03808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5582649b9e88 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:114\n    #2 0x5582649c5b20 in test_list_save tests_ref/test_list_save.c:31\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7febecb03808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5582649b9e88 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:114\n    #2 0x5582649c5a9a in test_list_save tests_ref/test_list_save.c:29\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7febecb03808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5582649b9e88 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:114\n    #2 0x5582649c5add in test_list_save tests_ref/test_list_save.c:30\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7febeca8c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5582649b9ea9 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:118\n    #2 0x5582649c5add in test_list_save tests_ref/test_list_save.c:30\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7febeca8c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5582649b9ea9 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:118\n    #2 0x5582649c5a9a in test_list_save tests_ref/test_list_save.c:29\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7febeca8c3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5582649b9ea9 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_03/reflist.c:118\n    #2 0x5582649c5a57 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x5582649c3bf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5582649c412a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5582649c4b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5582649c6092 in main tests_ref/test_list_save.c:64\n    #7 0x7febec828082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 628 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3179009==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56332bfa1c51 bp 0x7ffc7448b260 sp 0x7ffc7448b1c0 T0)\n==3179009==The signal is caused by a READ memory access.\n==3179009==Hint: address points to the zero page.\n    #0 0x56332bfa1c50 in test_list_load tests_ref/test_list_load.c:36\n    #1 0x56332bf9fcd9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x56332bfa020e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x56332bfa0c52 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x56332bfa259f in main tests_ref/test_list_load.c:53\n    #5 0x7f6799e49082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x56332bf9588d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_load.bin+0x688d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3179009==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3179407==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5560697f997c bp 0x7ffd23695740 sp 0x7ffd236956a0 T0)\n==3179407==The signal is caused by a READ memory access.\n==3179407==Hint: address points to the zero page.\n    #0 0x5560697f997b in list_load parts/gen_list_load.c:29\n    #1 0x556069805914 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x556069803cd9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55606980420e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x556069804c52 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x556069805adb in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f44893a9082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5560697f988d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_load_nullhead.bin+0x688d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:29 in list_load\n==3179407==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n[  FAILED  ] test_list_load_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_load_longitem.c:29: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3180141==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f9ed71b6dfb bp 0x7fffe7c2c8e0 sp 0x7fffe7c2c6d0 T0)\n==3180141==The signal is caused by a READ memory access.\n==3180141==Hint: address points to the zero page.\n    #0 0x7f9ed71b6dfa in __GI_____strtof_l_internal /build/glibc-SzIz7B/glibc-2.31/stdlib/strtod_l.c:611\n    #1 0x55f14287c9f9 in list_load parts/gen_list_load.c:40\n    #2 0x55f142888a6e in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x55f142886cd9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f14288720e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f142887c52 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f142888e7f in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f9ed7191082 in __libc_start_main ../csu/libc-start.c:308\n    #8 0x55f14287c88d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_load_badparse.bin+0x688d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /build/glibc-SzIz7B/glibc-2.31/stdlib/strtod_l.c:611 in __GI_____strtof_l_internal\n==3180141==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3180584==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55965ede68dd bp 0x7ffd844db180 sp 0x7ffd844db150 T0)\n==3180584==The signal is caused by a READ memory access.\n==3180584==Hint: address points to the zero page.\n    #0 0x55965ede68dc in list_deduplicate parts/gen_list_deduplicate.c:27\n    #1 0x55965edf2805 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55965edf0bdc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55965edf1111 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55965edf1b55 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55965edf29cc in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f44772b9082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55965ede680d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_03/tests_ref/test_list_deduplicate_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:27 in list_deduplicate\n==3180584==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 25,
    "total": 45,
    "passed_functional": 19,
    "total_functional": 26
}
