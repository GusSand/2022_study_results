{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3812235==ERROR: AddressSanitizer: SEGV on unknown address 0x56074cda8710 (pc 0x7f17a0919a16 bp 0x56074cda8710 sp 0x7ffee0c19690 T0)\n==3812235==The signal is caused by a WRITE memory access.\n    #0 0x7f17a0919a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f17a0919a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f17a0919a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f17a0919a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f17a09fe3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x56074cda3422 in list_free test_common.h:35\n    #6 0x56074cda3d48 in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x56074cda1c43 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x56074cda2183 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x56074cda2bb1 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x56074cda3f49 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7f17a06f2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f17a06f307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x56074cd97804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3812235==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3812500==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55cd727df8ec bp 0x7ffc1d2ed300 sp 0x7ffc1d2ed2c0 T0)\n==3812500==The signal is caused by a READ memory access.\n==3812500==Hint: address points to the zero page.\n    #0 0x55cd727df8eb in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:43\n    #1 0x55cd727eb848 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55cd727e9c43 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55cd727ea183 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55cd727eabb1 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55cd727eb9f7 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f980afadfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f980afae07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55cd727df804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:43 in list_add_item_at_pos\n==3812500==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3812753==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc82d6b2808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55c4d6a97902 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:46\n    #2 0x55c4d6aa3916 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x55c4d6aa1c43 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55c4d6aa2183 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55c4d6aa2bb1 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55c4d6aa3b17 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7fc82d3a6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813084==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f75bc42a667 bp 0x000000000031 sp 0x7ffee74a80a0 T0)\n==3813084==The signal is caused by a WRITE memory access.\n==3813084==Hint: address points to the zero page.\n    #0 0x7f75bc42a666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f75bc428de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f75bc428de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f75bc410b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f75bc410b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f75bc41cae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f75bc41cae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f75bc661664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f75bc661bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x5598c82fb93d in list_item_to_string parts/gen_list_item_to_string.c:39\n    #10 0x5598c83078f5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x5598c8305bcf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x5598c830610f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x5598c8306b3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x5598c8307b1c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f75bc3c4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f75bc3c507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x5598c82fb824 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3813084==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3813509==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc7ce7f664 at pc 0x7f8aee636725 bp 0x7ffc7ce7f460 sp 0x7ffc7ce7ebf0\nWRITE of size 527 at 0x7ffc7ce7f664 thread T0\n    #0 0x7f8aee636724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f8aee636bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x564bf8ff295d in list_item_to_string parts/gen_list_item_to_string.c:39\n    #3 0x564bf8ffe9bc in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x564bf8ffcbef in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x564bf8ffd12f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x564bf8ffdb5d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x564bf8ffec71 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f8aee399fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f8aee39a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x564bf8ff2844 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffc7ce7f664 is located in stack of thread T0 at offset 196 in frame\n    #0 0x564bf8ffe7d1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10000f9c7e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7eb0: 00 00 00 00 f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2\n=>0x10000f9c7ec0: 00 00 00 00 00 00 00 00 00 00 00 00[04]f2 f2 f2\n  0x10000f9c7ed0: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000f9c7f10: 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3813509==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[       OK ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[       OK ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813890==ERROR: AddressSanitizer: SEGV on unknown address 0x55c6d17bb750 (pc 0x7fdbca069a16 bp 0x55c6d17bb750 sp 0x7ffd17156430 T0)\n==3813890==The signal is caused by a WRITE memory access.\n    #0 0x7fdbca069a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fdbca069a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fdbca069a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fdbca069a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fdbca14e3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55c6d17b73a1 in list_free test_common.h:35\n    #6 0x55c6d17b7a69 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x55c6d17b5bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55c6d17b6102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55c6d17b6b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55c6d17b7c6a in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7fdbc9e42fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fdbc9e4307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55c6d17ab804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3813890==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814171==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e7402128e8 bp 0x7ffec885d950 sp 0x7ffec885d950 T0)\n==3814171==The signal is caused by a READ memory access.\n==3814171==Hint: address points to the zero page.\n    #0 0x55e7402128e7 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:32\n    #1 0x55e74021e7d2 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55e74021cbc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e74021d102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e74021db30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e74021e981 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f5643201fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f564320207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e740212804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:32 in list_update_item_at_pos\n==3814171==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3814409==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc6c964b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x563361805dfc in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x563361811899 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x56336180fbc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563361810102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563361810b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563361811c5a in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fc6c933ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc6c95d43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x563361805e1d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x563361811899 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x56336180fbc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563361810102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563361810b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563361811c5a in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fc6c933ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[       OK ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3814864==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943f9808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555ccd39fe03 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x555ccd3ab8a0 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943f9808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555ccd39fe03 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x555ccd3ab920 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943f9808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555ccd39fe03 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x555ccd3ab8e0 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943823ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555ccd39fe24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x555ccd3ab920 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943823ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555ccd39fe24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x555ccd3ab8e0 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ff1943823ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555ccd39fe24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x555ccd3ab8a0 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x555ccd3a9bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ccd3aa109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ccd3aab37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ccd3abd52 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7ff1940edfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815245==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55dc366de8e9 bp 0x7ffc297799d0 sp 0x7ffc297799d0 T0)\n==3815245==The signal is caused by a READ memory access.\n==3815245==Hint: address points to the zero page.\n    #0 0x55dc366de8e8 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:33\n    #1 0x55dc366ea7ba in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55dc366e8bc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55dc366e9109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55dc366e9b37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55dc366ea969 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f353ab71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f353ab7207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55dc366de804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:33 in list_remove_item_at_pos\n==3815245==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3815511==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f319b3da808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a1df992e03 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x55a1df99e8a0 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55a1df99cbc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a1df99d109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a1df99db37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a1df99ece7 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f319b0cefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f319b3633ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a1df992e24 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x55a1df99e8a0 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55a1df99cbc9 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a1df99d109 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a1df99db37 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a1df99ece7 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f319b0cefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "=================================================================\n==3815929==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000030 at pc 0x7f427a14f3ad bp 0x7ffe700aa550 sp 0x7ffe700a9cf8\nREAD of size 2 at 0x602000000030 thread T0\n    #0 0x7f427a14f3ac in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:443\n    #1 0x55cb30e161ed in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:164\n    #2 0x55cb30e159c1 in list_swap_item_positions parts/gen_list_swap_item_positions.c:57\n    #3 0x55cb30e219ed in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #4 0x55cb30e1fc65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55cb30e201a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55cb30e20bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55cb30e2213f in main tests_ref/test_list_swap_item_positions.c:47\n    #8 0x7f4279ebafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f4279ebb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55cb30e15804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_swap_item_positions.bin+0x6804)\n\n0x602000000030 is located 0 bytes inside of 6-byte region [0x602000000030,0x602000000036)\nfreed by thread T0 here:\n    #0 0x7f427a1c640f in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:122\n    #1 0x55cb30e161e1 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:162\n    #2 0x55cb30e159a6 in list_swap_item_positions parts/gen_list_swap_item_positions.c:56\n    #3 0x55cb30e219ed in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #4 0x55cb30e1fc65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55cb30e201a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55cb30e20bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55cb30e2213f in main tests_ref/test_list_swap_item_positions.c:47\n    #8 0x7f4279ebafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\npreviously allocated by thread T0 here:\n    #0 0x7f427a14f3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55cb30e15ec0 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x55cb30e2197c in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:26\n    #3 0x55cb30e1fc65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55cb30e201a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55cb30e20bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55cb30e2213f in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7f4279ebafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/asan/asan_interceptors.cc:443 in __interceptor_strdup\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa fd fa fa fa[fd]fa fa fa 06 fa fa fa 06 fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3815929==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n",
            "stderr": "=================================================================\n==3816351==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000010 at pc 0x7ff2efa6b3ad bp 0x7ffd93a78610 sp 0x7ffd93a77db8\nREAD of size 2 at 0x602000000010 thread T0\n    #0 0x7ff2efa6b3ac in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:443\n    #1 0x5622444b81ed in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:164\n    #2 0x5622444b79a6 in list_swap_item_positions parts/gen_list_swap_item_positions.c:56\n    #3 0x5622444c39ad in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #4 0x5622444c1c65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5622444c21a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5622444c2bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5622444c3cc0 in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #8 0x7ff2ef7d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff2ef7d707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5622444b7804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_swap_item_positions_samepos.bin+0x5804)\n\n0x602000000010 is located 0 bytes inside of 6-byte region [0x602000000010,0x602000000016)\nfreed by thread T0 here:\n    #0 0x7ff2efae240f in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:122\n    #1 0x5622444b81e1 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:162\n    #2 0x5622444b79a6 in list_swap_item_positions parts/gen_list_swap_item_positions.c:56\n    #3 0x5622444c39ad in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #4 0x5622444c1c65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5622444c21a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5622444c2bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5622444c3cc0 in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #8 0x7ff2ef7d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\npreviously allocated by thread T0 here:\n    #0 0x7ff2efa6b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5622444b7ec0 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x5622444c393c in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:25\n    #3 0x5622444c1c65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5622444c21a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5622444c2bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5622444c3cc0 in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #7 0x7ff2ef7d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/asan/asan_interceptors.cc:443 in __interceptor_strdup\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[fd]fa fa fa 06 fa fa fa fa fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3816351==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816777==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55c72fcf98e3 bp 0x7fffe4ab0490 sp 0x7fffe4ab0430 T0)\n==3816777==The signal is caused by a READ memory access.\n==3816777==Hint: address points to the zero page.\n    #0 0x55c72fcf98e2 in list_swap_item_positions parts/gen_list_swap_item_positions.c:28\n    #1 0x55c72fd0585b in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x55c72fd03c65 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55c72fd041a5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55c72fd04bd3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55c72fd05a0a in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fec59e8ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fec59e9007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55c72fcf9804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:28 in list_swap_item_positions\n==3816777==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[       OK ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817108==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55576e3f28dd bp 0x7ffcdbe24c00 sp 0x7ffcdbe24c00 T0)\n==3817108==The signal is caused by a READ memory access.\n==3817108==Hint: address points to the zero page.\n    #0 0x55576e3f28dc in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:29\n    #1 0x55576e3fe85f in test_list_find_highest_price_item_position_nullhead tests_ref/test_list_find_highest_price_item_position_nullhead.c:24\n    #2 0x55576e3fcbba in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55576e3fd0fa in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55576e3fdb28 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55576e3fea5e in main tests_ref/test_list_find_highest_price_item_position_nullhead.c:31\n    #6 0x7f2aba1c9fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f2aba1ca07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55576e3f2804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_find_highest_price_item_position_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:29 in list_find_highest_price_item_position\n==3817108==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817384==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55e6b896d8dd bp 0x7ffc12184300 sp 0x7ffc12184300 T0)\n==3817384==The signal is caused by a READ memory access.\n==3817384==Hint: address points to the zero page.\n    #0 0x55e6b896d8dc in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:29\n    #1 0x55e6b897989f in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55e6b8977bba in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e6b89780fa in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e6b8978b28 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e6b8979a9e in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7fa8d960afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa8d960b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e6b896d804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:29 in list_find_highest_price_item_position\n==3817384==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817663==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a7a36b88e1 bp 0x7ffc79985d90 sp 0x7ffc79985d90 T0)\n==3817663==The signal is caused by a WRITE memory access.\n==3817663==Hint: address points to the zero page.\n    #0 0x55a7a36b88e0 in list_cost_sum parts/gen_list_cost_sum.c:29\n    #1 0x55a7a36c4957 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x55a7a36c2baf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a7a36c30ef in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a7a36c3b1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a7a36c4b7e in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f6144c6cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f6144c6d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a7a36b8804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:29 in list_cost_sum\n==3817663==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n",
            "stderr": "=================================================================\n==3817916==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[  FAILED  ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"apple\" != \"item1\"\n[   LINE   ] --- tests_ref/test_list_load.c:33: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3817992==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fda1b15b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558d8638b9df in list_load parts/gen_list_load.c:56\n    #2 0x558d86397adc in test_list_load tests_ref/test_list_load.c:27\n    #3 0x558d86395d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558d863962c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558d86396cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558d863985ed in main tests_ref/test_list_load.c:53\n    #7 0x7fda1ae4ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fda1b15b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558d8638bfbe in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x558d86397aab in test_list_load tests_ref/test_list_load.c:26\n    #3 0x558d86395d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558d863962c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558d86396cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558d863985ed in main tests_ref/test_list_load.c:53\n    #7 0x7fda1ae4ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 48 byte(s) in 2 object(s) allocated from:\n    #0 0x7fda1b15b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558d8638b9df in list_load parts/gen_list_load.c:56\n    #2 0x558d86397adc in test_list_load tests_ref/test_list_load.c:27\n    #3 0x558d86395d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558d863962c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558d86396cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558d863985ed in main tests_ref/test_list_load.c:53\n    #7 0x7fda1ae4ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 29 byte(s) in 2 object(s) allocated from:\n    #0 0x7fda1b0e43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558d8638b9ce in list_load parts/gen_list_load.c:54\n    #2 0x558d86397adc in test_list_load tests_ref/test_list_load.c:27\n    #3 0x558d86395d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558d863962c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558d86396cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558d863985ed in main tests_ref/test_list_load.c:53\n    #7 0x7fda1ae4ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fda1b0e43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x558d8638bfdf in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x558d86397aab in test_list_load tests_ref/test_list_load.c:26\n    #3 0x558d86395d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558d863962c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558d86396cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558d863985ed in main tests_ref/test_list_load.c:53\n    #7 0x7fda1ae4ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 131 byte(s) leaked in 7 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818365==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563c8df43a8c bp 0x7ffe92ddddf0 sp 0x7ffe92dddca0 T0)\n==3818365==The signal is caused by a WRITE memory access.\n==3818365==Hint: address points to the zero page.\n    #0 0x563c8df43a8b in list_load parts/gen_list_load.c:64\n    #1 0x563c8df4f982 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x563c8df4dd84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563c8df4e2c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563c8df4ecf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563c8df4fb31 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fa4b391bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa4b391c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563c8df43884 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_load_nullhead.bin+0x6884)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:64 in list_load\n==3818365==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818610==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f180d085633 bp 0x7ffce9b2dfc0 sp 0x7ffce9b2d9f0 T0)\n==3818610==The signal is caused by a READ memory access.\n==3818610==Hint: address points to the zero page.\n    #0 0x7f180d085632 in __GI_____strtod_l_internal stdlib/strtod_l.c:611\n    #1 0x55e8991aca42 in list_load parts/gen_list_load.c:58\n    #2 0x55e8991b8b42 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #3 0x55e8991b6da4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55e8991b72e4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55e8991b7d12 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55e8991b8f51 in main tests_ref/test_list_load_longitem.c:40\n    #7 0x7f180d063fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f180d06407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x55e8991ac8a4 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_load_longitem.bin+0x68a4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdlib/strtod_l.c:611 in __GI_____strtod_l_internal\n==3818610==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818802==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f6a10eff633 bp 0x7fff3ca5b9f0 sp 0x7fff3ca5b420 T0)\n==3818802==The signal is caused by a READ memory access.\n==3818802==Hint: address points to the zero page.\n    #0 0x7f6a10eff632 in __GI_____strtod_l_internal stdlib/strtod_l.c:611\n    #1 0x55da0abc6a22 in list_load parts/gen_list_load.c:58\n    #2 0x55da0abd2adc in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x55da0abd0d84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55da0abd12c4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55da0abd1cf2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55da0abd2ed3 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f6a10eddfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f6a10ede07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x55da0abc6884 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_load_badparse.bin+0x6884)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdlib/strtod_l.c:611 in __GI_____strtod_l_internal\n==3818802==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3819051==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f388827d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56272bdff248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x56272be0ace5 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f388827d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56272bdff248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x56272bdfed53 in list_deduplicate parts/gen_list_deduplicate.c:91\n    #3 0x56272be0ad4c in test_list_deduplicate tests_ref/test_list_deduplicate.c:27\n    #4 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #8 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f388827d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56272bdff248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x56272bdfed53 in list_deduplicate parts/gen_list_deduplicate.c:91\n    #3 0x56272be0ad4c in test_list_deduplicate tests_ref/test_list_deduplicate.c:27\n    #4 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #8 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f388827d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56272bdff248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x56272be0ad25 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 12 byte(s) in 2 object(s) allocated from:\n    #0 0x7f38882063ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56272bdff269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x56272bdfed53 in list_deduplicate parts/gen_list_deduplicate.c:91\n    #3 0x56272be0ad4c in test_list_deduplicate tests_ref/test_list_deduplicate.c:27\n    #4 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #8 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f38882063ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56272bdff269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x56272be0ad25 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f38882063ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56272bdff269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x56272be0ace5 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x56272be0900e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56272be0954e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56272be09f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56272be0b13d in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f3887f71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 120 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819414==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e360ef3908 bp 0x7ffc97a75a20 sp 0x7ffc97a75960 T0)\n==3819414==The signal is caused by a READ memory access.\n==3819414==Hint: address points to the zero page.\n    #0 0x55e360ef3907 in list_deduplicate parts/gen_list_deduplicate.c:32\n    #1 0x55e360effbfa in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55e360efe00e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e360efe54e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e360efef7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e360effda9 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fa4eabb1fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fa4eabb207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e360ef3804 in _start (/home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:32 in list_deduplicate\n==3819414==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3819630==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f9485170808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5600e5c75248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x5600e5c80ce5 in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:25\n    #3 0x5600e5c7f00e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5600e5c7f54e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5600e5c7ff7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5600e5c810fd in main tests_ref/test_list_deduplicate_single.c:38\n    #7 0x7f9484e64fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94850f93ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5600e5c75269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x5600e5c80ce5 in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:25\n    #3 0x5600e5c7f00e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5600e5c7f54e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5600e5c7ff7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5600e5c810fd in main tests_ref/test_list_deduplicate_single.c:38\n    #7 0x7f9484e64fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3819972==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbaa5e2808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5586512cc248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x5586512d7ce5 in test_list_deduplicate_nodups tests_ref/test_list_deduplicate_nodups.c:25\n    #3 0x5586512d600e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5586512d654e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5586512d6f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5586512d832c in main tests_ref/test_list_deduplicate_nodups.c:42\n    #7 0x7ffbaa2d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbaa5e2808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5586512cc248 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:114\n    #2 0x5586512d7d25 in test_list_deduplicate_nodups tests_ref/test_list_deduplicate_nodups.c:26\n    #3 0x5586512d600e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5586512d654e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5586512d6f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5586512d832c in main tests_ref/test_list_deduplicate_nodups.c:42\n    #7 0x7ffbaa2d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbaa56b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5586512cc269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x5586512d7d25 in test_list_deduplicate_nodups tests_ref/test_list_deduplicate_nodups.c:26\n    #3 0x5586512d600e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5586512d654e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5586512d6f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5586512d832c in main tests_ref/test_list_deduplicate_nodups.c:42\n    #7 0x7ffbaa2d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffbaa56b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5586512cc269 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/9702f54c-200b-41f5-9fc4-971af3d86785/reflist.c:118\n    #2 0x5586512d7ce5 in test_list_deduplicate_nodups tests_ref/test_list_deduplicate_nodups.c:25\n    #3 0x5586512d600e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5586512d654e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5586512d6f7c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5586512d832c in main tests_ref/test_list_deduplicate_nodups.c:42\n    #7 0x7ffbaa2d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        }
    },
    "passed": 15,
    "total": 45,
    "passed_functional": 10,
    "total_functional": 26
}
