{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n",
            "stderr": "=================================================================\n==3830829==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000017 at pc 0x7fa3cf1c8a8d bp 0x7ffd9b537810 sp 0x7ffd9b536fa0\nWRITE of size 22 at 0x602000000017 thread T0\n    #0 0x7fa3cf1c8a8c in __interceptor_vsnprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608\n    #1 0x7fa3cf1c8f2e in __interceptor_snprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1679\n    #2 0x563925205a8d in ref_list_item_to_string /home/gustavo/git/codex_study_grading/repos/a80d5d0f-724e-4a28-8af1-02ca84993567/reflist.c:44\n    #3 0x56392520590d in list_print parts/gen_list_print.c:44\n    #4 0x56392521197e in test_list_print tests_orig/test_list_print.c:27\n    #5 0x56392520fbbe in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x5639252100fe in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x563925210b2c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x563925211bc3 in main tests_orig/test_list_print.c:40\n    #9 0x7fa3cef2afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fa3cef2b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x563925205804 in _start (/home/gustavo/git/codex_study_grading/repos/a80d5d0f-724e-4a28-8af1-02ca84993567/tests_orig/test_list_print.bin+0x6804)\n\n0x602000000017 is located 0 bytes to the right of 7-byte region [0x602000000010,0x602000000017)\nallocated by thread T0 here:\n    #0 0x7fa3cf1bf3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x563925205e19 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/a80d5d0f-724e-4a28-8af1-02ca84993567/reflist.c:118\n    #2 0x563925211895 in test_list_print tests_orig/test_list_print.c:23\n    #3 0x56392520fbbe in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5639252100fe in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563925210b2c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563925211bc3 in main tests_orig/test_list_print.c:40\n    #7 0x7fa3cef2afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608 in __interceptor_vsnprintf\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[07]fa fa fa 07 fa fa fa 06 fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3830829==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[  FAILED  ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item1\" != \"item2\"\n[   LINE   ] --- tests_orig/test_list_swap_item_positions.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[  FAILED  ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x3\n[   LINE   ] --- tests_orig/test_list_find_highest_price_item_position.c:28: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[  FAILED  ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0.000000 != 16.000000\n[   LINE   ] --- tests_orig/test_list_cost_sum.c:28: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- fp\n[   LINE   ] --- tests_orig/test_list_save.c:28: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3831020==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f14db4086a bp 0x7ffcdb14c7e0 sp 0x7ffcdb14c740 T0)\n==3831020==The signal is caused by a READ memory access.\n==3831020==Hint: address points to the zero page.\n    #0 0x55f14db40869 in test_list_load tests_orig/test_list_load.c:28\n    #1 0x55f14db3eb5a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55f14db3f09a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55f14db3fac8 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55f14db41020 in main tests_orig/test_list_load.c:44\n    #5 0x7f064e7dcfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7f064e7dd07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55f14db34804 in _start (/home/gustavo/git/codex_study_grading/repos/a80d5d0f-724e-4a28-8af1-02ca84993567/tests_orig/test_list_load.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_orig/test_list_load.c:28 in test_list_load\n==3831020==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_orig/test_list_deduplicate.c:28: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        }
    },
    "passed": 4,
    "total": 12,
    "passed_functional": 4,
    "total_functional": 12
}
