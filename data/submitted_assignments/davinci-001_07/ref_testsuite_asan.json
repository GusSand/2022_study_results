{
    "results": {
        "test_list_init": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[  FAILED  ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head\n[   LINE   ] --- tests_ref/test_list_init.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_init\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3146866==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f82402c8808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55c56a8a48f0 in list_init parts/gen_list_init.c:27\n    #2 0x55c56a8b0836 in test_list_init tests_ref/test_list_init.c:24\n    #3 0x55c56a8aeb63 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55c56a8af098 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55c56a8afadc in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55c56a8b0a98 in main tests_ref/test_list_init.c:32\n    #7 0x7f823ffed082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n[       OK ] test_list_init_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[  FAILED  ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3147330==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56293cda98ec bp 0x7ffe73b174b0 sp 0x7ffe73b17470 T0)\n==3147330==The signal is caused by a READ memory access.\n==3147330==Hint: address points to the zero page.\n    #0 0x56293cda98eb in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:35\n    #1 0x56293cdb588f in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x56293cdb3c4d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56293cdb4182 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56293cdb4bc6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56293cdb5a56 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f27f59a0082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x56293cda980d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:35 in list_add_item_at_pos\n==3147330==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[       OK ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3147843==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f35c7b68808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55c589ce691a in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:41\n    #2 0x55c589cf2961 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x55c589cf0c4d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55c589cf1182 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55c589cf1bc6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55c589cf2c45 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f35c788d082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3149094==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 100 byte(s) in 1 object(s) allocated from:\n    #0 0x7f396dbea808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55f44e96c919 in list_item_to_string parts/gen_list_item_to_string.c:30\n    #2 0x55f44e978982 in test_list_item_to_string tests_ref/test_list_item_to_string.c:27\n    #3 0x55f44e976bdb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f44e977110 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f44e977b54 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f44e978c2e in main tests_ref/test_list_item_to_string.c:37\n    #7 0x7f396d90f082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 100 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3149569==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5589590fb909 bp 0x7ffd1dba73c0 sp 0x7ffd1dba7390 T0)\n==3149569==The signal is caused by a READ memory access.\n==3149569==Hint: address points to the zero page.\n    #0 0x5589590fb908 in list_item_to_string parts/gen_list_item_to_string.c:29\n    #1 0x5589591078ab in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x558959105bdb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x558959106110 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x558959106b54 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x558959107af8 in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7f13ba6d2082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5589590fb82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_item_to_string_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:29 in list_item_to_string\n==3149569==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n[       OK ] test_list_item_to_string_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3149936==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 100 byte(s) in 1 object(s) allocated from:\n    #0 0x7f60ebc8a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bf488e3919 in list_item_to_string parts/gen_list_item_to_string.c:30\n    #2 0x55bf488ef93e in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #3 0x55bf488edbdb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bf488ee110 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bf488eeb54 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bf488efb7d in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #7 0x7f60eb9af082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 100 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3150327==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe05ed0184 at pc 0x7f6f8826e725 bp 0x7ffe05ecff80 sp 0x7ffe05ecf710\nWRITE of size 527 at 0x7ffe05ed0184 thread T0\n    #0 0x7f6f8826e724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f6f8826ebde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x565107dfd9b4 in list_item_to_string parts/gen_list_item_to_string.c:37\n    #3 0x565107e09a19 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x565107e07bfb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x565107e08130 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x565107e08b74 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x565107e09ce7 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f6f88002082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x565107dfd84d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_item_to_string_longstr.bin+0x584d)\n\nAddress 0x7ffe05ed0184 is located in stack of thread T0 at offset 180 in frame\n    #0 0x565107e0981a in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [48, 56) 'head' (line 27)\n    [80, 180) 'str' (line 23)\n    [224, 736) 'longstr' (line 24) <== Memory access at offset 180 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100040bd1fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd1ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2010: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00\n  0x100040bd2020: 00 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x100040bd2030:[04]f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100040bd2070: 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 f3 00 00\n  0x100040bd2080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3150327==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3151132==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 300 byte(s) in 1 object(s) allocated from:\n    #0 0x7f1aeef40808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55aea3e188f1 in list_print parts/gen_list_print.c:39\n    #2 0x55aea3e2498b in test_list_print tests_ref/test_list_print.c:29\n    #3 0x55aea3e22b8e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55aea3e230c3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55aea3e23b07 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55aea3e24c10 in main tests_ref/test_list_print.c:43\n    #7 0x7f1aeec65082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 300 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3151425==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 300 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6557d44808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55abd62988f1 in list_print parts/gen_list_print.c:39\n    #2 0x55abd62a47b7 in test_list_print_nullhead tests_ref/test_list_print_nullhead.c:23\n    #3 0x55abd62a2b8e in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55abd62a30c3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55abd62a3b07 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55abd62a497e in main tests_ref/test_list_print_nullhead.c:30\n    #7 0x7f6557a69082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 300 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3152252==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 300 byte(s) in 1 object(s) allocated from:\n    #0 0x7fa8e806b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5570d73f1911 in list_print parts/gen_list_print.c:39\n    #2 0x5570d73fd9b6 in test_list_print_longitem tests_ref/test_list_print_longitem.c:30\n    #3 0x5570d73fbbae in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5570d73fc0e3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5570d73fcb27 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5570d73fdc69 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7fa8e7d90082 in __libc_start_main ../csu/libc-start.c:308\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fa8e806b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5570d73f1e41 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x5570d73fd949 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5570d73fbbae in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5570d73fc0e3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5570d73fcb27 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5570d73fdc69 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7fa8e7d90082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7fa8e7ff43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5570d73f1e62 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x5570d73fd949 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5570d73fbbae in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5570d73fc0e3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5570d73fcb27 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5570d73fdc69 in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7fa8e7d90082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 836 byte(s) leaked in 3 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3152905==ERROR: AddressSanitizer: SEGV on unknown address 0x55f1a399a830 (pc 0x7f790fe0ca16 bp 0x55f1a399a830 sp 0x7ffffa733480 T0)\n==3152905==The signal is caused by a WRITE memory access.\n    #0 0x7f790fe0ca15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f790fe0ca15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f790fe0ca15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f790fe0ca15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f790fef13d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55f1a39963b3 in list_free test_common.h:35\n    #6 0x55f1a3996a92 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x55f1a3994bac in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55f1a39950e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55f1a3995b25 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55f1a3996cab in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7f790fc16082 in __libc_start_main ../csu/libc-start.c:308\n    #12 0x55f1a398a80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_update_item_at_pos.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3152905==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3154105==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f5e41e28e8 bp 0x7ffc79c8abe0 sp 0x7ffc79c8abe0 T0)\n==3154105==The signal is caused by a READ memory access.\n==3154105==Hint: address points to the zero page.\n    #0 0x55f5e41e28e7 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:25\n    #1 0x55f5e41ee7f9 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55f5e41ecbac in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f5e41ed0e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f5e41edb25 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f5e41ee9c0 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7ff80dc79082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55f5e41e280d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:25 in list_update_item_at_pos\n==3154105==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3154419==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb6e3bcb808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b5079ece3f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x55b5079f88c0 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x55b5079f6bac in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b5079f70e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b5079f7b25 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b5079f8c9b in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fb6e38f0082 in __libc_start_main ../csu/libc-start.c:308\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fb6e3b543ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b5079ece60 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x55b5079f88c0 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x55b5079f6bac in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b5079f70e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b5079f7b25 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b5079f8c9b in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fb6e38f0082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3155345==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55fd434eb947 bp 0x7fff1a64c960 sp 0x7fff1a64c960 T0)\n==3155345==The signal is caused by a READ memory access.\n==3155345==Hint: address points to the zero page.\n    #0 0x55fd434eb946 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:38\n    #1 0x55fd434f790e in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:27\n    #2 0x55fd434f5bac in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55fd434f60e1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55fd434f6b25 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55fd434f7d2b in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7f4e25f4f082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55fd434eb80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_update_item_at_pos_oob.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:38 in list_update_item_at_pos\n==3155345==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3155633==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5590d2e2090b bp 0x7ffd455a43d0 sp 0x7ffd455a43a0 T0)\n==3155633==The signal is caused by a READ memory access.\n==3155633==Hint: address points to the zero page.\n    #0 0x5590d2e2090a in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:31\n    #1 0x5590d2e2c95b in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:29\n    #2 0x5590d2e2ab9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5590d2e2b0d0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5590d2e2bb14 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5590d2e2cd79 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #6 0x7ff33d9d3082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5590d2e2080d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_remove_item_at_pos.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:31 in list_remove_item_at_pos\n==3155633==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3156567==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a74ec5e8e0 bp 0x7ffe4935f9c0 sp 0x7ffe4935f990 T0)\n==3156567==The signal is caused by a READ memory access.\n==3156567==Hint: address points to the zero page.\n    #0 0x55a74ec5e8df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:25\n    #1 0x55a74ec6a7c9 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55a74ec68b9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a74ec690d0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a74ec69b14 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a74ec6a990 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fef8d605082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55a74ec5e80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:25 in list_remove_item_at_pos\n==3156567==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3156908==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55f1f04c8936 bp 0x7ffee5b31470 sp 0x7ffee5b31440 T0)\n==3156908==The signal is caused by a READ memory access.\n==3156908==Hint: address points to the zero page.\n    #0 0x55f1f04c8935 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:37\n    #1 0x55f1f04d48db in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55f1f04d2b9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f1f04d30d0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f1f04d3b14 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f1f04d4d10 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7f460eb5e082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55f1f04c880d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_remove_item_at_pos_oob.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:37 in list_remove_item_at_pos\n==3156908==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3157864==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x557500e7e93d bp 0x7ffd4106d3f0 sp 0x7ffd4106d3f0 T0)\n==3157864==The signal is caused by a READ memory access.\n==3157864==Hint: address points to the zero page.\n    #0 0x557500e7e93c in list_swap_item_positions parts/gen_list_swap_item_positions.c:40\n    #1 0x557500e8a98f in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #2 0x557500e88bca in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557500e890ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557500e89b43 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557500e8b0f9 in main tests_ref/test_list_swap_item_positions.c:47\n    #6 0x7fd7edf38082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x557500e7e80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_swap_item_positions.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:40 in list_swap_item_positions\n==3157864==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3158059==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55d7a8cf293d bp 0x7fff0bc34eb0 sp 0x7fff0bc34eb0 T0)\n==3158059==The signal is caused by a READ memory access.\n==3158059==Hint: address points to the zero page.\n    #0 0x55d7a8cf293c in list_swap_item_positions parts/gen_list_swap_item_positions.c:40\n    #1 0x55d7a8cfe94f in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #2 0x55d7a8cfcbca in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55d7a8cfd0ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55d7a8cfdb43 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55d7a8cfec7a in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #6 0x7fe8036b9082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55d7a8cf280d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_swap_item_positions_samepos.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:40 in list_swap_item_positions\n==3158059==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3158751==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563274a078df bp 0x7ffe16721470 sp 0x7ffe16721470 T0)\n==3158751==The signal is caused by a READ memory access.\n==3158751==Hint: address points to the zero page.\n    #0 0x563274a078de in list_swap_item_positions parts/gen_list_swap_item_positions.c:25\n    #1 0x563274a137fd in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x563274a11bca in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563274a120ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563274a12b43 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563274a139c4 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f94a0733082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x563274a0780d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_swap_item_positions_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:25 in list_swap_item_positions\n==3158751==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3159383==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55614880493d bp 0x7ffe81c75ce0 sp 0x7ffe81c75ce0 T0)\n==3159383==The signal is caused by a READ memory access.\n==3159383==Hint: address points to the zero page.\n    #0 0x55614880493c in list_swap_item_positions parts/gen_list_swap_item_positions.c:40\n    #1 0x55614881094f in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:27\n    #2 0x55614880ebca in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55614880f0ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55614880fb43 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x556148810d6f in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7f6527b6a082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55614880480d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_swap_item_positions_oob.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:40 in list_swap_item_positions\n==3159383==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3159795==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55be698ab93d bp 0x7ffcc8748010 sp 0x7ffcc8748010 T0)\n==3159795==The signal is caused by a READ memory access.\n==3159795==Hint: address points to the zero page.\n    #0 0x55be698ab93c in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:39\n    #1 0x55be698b79d8 in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:29\n    #2 0x55be698b5bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55be698b60e0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55be698b6b24 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55be698b7c7e in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #6 0x7f920561b082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55be698ab80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_find_highest_price_item_position.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:39 in list_find_highest_price_item_position\n==3159795==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3160121==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x559bc8a3d8e5 bp 0x7ffcca26bac0 sp 0x7ffcca26bac0 T0)\n==3160121==The signal is caused by a READ memory access.\n==3160121==Hint: address points to the zero page.\n    #0 0x559bc8a3d8e4 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:26\n    #1 0x559bc8a4988d in test_list_find_highest_price_item_position_nullhead tests_ref/test_list_find_highest_price_item_position_nullhead.c:24\n    #2 0x559bc8a47bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x559bc8a480e0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559bc8a48b24 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x559bc8a49aa4 in main tests_ref/test_list_find_highest_price_item_position_nullhead.c:31\n    #6 0x7fc29166b082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x559bc8a3d80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_find_highest_price_item_position_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:26 in list_find_highest_price_item_position\n==3160121==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3160526==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55b5e72dd8e5 bp 0x7ffcd27e5f60 sp 0x7ffcd27e5f60 T0)\n==3160526==The signal is caused by a READ memory access.\n==3160526==Hint: address points to the zero page.\n    #0 0x55b5e72dd8e4 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:26\n    #1 0x55b5e72e98cd in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55b5e72e7bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b5e72e80e0 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b5e72e8b24 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b5e72e9ae4 in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7fd2e79e5082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55b5e72dd80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:26 in list_find_highest_price_item_position\n==3160526==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3161694==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55ad3fd7c92a bp 0x7ffe6d6e6fc0 sp 0x7ffe6d6e6fc0 T0)\n==3161694==The signal is caused by a READ memory access.\n==3161694==Hint: address points to the zero page.\n    #0 0x55ad3fd7c929 in list_cost_sum parts/gen_list_cost_sum.c:32\n    #1 0x55ad3fd889bb in test_list_cost_sum tests_ref/test_list_cost_sum.c:29\n    #2 0x55ad3fd86b8c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ad3fd870c1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ad3fd87b05 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ad3fd88c6b in main tests_ref/test_list_cost_sum.c:38\n    #6 0x7efe14e99082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55ad3fd7c80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_cost_sum.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:32 in list_cost_sum\n==3161694==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3162235==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x557d10c598e5 bp 0x7ffe12f3c4a0 sp 0x7ffe12f3c4a0 T0)\n==3162235==The signal is caused by a READ memory access.\n==3162235==Hint: address points to the zero page.\n    #0 0x557d10c598e4 in list_cost_sum parts/gen_list_cost_sum.c:26\n    #1 0x557d10c65870 in test_list_cost_sum_nullhead tests_ref/test_list_cost_sum_nullhead.c:24\n    #2 0x557d10c63b8c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557d10c640c1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557d10c64b05 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557d10c65a87 in main tests_ref/test_list_cost_sum_nullhead.c:31\n    #6 0x7fcb7e14d082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x557d10c5980d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_cost_sum_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:26 in list_cost_sum\n==3162235==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3162790==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5573f346892a bp 0x7ffcf3b14f90 sp 0x7ffcf3b14f90 T0)\n==3162790==The signal is caused by a READ memory access.\n==3162790==Hint: address points to the zero page.\n    #0 0x5573f3468929 in list_cost_sum parts/gen_list_cost_sum.c:32\n    #1 0x5573f3474971 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x5573f3472b8c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5573f34730c1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5573f3473b05 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5573f3474bb0 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f3da65bc082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5573f346880d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_cost_sum_nulltotal.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:32 in list_cost_sum\n==3162790==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item1,1.000000,1\n\" != \"item1,1.00,1\n\"\n[   LINE   ] --- tests_ref/test_list_save.c:40: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3163665==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc86f808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b24867feba in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x55b24868ba89 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc7f83ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b24867fedb in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x55b24868bb52 in test_list_save tests_ref/test_list_save.c:31\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc86f808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b24867feba in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x55b24868bb52 in test_list_save tests_ref/test_list_save.c:31\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc86f808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b24867feba in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x55b24868bacc in test_list_save tests_ref/test_list_save.c:29\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc86f808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b24867feba in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x55b24868bb0f in test_list_save tests_ref/test_list_save.c:30\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc7f83ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b24867fedb in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x55b24868bb0f in test_list_save tests_ref/test_list_save.c:30\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc7f83ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b24867fedb in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x55b24868bacc in test_list_save tests_ref/test_list_save.c:29\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f94fc7f83ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55b24867fedb in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x55b24868ba89 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x55b248689c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b24868a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b24868aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b24868c0c4 in main tests_ref/test_list_save.c:64\n    #7 0x7f94fc594082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 628 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3164531==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55db9538cc6d bp 0x7fffc5c876b0 sp 0x7fffc5c87610 T0)\n==3164531==The signal is caused by a READ memory access.\n==3164531==Hint: address points to the zero page.\n    #0 0x55db9538cc6c in test_list_load tests_ref/test_list_load.c:36\n    #1 0x55db9538acf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55db9538b22a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55db9538bc6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55db9538d5bb in main tests_ref/test_list_load.c:53\n    #5 0x7f5578e40082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x55db9538086d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_load.bin+0x686d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3164531==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3164936==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x560bfea70950 bp 0x7fff546db670 sp 0x7fff546db600 T0)\n==3164936==The signal is caused by a READ memory access.\n==3164936==Hint: address points to the zero page.\n    #0 0x560bfea7094f in list_load parts/gen_list_load.c:29\n    #1 0x560bfea7c930 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x560bfea7acf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x560bfea7b22a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x560bfea7bc6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x560bfea7caf7 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fcc7cec0082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x560bfea7086d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_load_nullhead.bin+0x686d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:29 in list_load\n==3164936==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3165839==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55a4b5f56b57 bp 0x7ffeb9304930 sp 0x7ffeb9304650 T0)\n==3165839==The signal is caused by a READ memory access.\n==3165839==Hint: address points to the zero page.\n    #0 0x55a4b5f56b56 in test_list_load_longitem tests_ref/test_list_load_longitem.c:30\n    #1 0x55a4b5f54d15 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55a4b5f5524a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55a4b5f55c8e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55a4b5f56f0d in main tests_ref/test_list_load_longitem.c:40\n    #5 0x7f5e265e1082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x55a4b5f4a88d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_load_longitem.bin+0x688d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load_longitem.c:30 in test_list_load_longitem\n==3165839==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3166494==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f102e2e2c3b bp 0x7ffcdf932120 sp 0x7ffcdf931c30 T0)\n==3166494==The signal is caused by a READ memory access.\n==3166494==Hint: address points to the zero page.\n    #0 0x7f102e2e2c3a in __GI_____strtod_l_internal /build/glibc-SzIz7B/glibc-2.31/stdlib/strtod_l.c:611\n    #1 0x55738b1b4a19 in list_load parts/gen_list_load.c:53\n    #2 0x55738b1c0a8a in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x55738b1becf5 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55738b1bf22a in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55738b1bfc6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55738b1c0e9b in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f102e2ba082 in __libc_start_main ../csu/libc-start.c:308\n    #8 0x55738b1b486d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_load_badparse.bin+0x686d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /build/glibc-SzIz7B/glibc-2.31/stdlib/strtod_l.c:611 in __GI_____strtod_l_internal\n==3166494==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3166919==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6777961808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x562a39575e61 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x562a395818e2 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x562a3957fbce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562a39580103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562a39580b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562a39581d54 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f6777686082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6777961808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x562a39575e61 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:114\n    #2 0x562a39581922 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x562a3957fbce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562a39580103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562a39580b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562a39581d54 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f6777686082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f67778ea3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x562a39575e82 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x562a39581922 in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x562a3957fbce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562a39580103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562a39580b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562a39581d54 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f6777686082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f67778ea3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x562a39575e82 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-001_07/reflist.c:118\n    #2 0x562a395818e2 in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x562a3957fbce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x562a39580103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x562a39580b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x562a39581d54 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f6777686082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3167604==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x562f7434b8dd bp 0x7ffdcc5f5b80 sp 0x7ffdcc5f5b50 T0)\n==3167604==The signal is caused by a READ memory access.\n==3167604==Hint: address points to the zero page.\n    #0 0x562f7434b8dc in list_deduplicate parts/gen_list_deduplicate.c:27\n    #1 0x562f743577f7 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x562f74355bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x562f74356103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x562f74356b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x562f743579be in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fed3da89082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x562f7434b80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_deduplicate_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:27 in list_deduplicate\n==3167604==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3167827==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55943796b8f4 bp 0x7ffcc6f18450 sp 0x7ffcc6f18420 T0)\n==3167827==The signal is caused by a READ memory access.\n==3167827==Hint: address points to the zero page.\n    #0 0x55943796b8f3 in list_deduplicate parts/gen_list_deduplicate.c:29\n    #1 0x559437977909 in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:26\n    #2 0x559437975bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x559437976103 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559437976b47 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x559437977d14 in main tests_ref/test_list_deduplicate_single.c:38\n    #6 0x7fd92216a082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55943796b80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-001_07/tests_ref/test_list_deduplicate_single.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:29 in list_deduplicate\n==3167827==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 9,
    "total": 45,
    "passed_functional": 4,
    "total_functional": 26
}
