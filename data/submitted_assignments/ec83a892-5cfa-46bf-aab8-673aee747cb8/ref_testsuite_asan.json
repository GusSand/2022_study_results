{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3812392==ERROR: AddressSanitizer: SEGV on unknown address 0x5581edbde710 (pc 0x7f369e7cea16 bp 0x5581edbde710 sp 0x7ffe4f62b250 T0)\n==3812392==The signal is caused by a WRITE memory access.\n    #0 0x7f369e7cea15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f369e7cea15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f369e7cea15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f369e7cea15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f369e8b33d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x5581edbda411 in list_free test_common.h:35\n    #6 0x5581edbdad37 in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x5581edbd8c32 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x5581edbd9172 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x5581edbd9ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x5581edbdaf38 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7f369e5a7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f369e5a807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x5581edbce804 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3812392==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3812645==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55d3dd30b940 bp 0x7ffd35048e80 sp 0x7ffd35048e40 T0)\n==3812645==The signal is caused by a WRITE memory access.\n==3812645==Hint: address points to the zero page.\n    #0 0x55d3dd30b93f in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:43\n    #1 0x55d3dd317837 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55d3dd315c32 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55d3dd316172 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55d3dd316ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55d3dd3179e6 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f5852b63fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f5852b6407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55d3dd30b804 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:43 in list_add_item_at_pos\n==3812645==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3812881==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f1852223808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bf172a78f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:37\n    #2 0x55bf172b3905 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x55bf172b1c32 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bf172b2172 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bf172b2ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bf172b3b06 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f1851f17fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3813199==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f3f6bd61808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5567f069b8f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:37\n    #2 0x5567f06a7909 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x5567f06a5c32 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5567f06a6172 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5567f06a6ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5567f06a7bd5 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f3f6ba55fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n[       OK ] test_list_item_to_string_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3813531==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe7241cb54 at pc 0x7f29b57d7725 bp 0x7ffe7241c960 sp 0x7ffe7241c0f0\nWRITE of size 527 at 0x7ffe7241cb54 thread T0\n    #0 0x7f29b57d7724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f29b57d7bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x5654e9727964 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #3 0x5654e97339b3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x5654e9731be6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5654e9732126 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5654e9732b54 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5654e9733c68 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f29b553afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f29b553b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5654e9727844 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffe7241cb54 is located in stack of thread T0 at offset 196 in frame\n    #0 0x5654e97337c8 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10004e47b910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b950: 00 00 f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00\n=>0x10004e47b960: 00 00 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2\n  0x10004e47b970: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b9a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004e47b9b0: 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3813531==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[       OK ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[       OK ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813945==ERROR: AddressSanitizer: SEGV on unknown address 0x564fcddbd750 (pc 0x7fe53f404a16 bp 0x564fcddbd750 sp 0x7ffe3c35eec0 T0)\n==3813945==The signal is caused by a WRITE memory access.\n    #0 0x7fe53f404a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fe53f404a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fe53f404a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fe53f404a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fe53f4e93d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x564fcddb93c2 in list_free test_common.h:35\n    #6 0x564fcddb9a8a in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x564fcddb7be3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x564fcddb8123 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x564fcddb8b51 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x564fcddb9c8b in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7fe53f1ddfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fe53f1de07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x564fcddad804 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3813945==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n[       OK ] test_list_update_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3814213==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fcc1ff6d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5606f311ce1d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x5606f31288ba in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x5606f3126be3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606f3127123 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606f3127b51 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606f3128c7b in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fcc1fc61fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fcc1fef63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5606f311ce3e in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x5606f31288ba in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x5606f3126be3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5606f3127123 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5606f3127b51 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5606f3128c7b in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7fcc1fc61fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3814595==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f43c23f4808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x561bdd3a2e1d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x561bdd3ae8c8 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x561bdd3acbe3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x561bdd3ad123 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x561bdd3adb51 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x561bdd3aed0b in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f43c20e8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f43c237d3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x561bdd3a2e3e in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x561bdd3ae8c8 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x561bdd3acbe3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x561bdd3ad123 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x561bdd3adb51 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x561bdd3aed0b in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f43c20e8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3815013==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4bac808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56431b32ee26 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x56431b33a8c3 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4bac808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56431b32ee26 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x56431b33a943 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4bac808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x56431b32ee26 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x56431b33a903 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4b353ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56431b32ee47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x56431b33a943 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4b353ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56431b32ee47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x56431b33a903 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cd4b353ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x56431b32ee47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x56431b33a8c3 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x56431b338bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x56431b33912c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x56431b339b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x56431b33ad75 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2cd48a0fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n[       OK ] test_list_remove_item_at_pos_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3815462==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f1936477808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a1598bbe26 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x55a1598c78c3 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55a1598c5bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a1598c612c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a1598c6b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a1598c7d0a in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f193616bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f19364003ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a1598bbe47 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x55a1598c78c3 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:25\n    #3 0x55a1598c5bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a1598c612c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a1598c6b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a1598c7d0a in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #7 0x7f193616bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n[       OK ] test_list_swap_item_positions_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[  FAILED  ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_swap_item_positions_oob.c:28: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3815926==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fbb41e02808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555c90658ee5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x555c90664982 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x555c90662cab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555c906631eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555c90663c19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555c90664dfb in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fbb41af6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fbb41e02808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555c90658ee5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x555c906649c2 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x555c90662cab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555c906631eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555c90663c19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555c90664dfb in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fbb41af6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fbb41d8b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555c90658f06 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x555c906649c2 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x555c90662cab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555c906631eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555c90663c19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555c90664dfb in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fbb41af6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fbb41d8b3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555c90658f06 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x555c90664982 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x555c90662cab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555c906631eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555c90663c19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555c90664dfb in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fbb41af6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[       OK ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[       OK ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[       OK ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816454==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5630dcc9f93c bp 0x7ffe4a636350 sp 0x7ffe4a636350 T0)\n==3816454==The signal is caused by a WRITE memory access.\n==3816454==Hint: address points to the zero page.\n    #0 0x5630dcc9f93b in list_cost_sum parts/gen_list_cost_sum.c:35\n    #1 0x5630dccab969 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x5630dcca9bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5630dccaa101 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5630dccaab2f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5630dccabb90 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7ff69f41dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ff69f41e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5630dcc9f804 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:35 in list_cost_sum\n==3816454==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n",
            "stderr": "=================================================================\n==3816698==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816782==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fda8d86eff2 bp 0x7ffc18403ff0 sp 0x7ffc18403730 T0)\n==3816782==The signal is caused by a READ memory access.\n==3816782==Hint: address points to the zero page.\n    #0 0x7fda8d86eff1 in __GI__IO_fwrite libio/iofwrite.c:35\n    #1 0x7fda8da81055 in __interceptor_fwrite ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1102\n    #2 0x564f745eea03 in list_save parts/gen_list_save.c:38\n    #3 0x564f745faab4 in test_list_save_badfile tests_ref/test_list_save_badfile.c:31\n    #4 0x564f745f8cbc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x564f745f91fc in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x564f745f9c2a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x564f745face1 in main tests_ref/test_list_save_badfile.c:39\n    #8 0x7fda8d818fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fda8d81907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x564f745ee844 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_save_badfile.bin+0x6844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iofwrite.c:35 in __GI__IO_fwrite\n==3816782==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817264==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b2ff1b59b0 bp 0x7fff73fcaf80 sp 0x7fff73fcaee0 T0)\n==3817264==The signal is caused by a READ memory access.\n==3817264==Hint: address points to the zero page.\n    #0 0x55b2ff1b59af in list_load parts/gen_list_load.c:33\n    #1 0x55b2ff1c19b2 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x55b2ff1bfdb4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b2ff1c02f4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b2ff1c0d22 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b2ff1c1b61 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7faa1bb40fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7faa1bb4107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55b2ff1b58a4 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_load_nullhead.bin+0x68a4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:33 in list_load\n==3817264==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817546==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f2cd93b8633 bp 0x7ffcf1fd2620 sp 0x7ffcf1fd2100 T0)\n==3817546==The signal is caused by a READ memory access.\n==3817546==Hint: address points to the zero page.\n    #0 0x7f2cd93b8632 in __GI_____strtod_l_internal stdlib/strtod_l.c:611\n    #1 0x55a440271a88 in list_load parts/gen_list_load.c:43\n    #2 0x55a44027db72 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #3 0x55a44027bdd4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a44027c314 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a44027cd42 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a44027df81 in main tests_ref/test_list_load_longitem.c:40\n    #7 0x7f2cd9396fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7f2cd939707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x55a4402718c4 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_load_longitem.bin+0x68c4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdlib/strtod_l.c:611 in __GI_____strtod_l_internal\n==3817546==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817789==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fdb67968633 bp 0x7fff91f78300 sp 0x7fff91f77de0 T0)\n==3817789==The signal is caused by a READ memory access.\n==3817789==Hint: address points to the zero page.\n    #0 0x7fdb67968632 in __GI_____strtod_l_internal stdlib/strtod_l.c:611\n    #1 0x556f92987a68 in list_load parts/gen_list_load.c:43\n    #2 0x556f92993b0c in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x556f92991db4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x556f929922f4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556f92992d22 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556f92993f03 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fdb67946fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #8 0x7fdb6794707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #9 0x556f929878a4 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_load_badparse.bin+0x68a4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdlib/strtod_l.c:611 in __GI_____strtod_l_internal\n==3817789==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818048==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f20d0456455 bp 0x000000000000 sp 0x7ffc8c005680 T0)\n==3818048==The signal is caused by a READ memory access.\n==3818048==Hint: address points to the zero page.\n    #0 0x7f20d0456454 in _IO_fgets libio/iofgets.c:39\n    #1 0x7f20d0652e2f in __interceptor_fgets ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1198\n    #2 0x564f00570b29 in list_load parts/gen_list_load.c:39\n    #3 0x564f0057cb67 in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #4 0x564f0057add4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x564f0057b314 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x564f0057bd42 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x564f0057cd6e in main tests_ref/test_list_load_badfile.c:37\n    #8 0x7f20d0400fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f20d040107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x564f005708c4 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_load_badfile.bin+0x68c4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iofgets.c:39 in _IO_fgets\n==3818048==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818401==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fc6936ab455 bp 0x000000000000 sp 0x7ffec8247390 T0)\n==3818401==The signal is caused by a READ memory access.\n==3818401==Hint: address points to the zero page.\n    #0 0x7fc6936ab454 in _IO_fgets libio/iofgets.c:39\n    #1 0x7fc6938a7e2f in __interceptor_fgets ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1198\n    #2 0x561561b3ab09 in list_load parts/gen_list_load.c:39\n    #3 0x561561b46ace in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #4 0x561561b44db4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x561561b452f4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x561561b45d22 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x561561b46ccf in main tests_ref/test_list_load_missingfile.c:36\n    #8 0x7fc693655fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fc69365607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x561561b3a8a4 in _start (/home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/tests_ref/test_list_load_missingfile.bin+0x68a4)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iofgets.c:39 in _IO_fgets\n==3818401==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3818742==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac2493d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d8890f9e5d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:114\n    #2 0x55d88910593a in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55d889103c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d889104163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d889104b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d889105d52 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fac24631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac248c63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d8890f9e7e in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/ec83a892-5cfa-46bf-aab8-673aee747cb8/reflist.c:118\n    #2 0x55d88910593a in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55d889103c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d889104163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d889104b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d889105d52 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7fac24631fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n[       OK ] test_list_deduplicate_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 23,
    "total": 45,
    "passed_functional": 10,
    "total_functional": 26
}
