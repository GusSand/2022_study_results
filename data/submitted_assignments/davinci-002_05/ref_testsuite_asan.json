{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3173105==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55eabcd888d9 bp 0x7fff5fb9bad0 sp 0x7fff5fb9bad0 T0)\n==3173105==The signal is caused by a WRITE memory access.\n==3173105==Hint: address points to the zero page.\n    #0 0x55eabcd888d8 in list_init parts/gen_list_init.c:25\n    #1 0x55eabcd9474f in test_list_init_nullhead tests_ref/test_list_init_nullhead.c:23\n    #2 0x55eabcd92b26 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55eabcd9305b in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55eabcd93a9f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55eabcd94916 in main tests_ref/test_list_init_nullhead.c:30\n    #6 0x7f9a2434b082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55eabcd8880d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_init_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_init.c:25 in list_init\n==3173105==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3173581==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55af27e9a9a3 bp 0x7ffda5e192a0 sp 0x7ffda5e19260 T0)\n==3173581==The signal is caused by a READ memory access.\n==3173581==Hint: address points to the zero page.\n    #0 0x55af27e9a9a2 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:48\n    #1 0x55af27ea689d in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55af27ea4c5b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55af27ea5190 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55af27ea5bd4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55af27ea6a64 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7efe35350082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55af27e9a82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:48 in list_add_item_at_pos\n==3173581==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3174309==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f29c55516e5 bp 0x7fff71d2be10 sp 0x7fff71d2b588 T0)\n==3174309==The signal is caused by a READ memory access.\n==3174309==Hint: address points to the zero page.\n    #0 0x7f29c55516e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7f29c562290b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x55cb77495932 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #3 0x55cb774a196b in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x55cb7749fc5b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55cb774a0190 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55cb774a0bd4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55cb774a1b84 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7f29c53ed082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x55cb7749582d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3174309==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3174788==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55a013a84a11 bp 0x7ffc53d17e80 sp 0x7ffc53d17e40 T0)\n==3174788==The signal is caused by a WRITE memory access.\n==3174788==Hint: address points to the zero page.\n    #0 0x55a013a84a10 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:60\n    #1 0x55a013a9096f in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #2 0x55a013a8ec5b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a013a8f190 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a013a8fbd4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a013a90c53 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #6 0x7f6585a32082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55a013a8482d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_add_item_at_pos_oob.bin+0x682d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:60 in list_add_item_at_pos\n==3174788==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3175528==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f127652cae7 bp 0x000000000031 sp 0x7fff76ee2640 T0)\n==3175528==The signal is caused by a WRITE memory access.\n==3175528==Hint: address points to the zero page.\n    #0 0x7f127652cae6 in __GI__IO_str_overflow /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133\n    #1 0x7f127652b023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:399\n    #2 0x7f127652b023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:370\n    #3 0x7f12765107ac in __vfprintf_internal /build/glibc-SzIz7B/glibc-2.31/stdio-common/vfprintf-internal.c:1687\n    #4 0x7f127651e1b7 in __vsprintf_internal /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:95\n    #5 0x7f127651e1b7 in __vsprintf /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:104\n    #6 0x7f1276729664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #7 0x7f1276729bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #8 0x562d5147393d in list_item_to_string parts/gen_list_item_to_string.c:31\n    #9 0x562d5147f8e7 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #10 0x562d5147db84 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #11 0x562d5147e0b9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #12 0x562d5147eafd in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #13 0x562d5147fb26 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #14 0x7f12764bd082 in __libc_start_main ../csu/libc-start.c:308\n    #15 0x562d5147382d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_item_to_string_nullstr.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133 in __GI__IO_str_overflow\n==3175528==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3176046==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdf12de074 at pc 0x7fa3c07cc725 bp 0x7ffdf12dde90 sp 0x7ffdf12dd620\nWRITE of size 527 at 0x7ffdf12de074 thread T0\n    #0 0x7fa3c07cc724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7fa3c07ccbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x5591866e495d in list_item_to_string parts/gen_list_item_to_string.c:31\n    #3 0x5591866f09c2 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x5591866eeba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5591866ef0d9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5591866efb1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5591866f0c90 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7fa3c0560082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x5591866e484d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_item_to_string_longstr.bin+0x584d)\n\nAddress 0x7ffdf12de074 is located in stack of thread T0 at offset 180 in frame\n    #0 0x5591866f07c3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [48, 56) 'head' (line 27)\n    [80, 180) 'str' (line 23)\n    [224, 736) 'longstr' (line 24) <== Memory access at offset 180 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10003e253bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253bf0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 f2\n=>0x10003e253c00: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00[04]f2\n  0x10003e253c10: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003e253c50: 00 00 00 00 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3176046==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3176861==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f9a29b45808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5608508bde54 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x5608508c995c in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5608508c7bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5608508c80f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5608508c8b3a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5608508c9c7c in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f9a2986a082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f9a29ace3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5608508bde75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x5608508c995c in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5608508c7bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5608508c80f6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5608508c8b3a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5608508c9c7c in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f9a2986a082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3177756==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55c579a6f912 bp 0x7ffc6f2dc900 sp 0x7ffc6f2dc8d0 T0)\n==3177756==The signal is caused by a READ memory access.\n==3177756==Hint: address points to the zero page.\n    #0 0x55c579a6f911 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:26\n    #1 0x55c579a7b839 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55c579a79bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55c579a7a121 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55c579a7ab65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55c579a7ba00 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f66bc594082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55c579a6f82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:26 in list_update_item_at_pos\n==3177756==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3177978==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f70103eb6e5 bp 0x7ffea7591410 sp 0x7ffea7590b78 T0)\n==3177978==The signal is caused by a READ memory access.\n==3177978==Hint: address points to the zero page.\n    #0 0x7f70103eb6e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7f70104f0cf5 in __interceptor_strcpy ../../../../src/libsanitizer/asan/asan_interceptors.cc:428\n    #2 0x559fccb2a92e in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:27\n    #3 0x559fccb3693e in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x559fccb34bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x559fccb35121 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x559fccb35b65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x559fccb36cdb in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7f7010287082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x559fccb2a82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3177978==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3178311==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc0902e0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x561975afce7f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x561975b0890e in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x561975b06bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x561975b07121 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x561975b07b65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x561975b08d6b in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fc090005082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc0902693ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x561975afcea0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x561975b0890e in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x561975b06bec in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x561975b07121 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x561975b07b65 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x561975b08d6b in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7fc090005082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3178704==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5655245da8e6 bp 0x7ffc4c9ba340 sp 0x7ffc4c9ba310 T0)\n==3178704==The signal is caused by a READ memory access.\n==3178704==Hint: address points to the zero page.\n    #0 0x5655245da8e5 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:26\n    #1 0x5655245e67fa in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x5655245e4bcc in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5655245e5101 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5655245e5b45 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5655245e69c1 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f58dcf07082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5655245da80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:26 in list_remove_item_at_pos\n==3178704==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[  FAILED  ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_remove_item_at_pos_oob.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[  FAILED  ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item3\" != \"item2\"\n[   LINE   ] --- tests_ref/test_list_swap_item_positions.c:33: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3179069==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079fc808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5637990c5f9f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x5637990d1a60 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:26\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079fc808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5637990c5f9f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x5637990d1aa0 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:27\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079fc808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5637990c5f9f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x5637990d1a20 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:25\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079853ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5637990c5fc0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x5637990d1aa0 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:27\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079853ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5637990c5fc0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x5637990d1a60 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:26\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fec079853ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5637990c5fc0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x5637990d1a20 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:25\n    #3 0x5637990cfd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5637990d0241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5637990d0c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5637990d223b in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fec07721082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3180130==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5601b4cf58fd bp 0x7ffcbec3f3a0 sp 0x7ffcbec3f3a0 T0)\n==3180130==The signal is caused by a READ memory access.\n==3180130==Hint: address points to the zero page.\n    #0 0x5601b4cf58fc in list_swap_item_positions parts/gen_list_swap_item_positions.c:29\n    #1 0x5601b4d0193f in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x5601b4cffd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5601b4d00241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5601b4d00c85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5601b4d01b06 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f1a5403f082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x5601b4cf580d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_swap_item_positions_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:29 in list_swap_item_positions\n==3180130==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[  FAILED  ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_swap_item_positions_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3180538==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f26bb5ff808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55becf2e2f9f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x55becf2eea60 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x55becf2ecd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55becf2ed241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55becf2edc85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55becf2eeeb1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f26bb324082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f26bb5ff808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55becf2e2f9f in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x55becf2eea20 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x55becf2ecd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55becf2ed241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55becf2edc85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55becf2eeeb1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f26bb324082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f26bb5883ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55becf2e2fc0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x55becf2eea60 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x55becf2ecd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55becf2ed241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55becf2edc85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55becf2eeeb1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f26bb324082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f26bb5883ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55becf2e2fc0 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x55becf2eea20 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x55becf2ecd0c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55becf2ed241 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55becf2edc85 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55becf2eeeb1 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7f26bb324082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[  FAILED  ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x2 != 0x3\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3181064==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f65238808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560ed1797e27 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x560ed17a38bc in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:25\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f65238808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560ed1797e27 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x560ed17a38fc in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:26\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f65238808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560ed1797e27 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x560ed17a393c in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:27\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f651c13ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560ed1797e48 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x560ed17a393c in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:27\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f651c13ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560ed1797e48 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x560ed17a38fc in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:26\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f6f651c13ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560ed1797e48 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x560ed17a38bc in test_list_find_highest_price_item_position tests_ref/test_list_find_highest_price_item_position.c:25\n    #3 0x560ed17a1b94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560ed17a20c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560ed17a2b0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560ed17a3c67 in main tests_ref/test_list_find_highest_price_item_position.c:38\n    #7 0x7f6f64f5d082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 92 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3181861==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55585f1a18dd bp 0x7ffec55fce50 sp 0x7ffec55fce50 T0)\n==3181861==The signal is caused by a WRITE memory access.\n==3181861==Hint: address points to the zero page.\n    #0 0x55585f1a18dc in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:25\n    #1 0x55585f1ad8b6 in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55585f1abb94 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55585f1ac0c9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55585f1acb0d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55585f1adacd in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7f789950f082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55585f1a180d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:25 in list_find_highest_price_item_position\n==3181861==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3182601==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55897a67d8e1 bp 0x7ffe4b4dbe10 sp 0x7ffe4b4dbe10 T0)\n==3182601==The signal is caused by a WRITE memory access.\n==3182601==Hint: address points to the zero page.\n    #0 0x55897a67d8e0 in list_cost_sum parts/gen_list_cost_sum.c:25\n    #1 0x55897a689951 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x55897a687b6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55897a6880a1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55897a688ae5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55897a689b90 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7fa84711b082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55897a67d80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_cost_sum_nulltotal.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:25 in list_cost_sum\n==3182601==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3183044==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55aea032bb9f bp 0x7ffc787cd7d0 sp 0x7ffc787cd730 T0)\n==3183044==The signal is caused by a READ memory access.\n==3183044==Hint: address points to the zero page.\n    #0 0x55aea032bb9e in test_list_load tests_ref/test_list_load.c:36\n    #1 0x55aea0329c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55aea032a15c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55aea032aba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55aea032c4ed in main tests_ref/test_list_load.c:53\n    #5 0x7f3d5fc2a082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x55aea031f82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_load.bin+0x682d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3183044==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n[  FAILED  ] test_list_load_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3183474==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555a30e69a89 bp 0x7ffc89f7f930 sp 0x7ffc89f7f650 T0)\n==3183474==The signal is caused by a READ memory access.\n==3183474==Hint: address points to the zero page.\n    #0 0x555a30e69a88 in test_list_load_longitem tests_ref/test_list_load_longitem.c:30\n    #1 0x555a30e67c47 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x555a30e6817c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x555a30e68bc0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x555a30e69e3f in main tests_ref/test_list_load_longitem.c:40\n    #5 0x7f270529a082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x555a30e5d84d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_load_longitem.bin+0x584d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load_longitem.c:30 in test_list_load_longitem\n==3183474==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3183815==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fcb3463d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a14555deba in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:114\n    #2 0x55a14556998b in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55a145567c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a14556815c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a145568ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a145569dcd in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fcb34362082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fcb345c63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a14555dedb in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_05/reflist.c:118\n    #2 0x55a14556998b in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55a145567c27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a14556815c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a145568ba0 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a145569dcd in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fcb34362082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3184731==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55d4add528dd bp 0x7fffbda207a0 sp 0x7fffbda20770 T0)\n==3184731==The signal is caused by a READ memory access.\n==3184731==Hint: address points to the zero page.\n    #0 0x55d4add528dc in list_deduplicate parts/gen_list_deduplicate.c:27\n    #1 0x55d4add5e814 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55d4add5cbeb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55d4add5d120 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55d4add5db64 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55d4add5e9db in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f355a5e4082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55d4add5280d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_05/tests_ref/test_list_deduplicate_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:27 in list_deduplicate\n==3184731==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 19,
    "total": 45,
    "passed_functional": 15,
    "total_functional": 26
}
