{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[  FAILED  ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head->next->next->next->next\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos.c:33: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3840177==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f97efa94808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55e7449188f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55e7449248fa in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:25\n    #3 0x55e744922c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55e744923163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55e744923b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55e744924f29 in main tests_ref/test_list_add_item_at_pos.c:41\n    #7 0x7f97ef788fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f97efa94808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55e7449188f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55e74492497a in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:27\n    #3 0x55e744922c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55e744923163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55e744923b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55e744924f29 in main tests_ref/test_list_add_item_at_pos.c:41\n    #7 0x7f97ef788fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f97efa94808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55e7449188f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55e7449249ba in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:28\n    #3 0x55e744922c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55e744923163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55e744923b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55e744924f29 in main tests_ref/test_list_add_item_at_pos.c:41\n    #7 0x7f97ef788fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f97efa94808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55e7449188f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55e74492493a in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:26\n    #3 0x55e744922c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55e744923163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55e744923b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55e744924f29 in main tests_ref/test_list_add_item_at_pos.c:41\n    #7 0x7f97ef788fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 96 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3840256==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e4c869891d bp 0x7ffdc0b5d690 sp 0x7ffdc0b5d640 T0)\n==3840256==The signal is caused by a READ memory access.\n==3840256==Hint: address points to the zero page.\n    #0 0x55e4c869891c in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:43\n    #1 0x55e4c86a4828 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55e4c86a2c23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e4c86a3163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e4c86a3b91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e4c86a49d7 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f59668b4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f59668b507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e4c8698804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:43 in list_add_item_at_pos\n==3840256==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3840316==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2f8d4d2808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55efd53248f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55efd53308f6 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x55efd532ec23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55efd532f163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55efd532fb91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55efd5330af7 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f2f8d1c6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3840383==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fa78b946808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55b0190818f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:38\n    #2 0x55b01908d8fa in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x55b01908bc23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55b01908c163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55b01908cb91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55b01908dbc6 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fa78b63afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3840460==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x563c0d893901 bp 0x7ffedc357d10 sp 0x7ffedc357cf0 T0)\n==3840460==The signal is caused by a READ memory access.\n==3840460==Hint: address points to the zero page.\n    #0 0x563c0d893900 in list_item_to_string parts/gen_list_item_to_string.c:29\n    #1 0x563c0d89f83c in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x563c0d89dbc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563c0d89e101 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563c0d89eb2f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563c0d89fa6b in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7fc143204fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc14320507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563c0d893824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:29 in list_item_to_string\n==3840460==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3840533==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f1a70f19667 bp 0x000000000031 sp 0x7ffcf99cf110 T0)\n==3840533==The signal is caused by a WRITE memory access.\n==3840533==Hint: address points to the zero page.\n    #0 0x7f1a70f19666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f1a70f17de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f1a70f17de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f1a70effb23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f1a70effb23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f1a70f0bae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f1a70f0bae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f1a71150664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f1a71150bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x556a027aa92f in list_item_to_string parts/gen_list_item_to_string.c:29\n    #10 0x556a027b68e7 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x556a027b4bc1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x556a027b5101 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x556a027b5b2f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x556a027b6b0e in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f1a70eb3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f1a70eb407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x556a027aa824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3840533==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3840646==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeb9ac3644 at pc 0x7facd338c725 bp 0x7ffeb9ac3440 sp 0x7ffeb9ac2bd0\nWRITE of size 527 at 0x7ffeb9ac3644 thread T0\n    #0 0x7facd338c724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7facd338cbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55c36c5d194f in list_item_to_string parts/gen_list_item_to_string.c:29\n    #3 0x55c36c5dd9ae in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55c36c5dbbe1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55c36c5dc121 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55c36c5dcb4f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55c36c5ddc63 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7facd30effcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7facd30f007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55c36c5d1844 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffeb9ac3644 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55c36c5dd7c3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100057350670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057350680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057350690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000573506a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000573506b0: f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n=>0x1000573506c0: 00 00 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2\n  0x1000573506d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000573506e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000573506f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057350700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100057350710: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3840646==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n",
            "stderr": "=================================================================\n==3840736==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000074 at pc 0x7fc37ea09a8d bp 0x7ffc9da48b20 sp 0x7ffc9da482b0\nWRITE of size 22 at 0x602000000074 thread T0\n    #0 0x7fc37ea09a8c in __interceptor_vsnprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608\n    #1 0x7fc37ea09f2e in __interceptor_snprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1679\n    #2 0x5632068cca9c in ref_list_item_to_string /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:44\n    #3 0x5632068cc90a in list_print parts/gen_list_print.c:42\n    #4 0x5632068d898d in test_list_print tests_ref/test_list_print.c:29\n    #5 0x5632068d6bcd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x5632068d710d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x5632068d7b3b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x5632068d8bfa in main tests_ref/test_list_print.c:43\n    #9 0x7fc37e76bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fc37e76c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x5632068cc804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_print.bin+0x6804)\n\n0x602000000074 is located 0 bytes to the right of 4-byte region [0x602000000070,0x602000000074)\nallocated by thread T0 here:\n    #0 0x7fc37ea77808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5632068cc8ea in list_print parts/gen_list_print.c:39\n    #2 0x5632068d898d in test_list_print tests_ref/test_list_print.c:29\n    #3 0x5632068d6bcd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5632068d710d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5632068d7b3b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5632068d8bfa in main tests_ref/test_list_print.c:43\n    #7 0x7fc37e76bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608 in __interceptor_vsnprintf\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa 07 fa fa fa 07 fa fa fa 06 fa fa fa[04]fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3840736==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3840856==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 4 byte(s) in 1 object(s) allocated from:\n    #0 0x7f85ab70a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558c47f258ea in list_print parts/gen_list_print.c:39\n    #2 0x558c47f317b9 in test_list_print_nullhead tests_ref/test_list_print_nullhead.c:23\n    #3 0x558c47f2fbcd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558c47f3010d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558c47f30b3b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558c47f31968 in main tests_ref/test_list_print_nullhead.c:30\n    #7 0x7f85ab3fefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 4 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n",
            "stderr": "=================================================================\n==3840926==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000014 at pc 0x7f69a2de9a8d bp 0x7fffcab3bfb0 sp 0x7fffcab3b740\nWRITE of size 100 at 0x602000000014 thread T0\n    #0 0x7f69a2de9a8c in __interceptor_vsnprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608\n    #1 0x7f69a2de9f2e in __interceptor_snprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1679\n    #2 0x556d76601abc in ref_list_item_to_string /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:44\n    #3 0x556d7660192a in list_print parts/gen_list_print.c:42\n    #4 0x556d7660d9b8 in test_list_print_longitem tests_ref/test_list_print_longitem.c:30\n    #5 0x556d7660bbed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x556d7660c12d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x556d7660cb5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x556d7660dc5c in main tests_ref/test_list_print_longitem.c:39\n    #9 0x7f69a2b4bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f69a2b4c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x556d76601824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_print_longitem.bin+0x5824)\n\n0x602000000014 is located 0 bytes to the right of 4-byte region [0x602000000010,0x602000000014)\nallocated by thread T0 here:\n    #0 0x7f69a2e57808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x556d7660190a in list_print parts/gen_list_print.c:39\n    #2 0x556d7660d9b8 in test_list_print_longitem tests_ref/test_list_print_longitem.c:30\n    #3 0x556d7660bbed in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x556d7660c12d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556d7660cb5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556d7660dc5c in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f69a2b4bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1608 in __interceptor_vsnprintf\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[04]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3840926==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841024==ERROR: AddressSanitizer: SEGV on unknown address 0x55c8b4732750 (pc 0x7ff023887a16 bp 0x55c8b4732750 sp 0x7ffe18c70c80 T0)\n==3841024==The signal is caused by a WRITE memory access.\n    #0 0x7ff023887a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7ff023887a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7ff023887a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7ff023887a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7ff02396c3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55c8b472e3a1 in list_free test_common.h:35\n    #6 0x55c8b472ea69 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x55c8b472cbc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55c8b472d102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55c8b472db30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55c8b472ec6a in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7ff023660fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7ff02366107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55c8b4722804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3841024==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841108==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563ec1f5e8e8 bp 0x7ffd4b6b5010 sp 0x7ffd4b6b5010 T0)\n==3841108==The signal is caused by a READ memory access.\n==3841108==Hint: address points to the zero page.\n    #0 0x563ec1f5e8e7 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:26\n    #1 0x563ec1f6a7d2 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x563ec1f68bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563ec1f69102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563ec1f69b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563ec1f6a981 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f986c9d3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f986c9d407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563ec1f5e804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:26 in list_update_item_at_pos\n==3841108==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3841166==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f406522b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55f3dff3fdfc in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55f3dff4b899 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x55f3dff49bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f3dff4a102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f3dff4ab30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f3dff4bc5a in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f4064f1ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f40651b43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55f3dff3fe1d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55f3dff4b899 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x55f3dff49bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f3dff4a102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f3dff4ab30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f3dff4bc5a in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f4064f1ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3841269==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffa0d289808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55f04005edfc in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55f04006a8a7 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x55f040068bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f040069102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f040069b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f04006acea in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7ffa0cf7dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7ffa0d2123ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55f04005ee1d in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55f04006a8a7 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x55f040068bc2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f040069102 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f040069b30 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f04006acea in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7ffa0cf7dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841368==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5587a13b4aa1 bp 0x7fffa9669f50 sp 0x7fffa9669ec0 T0)\n==3841368==The signal is caused by a READ memory access.\n==3841368==Hint: address points to the zero page.\n    #0 0x5587a13b4aa0 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:33\n    #1 0x5587a13b2bfd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x5587a13b313d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x5587a13b3b6b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x5587a13b4d86 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #5 0x7f2415182fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7f241518307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x5587a13a8804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_remove_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_remove_item_at_pos.c:33 in test_list_remove_item_at_pos\n==3841368==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841428==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563c0889c8e0 bp 0x7ffc6e2d82a0 sp 0x7ffc6e2d8260 T0)\n==3841428==The signal is caused by a READ memory access.\n==3841428==Hint: address points to the zero page.\n    #0 0x563c0889c8df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:27\n    #1 0x563c088a87ee in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x563c088a6bfd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563c088a713d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563c088a7b6b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563c088a899d in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7ff4724e2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7ff4724e307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563c0889c804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:27 in list_remove_item_at_pos\n==3841428==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841495==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55c1d915b95c bp 0x7ffefd191980 sp 0x7ffefd191940 T0)\n==3841495==The signal is caused by a READ memory access.\n==3841495==Hint: address points to the zero page.\n    #0 0x55c1d915b95b in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:42\n    #1 0x55c1d9167900 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55c1d9165bfd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55c1d916613d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55c1d9166b6b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55c1d9167d1b in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7fd9983f4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fd9983f507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55c1d915b804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:42 in list_remove_item_at_pos\n==3841495==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "=================================================================\n==3841546==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000010 at pc 0x7fb7a4f713ad bp 0x7ffd43b36eb0 sp 0x7ffd43b36658\nREAD of size 2 at 0x602000000010 thread T0\n    #0 0x7fb7a4f713ac in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:443\n    #1 0x55a8835281cc in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:164\n    #2 0x55a8835279b2 in list_swap_item_positions parts/gen_list_swap_item_positions.c:49\n    #3 0x55a8835339cc in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #4 0x55a883531c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55a883532184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55a883532bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55a88353411e in main tests_ref/test_list_swap_item_positions.c:47\n    #8 0x7fb7a4cdcfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fb7a4cdd07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55a883527804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_swap_item_positions.bin+0x6804)\n\n0x602000000010 is located 0 bytes inside of 6-byte region [0x602000000010,0x602000000016)\nfreed by thread T0 here:\n    #0 0x7fb7a4fe840f in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:122\n    #1 0x55a8835281c0 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:162\n    #2 0x55a883527987 in list_swap_item_positions parts/gen_list_swap_item_positions.c:46\n    #3 0x55a8835339cc in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:28\n    #4 0x55a883531c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55a883532184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55a883532bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55a88353411e in main tests_ref/test_list_swap_item_positions.c:47\n    #8 0x7fb7a4cdcfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\npreviously allocated by thread T0 here:\n    #0 0x7fb7a4f713ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a883527e9f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55a88353391b in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:25\n    #3 0x55a883531c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a883532184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a883532bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a88353411e in main tests_ref/test_list_swap_item_positions.c:47\n    #7 0x7fb7a4cdcfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/asan/asan_interceptors.cc:443 in __interceptor_strdup\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[fd]fa fa fa fd fa fa fa 06 fa fa fa 06 fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3841546==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n",
            "stderr": "=================================================================\n==3841666==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000010 at pc 0x7f8cec2bd3ad bp 0x7ffd5cc0f590 sp 0x7ffd5cc0ed38\nREAD of size 2 at 0x602000000010 thread T0\n    #0 0x7f8cec2bd3ac in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:443\n    #1 0x55bd1d8771cc in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:164\n    #2 0x55bd1d876987 in list_swap_item_positions parts/gen_list_swap_item_positions.c:46\n    #3 0x55bd1d88298c in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #4 0x55bd1d880c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bd1d881184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bd1d881bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bd1d882c9f in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #8 0x7f8cec028fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f8cec02907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55bd1d876804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_swap_item_positions_samepos.bin+0x5804)\n\n0x602000000010 is located 0 bytes inside of 6-byte region [0x602000000010,0x602000000016)\nfreed by thread T0 here:\n    #0 0x7f8cec33440f in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:122\n    #1 0x55bd1d8771c0 in ref_list_update_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:162\n    #2 0x55bd1d876987 in list_swap_item_positions parts/gen_list_swap_item_positions.c:46\n    #3 0x55bd1d88298c in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #4 0x55bd1d880c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bd1d881184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bd1d881bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bd1d882c9f in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #8 0x7f8cec028fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\npreviously allocated by thread T0 here:\n    #0 0x7f8cec2bd3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55bd1d876e9f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55bd1d88291b in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:25\n    #3 0x55bd1d880c44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bd1d881184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bd1d881bb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bd1d882c9f in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #7 0x7f8cec028fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/asan/asan_interceptors.cc:443 in __interceptor_strdup\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa[fd]fa fa fa 06 fa fa fa fa fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3841666==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841776==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x563ca5e538e3 bp 0x7ffe02fc8bc0 sp 0x7ffe02fc8b80 T0)\n==3841776==The signal is caused by a READ memory access.\n==3841776==Hint: address points to the zero page.\n    #0 0x563ca5e538e2 in list_swap_item_positions parts/gen_list_swap_item_positions.c:26\n    #1 0x563ca5e5f83a in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x563ca5e5dc44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563ca5e5e184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563ca5e5ebb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563ca5e5f9e9 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f986e64efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f986e64f07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563ca5e53804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:26 in list_swap_item_positions\n==3841776==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841835==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x559dab44490f bp 0x7ffde7745bd0 sp 0x7ffde7745b90 T0)\n==3841835==The signal is caused by a READ memory access.\n==3841835==Hint: address points to the zero page.\n    #0 0x559dab44490e in list_swap_item_positions parts/gen_list_swap_item_positions.c:33\n    #1 0x559dab4509ee in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:29\n    #2 0x559dab44ec44 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x559dab44f184 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559dab44fbb2 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x559dab450d94 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7f0339058fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f033905907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x559dab444804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_swap_item_positions_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:33 in list_swap_item_positions\n==3841835==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841908==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55e5fd4e18e5 bp 0x7ffd783b20f0 sp 0x7ffd783b20f0 T0)\n==3841908==The signal is caused by a READ memory access.\n==3841908==Hint: address points to the zero page.\n    #0 0x55e5fd4e18e4 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:28\n    #1 0x55e5fd4ed857 in test_list_find_highest_price_item_position_nullhead tests_ref/test_list_find_highest_price_item_position_nullhead.c:24\n    #2 0x55e5fd4ebbb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e5fd4ec0f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e5fd4ecb20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e5fd4eda56 in main tests_ref/test_list_find_highest_price_item_position_nullhead.c:31\n    #6 0x7fe0e5918fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe0e591907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e5fd4e1804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_find_highest_price_item_position_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:28 in list_find_highest_price_item_position\n==3841908==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3841978==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55939e1498e5 bp 0x7ffc6dcaba40 sp 0x7ffc6dcaba40 T0)\n==3841978==The signal is caused by a READ memory access.\n==3841978==Hint: address points to the zero page.\n    #0 0x55939e1498e4 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:28\n    #1 0x55939e155897 in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x55939e153bb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55939e1540f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55939e154b20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55939e155a96 in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7fb842b62fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fb842b6307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55939e149804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:28 in list_find_highest_price_item_position\n==3841978==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3842051==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x565488fa58e7 bp 0x7ffcb3d05e00 sp 0x7ffcb3d05e00 T0)\n==3842051==The signal is caused by a READ memory access.\n==3842051==Hint: address points to the zero page.\n    #0 0x565488fa58e6 in list_cost_sum parts/gen_list_cost_sum.c:29\n    #1 0x565488fb194b in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x565488fafba3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x565488fb00e3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x565488fb0b11 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x565488fb1b72 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f61d8c6efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f61d8c6f07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x565488fa5804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:29 in list_cost_sum\n==3842051==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[  FAILED  ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"apple,0.80,2\" != \"item1\"\n[   LINE   ] --- tests_ref/test_list_load.c:33: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3842149==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f746f895808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bb177d6ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55bb177d69a9 in list_load parts/gen_list_load.c:48\n    #3 0x55bb177e29f3 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x55bb177e0c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bb177e11db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bb177e1c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bb177e3504 in main tests_ref/test_list_load.c:53\n    #8 0x7f746f589fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 48 byte(s) in 2 object(s) allocated from:\n    #0 0x7f746f895808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bb177d6ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55bb177d69a9 in list_load parts/gen_list_load.c:48\n    #3 0x55bb177e29f3 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x55bb177e0c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bb177e11db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bb177e1c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bb177e3504 in main tests_ref/test_list_load.c:53\n    #8 0x7f746f589fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 42 byte(s) in 3 object(s) allocated from:\n    #0 0x7f746f81e3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55bb177d6ef6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55bb177d69a9 in list_load parts/gen_list_load.c:48\n    #3 0x55bb177e29f3 in test_list_load tests_ref/test_list_load.c:27\n    #4 0x55bb177e0c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bb177e11db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bb177e1c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bb177e3504 in main tests_ref/test_list_load.c:53\n    #8 0x7f746f589fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f746f895808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bb177d6ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55bb177e29c2 in test_list_load tests_ref/test_list_load.c:26\n    #3 0x55bb177e0c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bb177e11db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bb177e1c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bb177e3504 in main tests_ref/test_list_load.c:53\n    #7 0x7f746f589fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f746f81e3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55bb177d6ef6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55bb177e29c2 in test_list_load tests_ref/test_list_load.c:26\n    #3 0x55bb177e0c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bb177e11db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bb177e1c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bb177e3504 in main tests_ref/test_list_load.c:53\n    #7 0x7f746f589fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 144 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3842253==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5630254c5918 bp 0x7ffcda2cf2f0 sp 0x7ffcda2cf2b0 T0)\n==3842253==The signal is caused by a READ memory access.\n==3842253==Hint: address points to the zero page.\n    #0 0x5630254c5917 in list_load parts/gen_list_load.c:32\n    #1 0x5630254d1899 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x5630254cfc9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5630254d01db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5630254d0c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5630254d1a48 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fc19efdbfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc19efdc07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5630254c5824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_load_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:32 in list_load\n==3842253==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3842314==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7fe334f99882 bp 0x7ffe83032510 sp 0x7ffe83031e10 T0)\n==3842314==The signal is caused by a READ memory access.\n==3842314==Hint: address points to the zero page.\n    #0 0x7fe334f99881 in __vfscanf_internal stdio-common/vfscanf-internal.c:339\n    #1 0x7fe3351cea34 in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7fe3351ceb5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x5581ebab89e4 in list_load parts/gen_list_load.c:47\n    #4 0x5581ebac4930 in test_list_load_nullfilename tests_ref/test_list_load_nullfilename.c:24\n    #5 0x5581ebac2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x5581ebac31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x5581ebac3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x5581ebac4b2f in main tests_ref/test_list_load_nullfilename.c:31\n    #9 0x7fe334f60fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fe334f6107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x5581ebab8824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_load_nullfilename.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfscanf-internal.c:339 in __vfscanf_internal\n==3842314==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "=================================================================\n==3842413==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60b000000154 at pc 0x7ff61c8ed4fd bp 0x7ffdda1f1140 sp 0x7ffdda1f08c8\nWRITE of size 518 at 0x60b000000154 thread T0\n    #0 0x7ff61c8ed4fc in scanf_common ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341\n    #1 0x7ff61c8eea4f in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7ff61c8eeb5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x55bea7314a04 in list_load parts/gen_list_load.c:47\n    #4 0x55bea7320a59 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #5 0x55bea731ecbb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55bea731f1fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55bea731fc29 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55bea7320e68 in main tests_ref/test_list_load_longitem.c:40\n    #9 0x7ff61c680fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7ff61c68107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55bea7314844 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_load_longitem.bin+0x5844)\n\n0x60b000000154 is located 0 bytes to the right of 100-byte region [0x60b0000000f0,0x60b000000154)\nallocated by thread T0 here:\n    #0 0x7ff61c98c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55bea731494f in list_load parts/gen_list_load.c:35\n    #2 0x55bea7320a59 in test_list_load_longitem tests_ref/test_list_load_longitem.c:29\n    #3 0x55bea731ecbb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55bea731f1fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55bea731fc29 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55bea7320e68 in main tests_ref/test_list_load_longitem.c:40\n    #7 0x7ff61c680fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors_format.inc:341 in scanf_common\nShadow bytes around the buggy address:\n  0x0c167fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c167fff8000: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c167fff8010: fd fd fd fd fd fa fa fa fa fa fa fa fa fa 00 00\n=>0x0c167fff8020: 00 00 00 00 00 00 00 00 00 00[04]fa fa fa fa fa\n  0x0c167fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c167fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3842413==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3842516==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f395e5ea808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55ef82598ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55ef825989a9 in list_load parts/gen_list_load.c:48\n    #3 0x55ef825a49f3 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x55ef825a2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55ef825a31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55ef825a3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55ef825a4dea in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f395e2defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 26 byte(s) in 2 object(s) allocated from:\n    #0 0x7f395e5733ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55ef82598ef6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55ef825989a9 in list_load parts/gen_list_load.c:48\n    #3 0x55ef825a49f3 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x55ef825a2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55ef825a31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55ef825a3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55ef825a4dea in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f395e2defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f395e5ea808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55ef82598ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55ef825a49c2 in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55ef825a2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55ef825a31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55ef825a3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55ef825a4dea in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f395e2defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f395e5ea808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55ef82598ed5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55ef825989a9 in list_load parts/gen_list_load.c:48\n    #3 0x55ef825a49f3 in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #4 0x55ef825a2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55ef825a31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55ef825a3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55ef825a4dea in main tests_ref/test_list_load_badparse.c:39\n    #8 0x7f395e2defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f395e5733ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55ef82598ef6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55ef825a49c2 in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55ef825a2c9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55ef825a31db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55ef825a3c09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55ef825a4dea in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7f395e2defcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 104 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3842645==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7fceab36d882 bp 0x7ffe79e97050 sp 0x7ffe79e96950 T0)\n==3842645==The signal is caused by a READ memory access.\n==3842645==Hint: address points to the zero page.\n    #0 0x7fceab36d881 in __vfscanf_internal stdio-common/vfscanf-internal.c:339\n    #1 0x7fceab5a2a34 in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7fceab5a2b5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x55f35d4caa04 in list_load parts/gen_list_load.c:47\n    #4 0x55f35d4d6a4e in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #5 0x55f35d4d4cbb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x55f35d4d51fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x55f35d4d5c29 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x55f35d4d6c55 in main tests_ref/test_list_load_badfile.c:37\n    #9 0x7fceab334fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7fceab33507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x55f35d4ca844 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_load_badfile.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfscanf-internal.c:339 in __vfscanf_internal\n==3842645==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3842735==ERROR: AddressSanitizer: SEGV on unknown address 0x0000000000c0 (pc 0x7f15e8382882 bp 0x7fff61138e20 sp 0x7fff61138720 T0)\n==3842735==The signal is caused by a READ memory access.\n==3842735==Hint: address points to the zero page.\n    #0 0x7f15e8382881 in __vfscanf_internal stdio-common/vfscanf-internal.c:339\n    #1 0x7f15e85b7a34 in __interceptor___isoc99_vfscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1477\n    #2 0x7f15e85b7b5e in __interceptor___isoc99_fscanf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1494\n    #3 0x559768ae29e4 in list_load parts/gen_list_load.c:47\n    #4 0x559768aee9b5 in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #5 0x559768aecc9b in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #6 0x559768aed1db in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #7 0x559768aedc09 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #8 0x559768aeebb6 in main tests_ref/test_list_load_missingfile.c:36\n    #9 0x7f15e8349fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #10 0x7f15e834a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #11 0x559768ae2824 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_load_missingfile.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV stdio-common/vfscanf-internal.c:339 in __vfscanf_internal\n==3842735==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": "timeout",
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n",
            "stderr": "",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3849441==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f6ba8e98d9 bp 0x7fff04608d00 sp 0x7fff04608d00 T0)\n==3849441==The signal is caused by a READ memory access.\n==3849441==Hint: address points to the zero page.\n    #0 0x55f6ba8e98d8 in list_deduplicate parts/gen_list_deduplicate.c:29\n    #1 0x55f6ba8f57b4 in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55f6ba8f3bc8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f6ba8f4108 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f6ba8f4b36 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f6ba8f5963 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7fc7d9cbffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fc7d9cc007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55f6ba8e9804 in _start (/home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:29 in list_deduplicate\n==3849441==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[  FAILED  ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_deduplicate_single.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate_single\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3849487==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5e7e411808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55fc5f501e02 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:114\n    #2 0x55fc5f50d89f in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:25\n    #3 0x55fc5f50bbc8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55fc5f50c108 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55fc5f50cb36 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55fc5f50dcb7 in main tests_ref/test_list_deduplicate_single.c:38\n    #7 0x7f5e7e105fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f5e7e39a3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55fc5f501e23 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/94cc70d0-7086-4a40-894a-433c90f7d9c4/reflist.c:118\n    #2 0x55fc5f50d89f in test_list_deduplicate_single tests_ref/test_list_deduplicate_single.c:25\n    #3 0x55fc5f50bbc8 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55fc5f50c108 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55fc5f50cb36 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55fc5f50dcb7 in main tests_ref/test_list_deduplicate_single.c:38\n    #7 0x7f5e7e105fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": "timeout",
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n",
            "stderr": "",
            "passed": false,
            "skipped": false
        }
    },
    "passed": 7,
    "total": 45,
    "passed_functional": 5,
    "total_functional": 26
}
