{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815376==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5606e43838d9 bp 0x7ffe33c0d380 sp 0x7ffe33c0d380 T0)\n==3815376==The signal is caused by a WRITE memory access.\n==3815376==Hint: address points to the zero page.\n    #0 0x5606e43838d8 in list_init parts/gen_list_init.c:27\n    #1 0x5606e438f74d in test_list_init_nullhead tests_ref/test_list_init_nullhead.c:23\n    #2 0x5606e438db61 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5606e438e0a1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5606e438eacf in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5606e438f8fc in main tests_ref/test_list_init_nullhead.c:30\n    #6 0x7f12a7f6cfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f12a7f6d07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5606e4383804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_init_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_init.c:27 in list_init\n==3815376==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815612==ERROR: AddressSanitizer: SEGV on unknown address 0x55e627e68710 (pc 0x7fec15d1da16 bp 0x55e627e68710 sp 0x7fff9e759000 T0)\n==3815612==The signal is caused by a WRITE memory access.\n    #0 0x7fec15d1da15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fec15d1da15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fec15d1da15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fec15d1da15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fec15e023d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55e627e63491 in list_free test_common.h:35\n    #6 0x55e627e63db7 in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x55e627e61cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55e627e621f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55e627e62c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55e627e63fb8 in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7fec15af6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fec15af707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55e627e57804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3815612==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815851==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b98cf65933 bp 0x7ffe54ba1a90 sp 0x7ffe54ba1a60 T0)\n==3815851==The signal is caused by a READ memory access.\n==3815851==Hint: address points to the zero page.\n    #0 0x55b98cf65932 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:68\n    #1 0x55b98cf718b7 in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55b98cf6fcb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b98cf701f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b98cf70c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b98cf71a66 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f26a59d6fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f26a59d707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55b98cf65804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:68 in list_add_item_at_pos\n==3815851==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816134==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f55bd1ca808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555ebb5ef944 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:69\n    #2 0x555ebb5fb985 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x555ebb5f9cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555ebb5fa1f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555ebb5fac20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555ebb5fbb86 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f55bcebefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816433==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fcfd5e75808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x558e0b497944 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:69\n    #2 0x558e0b4a3989 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x558e0b4a1cb2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x558e0b4a21f2 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x558e0b4a2c20 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x558e0b4a3c55 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7fcfd5b69fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816768==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f92480dc667 bp 0x000000000031 sp 0x7ffc692f82f0 T0)\n==3816768==The signal is caused by a WRITE memory access.\n==3816768==Hint: address points to the zero page.\n    #0 0x7f92480dc666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7f92480dade3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7f92480dade3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7f92480c2b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7f92480c2b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7f92480ceae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7f92480ceae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7f9248313664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7f9248313bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x562b2ad7f93d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #10 0x562b2ad8b8e5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x562b2ad89bbf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x562b2ad8a0ff in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x562b2ad8ab2d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x562b2ad8bb0c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7f9248076fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7f924807707c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x562b2ad7f824 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3816768==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3817256==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffcd7f11e64 at pc 0x7f4ca8445725 bp 0x7ffcd7f11c70 sp 0x7ffcd7f11400\nWRITE of size 527 at 0x7ffcd7f11e64 thread T0\n    #0 0x7f4ca8445724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f4ca8445bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55c50c94a95d in list_item_to_string parts/gen_list_item_to_string.c:33\n    #3 0x55c50c9569ac in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55c50c954bdf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55c50c95511f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55c50c955b4d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55c50c956c61 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f4ca81a8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f4ca81a907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55c50c94a844 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffcd7f11e64 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55c50c9567c1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x10001afda370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda3a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda3b0: 00 00 00 00 f1 f1 f1 f1 00 f2 f2 f2 f2 f2 f2 f2\n=>0x10001afda3c0: 00 00 00 00 00 00 00 00 00 00 00 00[04]f2 f2 f2\n  0x10001afda3d0: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda3e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda3f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10001afda410: 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3817256==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_print_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_print_longitem": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817651==ERROR: AddressSanitizer: SEGV on unknown address 0x555fe5377750 (pc 0x7fd9994b0a16 bp 0x555fe5377750 sp 0x7fff66601120 T0)\n==3817651==The signal is caused by a WRITE memory access.\n    #0 0x7fd9994b0a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fd9994b0a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fd9994b0a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fd9994b0a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fd9995953d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x555fe53733e0 in list_free test_common.h:35\n    #6 0x555fe5373aa8 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x555fe5371c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x555fe5372141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x555fe5372b6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x555fe5373ca9 in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7fd999289fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fd99928a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x555fe5367804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3817651==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817921==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f77d4ff933 bp 0x7fff39356f00 sp 0x7fff39356ed0 T0)\n==3817921==The signal is caused by a READ memory access.\n==3817921==Hint: address points to the zero page.\n    #0 0x55f77d4ff932 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:35\n    #1 0x55f77d50b811 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55f77d509c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f77d50a141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f77d50ab6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f77d50b9c0 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f2a36b3ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f2a36b4007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55f77d4ff804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:35 in list_update_item_at_pos\n==3817921==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818154==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f4fe69f6808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x555fa7957e3b in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x555fa79638d8 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x555fa7961c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555fa7962141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555fa7962b6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555fa7963c99 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f4fe66eafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f4fe697f3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x555fa7957e5c in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x555fa79638d8 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x555fa7961c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x555fa7962141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x555fa7962b6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x555fa7963c99 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f4fe66eafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[  FAILED  ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818507==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f89e52d4808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x563b84a1de3b in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x563b84a298e6 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x563b84a27c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563b84a28141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563b84a28b6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563b84a29d29 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f89e4fc8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f89e525d3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x563b84a1de5c in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x563b84a298e6 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:26\n    #3 0x563b84a27c01 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x563b84a28141 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x563b84a28b6f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x563b84a29d29 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #7 0x7f89e4fc8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[  FAILED  ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- ./test_common.h:55: error: No mock calls expected but called() was invoked in test_printf\n\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_remove_item_at_pos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3818844==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccd1c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560bcfecce72 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560bcfed890f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccd1c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560bcfecce72 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560bcfed894f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccd1c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560bcfecce72 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560bcfed898f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccca53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560bcfecce93 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560bcfed898f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccca53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560bcfecce93 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560bcfed894f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f2cccca53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560bcfecce93 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560bcfed890f in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x560bcfed6c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560bcfed7178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560bcfed7ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560bcfed8dc1 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f2ccca10fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819212==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55df86046927 bp 0x7ffff7cec090 sp 0x7ffff7cec070 T0)\n==3819212==The signal is caused by a READ memory access.\n==3819212==Hint: address points to the zero page.\n    #0 0x55df86046926 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:36\n    #1 0x55df86052829 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55df86050c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55df86051178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55df86051ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55df860529d8 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fe3790c4fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe3790c507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55df86046804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:36 in list_remove_item_at_pos\n==3819212==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819410==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55fe1d9ee984 bp 0x7ffefe9e1a80 sp 0x7ffefe9e1a60 T0)\n==3819410==The signal is caused by a READ memory access.\n==3819410==Hint: address points to the zero page.\n    #0 0x55fe1d9ee983 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:45\n    #1 0x55fe1d9fa93b in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55fe1d9f8c38 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55fe1d9f9178 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55fe1d9f9ba6 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55fe1d9fad56 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7f82debe9fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f82debea07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55fe1d9ee804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:45 in list_remove_item_at_pos\n==3819410==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819652==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x558ce54c092a bp 0x7ffff46488d0 sp 0x7ffff46488a0 T0)\n==3819652==The signal is caused by a READ memory access.\n==3819652==Hint: address points to the zero page.\n    #0 0x558ce54c0929 in list_swap_item_positions parts/gen_list_swap_item_positions.c:35\n    #1 0x558ce54cc91d in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x558ce54cad27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x558ce54cb267 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x558ce54cbc95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x558ce54ccacc in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fe72ec20fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe72ec2107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x558ce54c0804 in _start (/home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:35 in list_swap_item_positions\n==3819652==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[  FAILED  ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_swap_item_positions_oob.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_swap_item_positions_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3819868==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac41e1a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a6ae7ebf61 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x55a6ae7f79fe in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x55a6ae7f5d27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6ae7f6267 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6ae7f6c95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6ae7f7e77 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fac41b0efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac41e1a808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55a6ae7ebf61 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x55a6ae7f7a3e in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x55a6ae7f5d27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6ae7f6267 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6ae7f6c95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6ae7f7e77 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fac41b0efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac41da33ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a6ae7ebf82 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x55a6ae7f7a3e in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:26\n    #3 0x55a6ae7f5d27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6ae7f6267 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6ae7f6c95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6ae7f7e77 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fac41b0efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fac41da33ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55a6ae7ebf82 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x55a6ae7f79fe in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:25\n    #3 0x55a6ae7f5d27 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55a6ae7f6267 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55a6ae7f6c95 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55a6ae7f7e77 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #7 0x7fac41b0efcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[       OK ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[       OK ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_save.c:32: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3820238==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf786c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560b96f8bea6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560b96f97a31 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf77f53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560b96f8bec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560b96f97afa in test_list_save tests_ref/test_list_save.c:31\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf786c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560b96f8bea6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560b96f97afa in test_list_save tests_ref/test_list_save.c:31\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf786c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560b96f8bea6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560b96f97a74 in test_list_save tests_ref/test_list_save.c:29\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf786c808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x560b96f8bea6 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:114\n    #2 0x560b96f97ab7 in test_list_save tests_ref/test_list_save.c:30\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf77f53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560b96f8bec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560b96f97ab7 in test_list_save tests_ref/test_list_save.c:30\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf77f53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560b96f8bec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560b96f97a74 in test_list_save tests_ref/test_list_save.c:29\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fdcf77f53ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x560b96f8bec7 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/212591de-3007-4e4d-a0df-67d22d6c5f91/reflist.c:118\n    #2 0x560b96f97a31 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x560b96f95c6c in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x560b96f961ac in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x560b96f96bda in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x560b96f9803f in main tests_ref/test_list_save.c:64\n    #7 0x7fdcf7560fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 628 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_nullfilename": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_longitem": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badparse": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_badfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load_missingfile": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_single": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_deduplicate_nodups": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        }
    },
    "passed": 11,
    "total": 45,
    "passed_functional": 6,
    "total_functional": 26
}
