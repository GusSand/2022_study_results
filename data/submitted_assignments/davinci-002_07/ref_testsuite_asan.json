{
    "results": {
        "test_list_init": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init\n[       OK ] test_list_init\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_init_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_init_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3175758==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b6a59468d9 bp 0x7fff507f5400 sp 0x7fff507f5400 T0)\n==3175758==The signal is caused by a WRITE memory access.\n==3175758==Hint: address points to the zero page.\n    #0 0x55b6a59468d8 in list_init parts/gen_list_init.c:25\n    #1 0x55b6a595274f in test_list_init_nullhead tests_ref/test_list_init_nullhead.c:23\n    #2 0x55b6a5950b26 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b6a595105b in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b6a5951a9f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b6a5952916 in main tests_ref/test_list_init_nullhead.c:30\n    #6 0x7f5017f1d082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55b6a594680d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_init_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_init.c:25 in list_init\n==3175758==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3176491==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55dd7fab991a bp 0x7ffdf72bd3b0 sp 0x7ffdf72bd370 T0)\n==3176491==The signal is caused by a READ memory access.\n==3176491==Hint: address points to the zero page.\n    #0 0x55dd7fab9919 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:36\n    #1 0x55dd7fac587c in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55dd7fac3c3a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55dd7fac416f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55dd7fac4bb3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55dd7fac5a43 in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f2a51469082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55dd7fab982d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:36 in list_add_item_at_pos\n==3176491==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3176856==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7feafe1196e5 bp 0x7ffd87e86480 sp 0x7ffd87e85bf8 T0)\n==3176856==The signal is caused by a READ memory access.\n==3176856==Hint: address points to the zero page.\n    #0 0x7feafe1196e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7feafe1ea90b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x561e6260e944 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #3 0x561e6261a94a in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x561e62618c3a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x561e6261916f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x561e62619bb3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x561e6261ab63 in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7feafdfb5082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x561e6260e82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3176856==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3177719==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55dedc1869dc bp 0x7fffd42252e0 sp 0x7fffd42252a0 T0)\n==3177719==The signal is caused by a READ memory access.\n==3177719==Hint: address points to the zero page.\n    #0 0x55dedc1869db in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:53\n    #1 0x55dedc1929d0 in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:27\n    #2 0x55dedc190c3a in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55dedc19116f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55dedc191bb3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55dedc192c32 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #6 0x7f5606c27082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55dedc18682d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_add_item_at_pos_oob.bin+0x682d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:53 in list_add_item_at_pos\n==3177719==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[  FAILED  ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"1 * item1 @ $1.00 ea\n\" != \"1 * item1 @ $1.00 ea\"\n[   LINE   ] --- tests_ref/test_list_item_to_string.c:29: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_item_to_string\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3177960==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0363c6b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5599c4aeae37 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x5599c4af68f3 in test_list_item_to_string tests_ref/test_list_item_to_string.c:25\n    #3 0x5599c4af4ba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5599c4af50d9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5599c4af5b1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5599c4af6bf7 in main tests_ref/test_list_item_to_string.c:37\n    #7 0x7f0363990082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0363bf43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5599c4aeae58 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x5599c4af68f3 in test_list_item_to_string tests_ref/test_list_item_to_string.c:25\n    #3 0x5599c4af4ba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5599c4af50d9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5599c4af5b1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5599c4af6bf7 in main tests_ref/test_list_item_to_string.c:37\n    #7 0x7f0363990082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3178302==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f5810777ae7 bp 0x000000000031 sp 0x7ffffc7449c0 T0)\n==3178302==The signal is caused by a WRITE memory access.\n==3178302==Hint: address points to the zero page.\n    #0 0x7f5810777ae6 in __GI__IO_str_overflow /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133\n    #1 0x7f5810776023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:399\n    #2 0x7f5810776023 in __GI__IO_default_xsputn /build/glibc-SzIz7B/glibc-2.31/libio/genops.c:370\n    #3 0x7f581075b7ac in __vfprintf_internal /build/glibc-SzIz7B/glibc-2.31/stdio-common/vfprintf-internal.c:1687\n    #4 0x7f58107691b7 in __vsprintf_internal /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:95\n    #5 0x7f58107691b7 in __vsprintf /build/glibc-SzIz7B/glibc-2.31/libio/iovsprintf.c:104\n    #6 0x7f5810974664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #7 0x7f5810974bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #8 0x557b7f99494d in list_item_to_string parts/gen_list_item_to_string.c:34\n    #9 0x557b7f9a0907 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #10 0x557b7f99eba4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #11 0x557b7f99f0d9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #12 0x557b7f99fb1d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #13 0x557b7f9a0b46 in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #14 0x7f5810708082 in __libc_start_main ../csu/libc-start.c:308\n    #15 0x557b7f99482d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_item_to_string_nullstr.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /build/glibc-SzIz7B/glibc-2.31/libio/strops.c:133 in __GI__IO_str_overflow\n==3178302==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3178688==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc9288c724 at pc 0x7fcc4739a725 bp 0x7ffc9288c520 sp 0x7ffc9288bcb0\nWRITE of size 528 at 0x7ffc9288c724 thread T0\n    #0 0x7fcc4739a724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7fcc4739abde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x5636b732396d in list_item_to_string parts/gen_list_item_to_string.c:34\n    #3 0x5636b732f9e2 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x5636b732dbc4 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5636b732e0f9 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5636b732eb3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5636b732fcb0 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7fcc4712e082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x5636b732384d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_item_to_string_longstr.bin+0x584d)\n\nAddress 0x7ffc9288c724 is located in stack of thread T0 at offset 180 in frame\n    #0 0x5636b732f7e3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [48, 56) 'head' (line 27)\n    [80, 180) 'str' (line 23)\n    [224, 736) 'longstr' (line 24) <== Memory access at offset 180 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100012509890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000125098a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000125098b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000125098c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1\n  0x1000125098d0: f1 f1 00 00 00 f2 f2 f2 00 00 00 00 00 00 00 00\n=>0x1000125098e0: 00 00 00 00[04]f2 f2 f2 f2 f2 00 00 00 00 00 00\n  0x1000125098f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100012509900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100012509910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100012509920: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3\n  0x100012509930: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3178688==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[  FAILED  ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"1: 3 * banana @ $1.00 ea2: 2 * orange @ $2.00 ea3: 4 * apple @ $3.00 ea\" != \"1: 3 * banana @ $1.00 ea\n2: 2 * orange @ $2.00 ea\n3: 4 * apple @ $3.00 ea\n\"\n[   LINE   ] --- tests_ref/test_list_print.c:34: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3179174==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c917808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d162813e33 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55d16281f8b4 in test_list_print tests_ref/test_list_print.c:25\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c917808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d162813e33 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55d16281f8f5 in test_list_print tests_ref/test_list_print.c:26\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c917808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d162813e33 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55d16281f936 in test_list_print tests_ref/test_list_print.c:27\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 7 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c8a03ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d162813e54 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55d16281f8b4 in test_list_print tests_ref/test_list_print.c:25\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 7 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c8a03ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d162813e54 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55d16281f8f5 in test_list_print tests_ref/test_list_print.c:26\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f8f4c8a03ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d162813e54 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55d16281f936 in test_list_print tests_ref/test_list_print.c:27\n    #3 0x55d16281dba0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d16281e0d5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d16281eb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d16281fc22 in main tests_ref/test_list_print.c:43\n    #7 0x7f8f4c63c082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 92 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3180195==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd12fa1b808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55de15c93e53 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55de15c9f95b in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x55de15c9dbc0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55de15c9e0f5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55de15c9eb39 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55de15c9fc7b in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7fd12f740082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd12f9a43ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55de15c93e74 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55de15c9f95b in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x55de15c9dbc0 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55de15c9e0f5 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55de15c9eb39 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55de15c9fc7b in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7fd12f740082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3180664==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55579ec5790c bp 0x7fff27c60aa0 sp 0x7fff27c60a70 T0)\n==3180664==The signal is caused by a READ memory access.\n==3180664==Hint: address points to the zero page.\n    #0 0x55579ec5790b in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:25\n    #1 0x55579ec63844 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55579ec61bf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55579ec6212c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55579ec62b70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55579ec63a0b in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f001c47d082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55579ec5782d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:25 in list_update_item_at_pos\n==3180664==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3181283==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fe3a1c2e6e5 bp 0x7ffeb723e040 sp 0x7ffeb723d7b8 T0)\n==3181283==The signal is caused by a READ memory access.\n==3181283==Hint: address points to the zero page.\n    #0 0x7fe3a1c2e6e4  (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4)\n    #1 0x7fe3a1cff90b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x5565daa0c984 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:38\n    #3 0x5565daa18949 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x5565daa16bf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5565daa1712c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5565daa17b70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5565daa18ce6 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7fe3a1aca082 in __libc_start_main ../csu/libc-start.c:308\n    #9 0x5565daa0c82d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x582d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x1886e4) \n==3181283==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3182189==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x557ccdb4595b bp 0x7ffcd1027ee0 sp 0x7ffcd1027eb0 T0)\n==3182189==The signal is caused by a WRITE memory access.\n==3182189==Hint: address points to the zero page.\n    #0 0x557ccdb4595a in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:35\n    #1 0x557ccdb519d9 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:29\n    #2 0x557ccdb4fbf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557ccdb5012c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557ccdb50b70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557ccdb51d76 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7ff472739082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x557ccdb4582d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_update_item_at_pos_oob.bin+0x682d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:35 in list_update_item_at_pos\n==3182189==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3182638==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55ee71c4f8e0 bp 0x7fffde5dbb80 sp 0x7fffde5dbb50 T0)\n==3182638==The signal is caused by a READ memory access.\n==3182638==Hint: address points to the zero page.\n    #0 0x55ee71c4f8df in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:25\n    #1 0x55ee71c5b80f in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x55ee71c59be1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ee71c5a116 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ee71c5ab5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ee71c5b9d6 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f8ac6f7f082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55ee71c4f80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:25 in list_remove_item_at_pos\n==3182638==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3183041==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x556695519974 bp 0x7ffcb97f1e20 sp 0x7ffcb97f1df0 T0)\n==3183041==The signal is caused by a READ memory access.\n==3183041==Hint: address points to the zero page.\n    #0 0x556695519973 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:42\n    #1 0x556695525979 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:28\n    #2 0x556695523be1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x556695524116 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x556695524b5a in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x556695525d56 in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7fdf4fd6c082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55669551980d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_remove_item_at_pos_oob.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:42 in list_remove_item_at_pos\n==3183041==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3183453==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55aa93716dc3 bp 0x7ffedcb58630 sp 0x7ffedcb585a0 T0)\n==3183453==The signal is caused by a READ memory access.\n==3183453==Hint: address points to the zero page.\n    #0 0x55aa93716dc2 in test_list_swap_item_positions tests_ref/test_list_swap_item_positions.c:35\n    #1 0x55aa93714c9f in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55aa937151d4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55aa93715c18 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55aa937171ce in main tests_ref/test_list_swap_item_positions.c:47\n    #5 0x7f1ce31e9082 in __libc_start_main ../csu/libc-start.c:308\n    #6 0x55aa9370a80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_swap_item_positions.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_swap_item_positions.c:35 in test_list_swap_item_positions\n==3183453==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3183685==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x564b606719b9 bp 0x7ffe288a9420 sp 0x7ffe288a9420 T0)\n==3183685==The signal is caused by a WRITE memory access.\n==3183685==Hint: address points to the zero page.\n    #0 0x564b606719b8 in list_swap_item_positions parts/gen_list_swap_item_positions.c:51\n    #1 0x564b6067da24 in test_list_swap_item_positions_samepos tests_ref/test_list_swap_item_positions_samepos.c:27\n    #2 0x564b6067bc9f in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x564b6067c1d4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x564b6067cc18 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x564b6067dd4f in main tests_ref/test_list_swap_item_positions_samepos.c:38\n    #6 0x7f8d1e322082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x564b6067180d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_swap_item_positions_samepos.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:51 in list_swap_item_positions\n==3183685==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3184437==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x557ba7ca08df bp 0x7fff9ece4050 sp 0x7fff9ece4050 T0)\n==3184437==The signal is caused by a READ memory access.\n==3184437==Hint: address points to the zero page.\n    #0 0x557ba7ca08de in list_swap_item_positions parts/gen_list_swap_item_positions.c:25\n    #1 0x557ba7cac8d2 in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x557ba7caac9f in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557ba7cab1d4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557ba7cabc18 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557ba7caca99 in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7fc3ab496082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x557ba7ca080d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_swap_item_positions_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:25 in list_swap_item_positions\n==3184437==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3184763==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x562390d1ea45 bp 0x7ffd09ebb6d0 sp 0x7ffd09ebb6d0 T0)\n==3184763==The signal is caused by a WRITE memory access.\n==3184763==Hint: address points to the zero page.\n    #0 0x562390d1ea44 in list_swap_item_positions parts/gen_list_swap_item_positions.c:63\n    #1 0x562390d2aa86 in test_list_swap_item_positions_oob tests_ref/test_list_swap_item_positions_oob.c:29\n    #2 0x562390d28c9f in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x562390d291d4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x562390d29c18 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x562390d2ae44 in main tests_ref/test_list_swap_item_positions_oob.c:43\n    #6 0x7ffab8734082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x562390d1e80d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_swap_item_positions_oob.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:63 in list_swap_item_positions\n==3184763==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n[  FAILED  ] test_list_find_highest_price_item_position_nullpos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullpos.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullpos\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3185236==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55ba98e878e9 bp 0x7ffcdd939a40 sp 0x7ffcdd939a40 T0)\n==3185236==The signal is caused by a WRITE memory access.\n==3185236==Hint: address points to the zero page.\n    #0 0x55ba98e878e8 in list_cost_sum parts/gen_list_cost_sum.c:26\n    #1 0x55ba98e93964 in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x55ba98e91b7f in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55ba98e920b4 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55ba98e92af8 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55ba98e93ba3 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7efe7084c082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x55ba98e8780d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_cost_sum_nulltotal.bin+0x680d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:26 in list_cost_sum\n==3185236==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[  FAILED  ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- \"item1,1.000000,1\n\" != \"item1,1.00,1\n\"\n[   LINE   ] --- tests_ref/test_list_save.c:40: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_save\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3185610==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2faeb0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5643b1405e75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x5643b1411a44 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2fae393ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5643b1405e96 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x5643b1411b0d in test_list_save tests_ref/test_list_save.c:31\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2faeb0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5643b1405e75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x5643b1411b0d in test_list_save tests_ref/test_list_save.c:31\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2faeb0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5643b1405e75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x5643b1411a87 in test_list_save tests_ref/test_list_save.c:29\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2faeb0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5643b1405e75 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x5643b1411aca in test_list_save tests_ref/test_list_save.c:30\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2fae393ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5643b1405e96 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x5643b1411aca in test_list_save tests_ref/test_list_save.c:30\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2fae393ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5643b1405e96 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x5643b1411a87 in test_list_save tests_ref/test_list_save.c:29\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fe2fae393ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5643b1405e96 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x5643b1411a44 in test_list_save tests_ref/test_list_save.c:28\n    #3 0x5643b140fbe2 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5643b1410117 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5643b1410b5b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5643b141207f in main tests_ref/test_list_save.c:64\n    #7 0x7fe2fabd5082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 628 byte(s) leaked in 8 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3186667==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x560c54a0b967 bp 0x7ffeca9bf140 sp 0x7ffeca9bf090 T0)\n==3186667==The signal is caused by a READ memory access.\n==3186667==Hint: address points to the zero page.\n    #0 0x560c54a0b966 in list_load parts/gen_list_load.c:33\n    #1 0x560c54a17932 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x560c54a15cf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x560c54a1622c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x560c54a16c70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x560c54a17af9 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fb933b84082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x560c54a0b84d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_load_nullhead.bin+0x684d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:33 in list_load\n==3186667==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n[  FAILED  ] test_list_load_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0\n[   LINE   ] --- tests_ref/test_list_load_longitem.c:29: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head->next\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:31: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3187137==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd448167808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55cb6916ff8a in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55cb6917ba5b in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55cb69179cf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55cb6917a22c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55cb6917ac70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55cb6917be9d in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd447e8c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd448167808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55cb6916fa15 in list_load parts/gen_list_load.c:51\n    #2 0x55cb6917ba8c in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x55cb69179cf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55cb6917a22c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55cb6917ac70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55cb6917be9d in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd447e8c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd448167808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55cb6916fa31 in list_load parts/gen_list_load.c:52\n    #2 0x55cb6917ba8c in test_list_load_badparse tests_ref/test_list_load_badparse.c:27\n    #3 0x55cb69179cf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55cb6917a22c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55cb6917ac70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55cb6917be9d in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd447e8c082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fd4480f03ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55cb6916ffab in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55cb6917ba5b in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55cb69179cf7 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55cb6917a22c in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55cb6917ac70 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55cb6917be9d in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fd447e8c082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- head->next\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:31: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3187692==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f202d876808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55faf2161e59 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55faf216d8da in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x55faf216bbc6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55faf216c0fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55faf216cb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55faf216dd4c in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f202d59b082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f202d876808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55faf2161e59 in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:114\n    #2 0x55faf216d91a in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55faf216bbc6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55faf216c0fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55faf216cb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55faf216dd4c in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f202d59b082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f202d7ff3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55faf2161e7a in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55faf216d91a in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55faf216bbc6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55faf216c0fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55faf216cb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55faf216dd4c in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f202d59b082 in __libc_start_main ../csu/libc-start.c:308\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f202d7ff3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55faf2161e7a in ref_list_add_item_at_pos /home/moyix/git/codex_study_grading/repos/davinci-002_07/reflist.c:118\n    #2 0x55faf216d8da in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x55faf216bbc6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55faf216c0fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55faf216cb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55faf216dd4c in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f202d59b082 in __libc_start_main ../csu/libc-start.c:308\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3188183==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561bfc5b18dd bp 0x7ffd80e48740 sp 0x7ffd80e48710 T0)\n==3188183==The signal is caused by a READ memory access.\n==3188183==Hint: address points to the zero page.\n    #0 0x561bfc5b18dc in list_deduplicate parts/gen_list_deduplicate.c:27\n    #1 0x561bfc5bd7ef in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x561bfc5bbbc6 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561bfc5bc0fb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561bfc5bcb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561bfc5bd9b6 in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f7945cfb082 in __libc_start_main ../csu/libc-start.c:308\n    #7 0x561bfc5b180d in _start (/home/moyix/git/codex_study_grading/repos/davinci-002_07/tests_ref/test_list_deduplicate_nullhead.bin+0x580d)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:27 in list_deduplicate\n==3188183==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 16,
    "total": 45,
    "passed_functional": 12,
    "total_functional": 26
}
