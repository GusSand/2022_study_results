{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3810325==ERROR: AddressSanitizer: SEGV on unknown address 0x555cf036c710 (pc 0x7fddf64a1a16 bp 0x555cf036c710 sp 0x7ffd165ea470 T0)\n==3810325==The signal is caused by a WRITE memory access.\n    #0 0x7fddf64a1a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fddf64a1a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fddf64a1a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fddf64a1a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fddf65863d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x555cf0368415 in list_free test_common.h:35\n    #6 0x555cf0368d3b in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x555cf0366c36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x555cf0367176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x555cf0367ba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x555cf0368f3c in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7fddf627afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fddf627b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x555cf035c804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3810325==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3810690==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x557d41c1a929 bp 0x7ffecdd1db80 sp 0x7ffecdd1db40 T0)\n==3810690==The signal is caused by a READ memory access.\n==3810690==Hint: address points to the zero page.\n    #0 0x557d41c1a928 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x557d41c2683b in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x557d41c24c36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557d41c25176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557d41c25ba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557d41c269ea in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7f3cacb34fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f3cacb3507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x557d41c1a804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3810690==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811022==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f0c88cd7808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55f3575b48f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #2 0x55f3575c0909 in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #3 0x55f3575bec36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55f3575bf176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55f3575bfba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55f3575c0b0a in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #7 0x7f0c889cbfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3811344==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f68f90ae808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55876e1128f1 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:39\n    #2 0x55876e11e90d in test_list_add_item_at_pos_oob tests_ref/test_list_add_item_at_pos_oob.c:25\n    #3 0x55876e11cc36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55876e11d176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55876e11dba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55876e11ebd9 in main tests_ref/test_list_add_item_at_pos_oob.c:35\n    #7 0x7f68f8da2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3811671==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x55a43e6d3901 bp 0x7ffd9e0a70b0 sp 0x7ffd9e0a70a0 T0)\n==3811671==The signal is caused by a READ memory access.\n==3811671==Hint: address points to the zero page.\n    #0 0x55a43e6d3900 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #1 0x55a43e6df82c in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x55a43e6ddbb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55a43e6de0f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55a43e6deb1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55a43e6dfa5b in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7fbbd5548fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fbbd554907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55a43e6d3824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:32 in list_item_to_string\n==3811671==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3811992==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fcb88ed5667 bp 0x000000000031 sp 0x7fffca577d90 T0)\n==3811992==The signal is caused by a WRITE memory access.\n==3811992==Hint: address points to the zero page.\n    #0 0x7fcb88ed5666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7fcb88ed3de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7fcb88ed3de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7fcb88ebbb23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7fcb88ebbb23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7fcb88ec7ae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7fcb88ec7ae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7fcb8910c664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7fcb8910cbde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x560fad98392f in list_item_to_string parts/gen_list_item_to_string.c:32\n    #10 0x560fad98f8d7 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x560fad98dbb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x560fad98e0f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x560fad98eb1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x560fad98fafe in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7fcb88e6ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7fcb88e7007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x560fad983824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3811992==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3812435==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffaf7c9b94 at pc 0x7ff273cd0725 bp 0x7fffaf7c99a0 sp 0x7fffaf7c9130\nWRITE of size 527 at 0x7fffaf7c9b94 thread T0\n    #0 0x7ff273cd0724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7ff273cd0bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x555d69f5494f in list_item_to_string parts/gen_list_item_to_string.c:32\n    #3 0x555d69f6099e in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x555d69f5ebd1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x555d69f5f111 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x555d69f5fb3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x555d69f60c53 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7ff273a33fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7ff273a3407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x555d69f54844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7fffaf7c9b94 is located in stack of thread T0 at offset 196 in frame\n    #0 0x555d69f607b3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100075ef1320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef1330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef1340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef1350: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 f2\n  0x100075ef1360: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00\n=>0x100075ef1370: 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n  0x100075ef1380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef1390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef13a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100075ef13b0: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00\n  0x100075ef13c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3812435==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3812870==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f65ed4bb808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x5638982c6e35 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x5638982d2959 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5638982d0bfb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5638982d113b in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5638982d1b69 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5638982d2c6a in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f65ed1affcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 512 byte(s) in 1 object(s) allocated from:\n    #0 0x7f65ed4443ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x5638982c6e56 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x5638982d2959 in test_list_print_longitem tests_ref/test_list_print_longitem.c:28\n    #3 0x5638982d0bfb in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x5638982d113b in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x5638982d1b69 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x5638982d2c6a in main tests_ref/test_list_print_longitem.c:39\n    #7 0x7f65ed1affcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 536 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813315==ERROR: AddressSanitizer: SEGV on unknown address 0x55948b42a750 (pc 0x7f51f4a46a16 bp 0x55948b42a750 sp 0x7fff5ad195b0 T0)\n==3813315==The signal is caused by a WRITE memory access.\n    #0 0x7f51f4a46a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7f51f4a46a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7f51f4a46a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7f51f4a46a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7f51f4b2b3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55948b42638a in list_free test_common.h:35\n    #6 0x55948b426a52 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x55948b424bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55948b4250eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55948b425b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55948b426c53 in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7f51f481ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7f51f482007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55948b41a804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3813315==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3813565==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x557891d4f8e8 bp 0x7ffc8a256640 sp 0x7ffc8a256640 T0)\n==3813565==The signal is caused by a READ memory access.\n==3813565==Hint: address points to the zero page.\n    #0 0x557891d4f8e7 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:29\n    #1 0x557891d5b7bb in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x557891d59bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x557891d5a0eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x557891d5ab19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x557891d5b96a in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f203e07dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f203e07e07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x557891d4f804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:29 in list_update_item_at_pos\n==3813565==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3813768==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f234d926808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x556c4be44de5 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x556c4be50882 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x556c4be4ebab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x556c4be4f0eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556c4be4fb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556c4be50c43 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f234d61afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f234d8af3ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x556c4be44e06 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x556c4be50882 in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:25\n    #3 0x556c4be4ebab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x556c4be4f0eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x556c4be4fb19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x556c4be50c43 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #7 0x7f234d61afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814153==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x5633cec768f5 bp 0x7ffc426e4210 sp 0x7ffc426e4210 T0)\n==3814153==The signal is caused by a READ memory access.\n==3814153==Hint: address points to the zero page.\n    #0 0x5633cec768f4 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:31\n    #1 0x5633cec828d0 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:27\n    #2 0x5633cec80bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5633cec810eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5633cec81b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5633cec82cd3 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7f40c7878fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f40c787907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5633cec76804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:31 in list_update_item_at_pos\n==3814153==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n\n=================================================================\n==3814371==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09a0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d04adeae08 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55d04adf68a5 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09a0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d04adeae08 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55d04adf6925 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09a0808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d04adeae08 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55d04adf68e5 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09293ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d04adeae29 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55d04adf6925 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:27\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09293ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d04adeae29 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55d04adf68e5 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:26\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f56a09293ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d04adeae29 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55d04adf68a5 in test_list_remove_item_at_pos tests_ref/test_list_remove_item_at_pos.c:25\n    #3 0x55d04adf4bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d04adf510e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d04adf5b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d04adf6d57 in main tests_ref/test_list_remove_item_at_pos.c:45\n    #7 0x7f56a0694fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 90 byte(s) leaked in 6 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3814795==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56429af748dc bp 0x7ffcbe4a29c0 sp 0x7ffcbe4a29c0 T0)\n==3814795==The signal is caused by a READ memory access.\n==3814795==Hint: address points to the zero page.\n    #0 0x56429af748db in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:30\n    #1 0x56429af807bf in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x56429af7ebce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56429af7f10e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56429af7fb3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56429af8096e in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f9381ce2fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f9381ce307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x56429af74804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:30 in list_remove_item_at_pos\n==3814795==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815027==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55e370a18949 bp 0x7fffff8b6540 sp 0x7fffff8b6540 T0)\n==3815027==The signal is caused by a WRITE memory access.\n==3815027==Hint: address points to the zero page.\n    #0 0x55e370a18948 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:43\n    #1 0x55e370a248d1 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x55e370a22bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e370a2310e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e370a23b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e370a24cec in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7fcf00530fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fcf0053107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e370a18804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:43 in list_remove_item_at_pos\n==3815027==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullfilename": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_badfile": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815276==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55d7fd4e4b6e bp 0x7ffc8bfa2170 sp 0x7ffc8bfa20d0 T0)\n==3815276==The signal is caused by a READ memory access.\n==3815276==Hint: address points to the zero page.\n    #0 0x55d7fd4e4b6d in test_list_load tests_ref/test_list_load.c:36\n    #1 0x55d7fd4e2c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55d7fd4e3175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55d7fd4e3ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55d7fd4e549e in main tests_ref/test_list_load.c:53\n    #5 0x7f586c5c7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7f586c5c807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55d7fd4d8824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3815276==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815543==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5653f2450927 bp 0x7ffd1cc3d250 sp 0x7ffd1cc3d200 T0)\n==3815543==The signal is caused by a READ memory access.\n==3815543==Hint: address points to the zero page.\n    #0 0x5653f2450926 in list_load parts/gen_list_load.c:35\n    #1 0x5653f245c833 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x5653f245ac35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5653f245b175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5653f245bba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5653f245c9e2 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7fbf5a8bafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fbf5a8bb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5653f2450824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:35 in list_load\n==3815543==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3815757==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fa2f2b4e18d bp 0x7fff10eddac0 sp 0x7fff10edd1e0 T0)\n==3815757==The signal is caused by a READ memory access.\n==3815757==Hint: address points to the zero page.\n    #0 0x7fa2f2b4e18c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7fa2f2d8edc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x55a2030ca988 in list_load parts/gen_list_load.c:43\n    #3 0x55a2030d68ca in test_list_load_nullfilename tests_ref/test_list_load_nullfilename.c:24\n    #4 0x55a2030d4c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55a2030d5175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55a2030d5ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55a2030d6ac9 in main tests_ref/test_list_load_nullfilename.c:31\n    #8 0x7fa2f2af7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fa2f2af807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55a2030ca824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_nullfilename.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3815757==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816188==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55db7e8b4a5a bp 0x7fff92b6c720 sp 0x7fff92b6c440 T0)\n==3816188==The signal is caused by a READ memory access.\n==3816188==Hint: address points to the zero page.\n    #0 0x55db7e8b4a59 in test_list_load_longitem tests_ref/test_list_load_longitem.c:30\n    #1 0x55db7e8b2c55 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55db7e8b3195 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55db7e8b3bc3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55db7e8b4e02 in main tests_ref/test_list_load_longitem.c:40\n    #5 0x7fdcd7ac1fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7fdcd7ac207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55db7e8a8844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_longitem.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load_longitem.c:30 in test_list_load_longitem\n==3816188==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3816467==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc2f604d808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55589a045e6f in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55589a05195c in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55589a04fc35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55589a050175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55589a050ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55589a051d84 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fc2f5d41fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7fc2f5fd63ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55589a045e90 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55589a05195c in test_list_load_badparse tests_ref/test_list_load_badparse.c:26\n    #3 0x55589a04fc35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55589a050175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55589a050ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55589a051d84 in main tests_ref/test_list_load_badparse.c:39\n    #7 0x7fc2f5d41fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 30 byte(s) leaked in 2 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3816879==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f65bb30f18d bp 0x7ffc39f67f50 sp 0x7ffc39f67670 T0)\n==3816879==The signal is caused by a READ memory access.\n==3816879==Hint: address points to the zero page.\n    #0 0x7f65bb30f18c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7f65bb54fdc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x562b3e4659a8 in list_load parts/gen_list_load.c:43\n    #3 0x562b3e4719e8 in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #4 0x562b3e46fc55 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x562b3e470195 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x562b3e470bc3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x562b3e471bef in main tests_ref/test_list_load_badfile.c:37\n    #8 0x7f65bb2b8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f65bb2b907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x562b3e465844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_badfile.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3816879==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3817358==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fafc652018d bp 0x7ffdb34a6980 sp 0x7ffdb34a60a0 T0)\n==3817358==The signal is caused by a READ memory access.\n==3817358==Hint: address points to the zero page.\n    #0 0x7fafc652018c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7fafc6760dc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x563af4a3c988 in list_load parts/gen_list_load.c:43\n    #3 0x563af4a4894f in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #4 0x563af4a46c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x563af4a47175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x563af4a47ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x563af4a48b50 in main tests_ref/test_list_load_missingfile.c:36\n    #8 0x7fafc64c9fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fafc64ca07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x563af4a3c824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_missingfile.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3817358==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n\n=================================================================\n==3817746==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f698ba89808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d7a6c58d90 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55d7a6c6482d in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x55d7a6c62b56 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d7a6c63096 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d7a6c63ac4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d7a6c64c85 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f698b77dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x7f698ba89808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144\n    #1 0x55d7a6c58d90 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:114\n    #2 0x55d7a6c6486d in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55d7a6c62b56 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d7a6c63096 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d7a6c63ac4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d7a6c64c85 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f698b77dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f698ba123ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d7a6c58db1 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55d7a6c6486d in test_list_deduplicate tests_ref/test_list_deduplicate.c:26\n    #3 0x55d7a6c62b56 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d7a6c63096 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d7a6c63ac4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d7a6c64c85 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f698b77dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nIndirect leak of 6 byte(s) in 1 object(s) allocated from:\n    #0 0x7f698ba123ed in __interceptor_strdup ../../../../src/libsanitizer/asan/asan_interceptors.cc:445\n    #1 0x55d7a6c58db1 in ref_list_add_item_at_pos /home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/reflist.c:118\n    #2 0x55d7a6c6482d in test_list_deduplicate tests_ref/test_list_deduplicate.c:25\n    #3 0x55d7a6c62b56 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #4 0x55d7a6c63096 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #5 0x55d7a6c63ac4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #6 0x55d7a6c64c85 in main tests_ref/test_list_deduplicate.c:39\n    #7 0x7f698b77dfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n\nSUMMARY: AddressSanitizer: 60 byte(s) leaked in 4 allocation(s).\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n[  FAILED  ] test_list_deduplicate_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_deduplicate_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 4,
    "total": 45,
    "passed_functional": 4,
    "total_functional": 26
}
