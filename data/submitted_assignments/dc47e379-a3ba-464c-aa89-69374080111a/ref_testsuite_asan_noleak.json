{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818272==ERROR: AddressSanitizer: SEGV on unknown address 0x55dd9a372710 (pc 0x7fc77202ba16 bp 0x55dd9a372710 sp 0x7ffc173c4340 T0)\n==3818272==The signal is caused by a WRITE memory access.\n    #0 0x7fc77202ba15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fc77202ba15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fc77202ba15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fc77202ba15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fc7721103d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x55dd9a36e415 in list_free test_common.h:35\n    #6 0x55dd9a36ed3b in test_list_add_item_at_pos tests_ref/test_list_add_item_at_pos.c:34\n    #7 0x55dd9a36cc36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x55dd9a36d176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x55dd9a36dba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x55dd9a36ef3c in main tests_ref/test_list_add_item_at_pos.c:41\n    #11 0x7fc771e04fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fc771e0507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x55dd9a362804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_add_item_at_pos.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3818272==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818493==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561750383929 bp 0x7ffc138b17a0 sp 0x7ffc138b1760 T0)\n==3818493==The signal is caused by a READ memory access.\n==3818493==Hint: address points to the zero page.\n    #0 0x561750383928 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:45\n    #1 0x56175038f83b in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x56175038dc36 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x56175038e176 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x56175038eba4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56175038f9ea in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7faf43d40fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7faf43d4107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561750383804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:45 in list_add_item_at_pos\n==3818493==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_nullitem.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_nullitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[  FAILED  ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_add_item_at_pos_oob.c:25: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_add_item_at_pos_oob\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818735==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x563a6bb77901 bp 0x7ffca27907f0 sp 0x7ffca27907e0 T0)\n==3818735==The signal is caused by a READ memory access.\n==3818735==Hint: address points to the zero page.\n    #0 0x563a6bb77900 in list_item_to_string parts/gen_list_item_to_string.c:32\n    #1 0x563a6bb8382c in test_list_item_to_string_nullhead tests_ref/test_list_item_to_string_nullhead.c:24\n    #2 0x563a6bb81bb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x563a6bb820f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x563a6bb82b1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x563a6bb83a5b in main tests_ref/test_list_item_to_string_nullhead.c:31\n    #6 0x7f50700f8fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f50700f907c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x563a6bb77824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_item_to_string.c:32 in list_item_to_string\n==3818735==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818933==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7efe9abed667 bp 0x000000000031 sp 0x7ffebaf7bc70 T0)\n==3818933==The signal is caused by a WRITE memory access.\n==3818933==Hint: address points to the zero page.\n    #0 0x7efe9abed666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7efe9abebde3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7efe9abebde3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7efe9abd3b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7efe9abd3b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7efe9abdfae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7efe9abdfae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7efe9ae24664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7efe9ae24bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55d700c5092f in list_item_to_string parts/gen_list_item_to_string.c:32\n    #10 0x55d700c5c8d7 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x55d700c5abb1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x55d700c5b0f1 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x55d700c5bb1f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x55d700c5cafe in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7efe9ab87fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7efe9ab8807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55d700c50824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3818933==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3819295==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff1da24094 at pc 0x7f5728844725 bp 0x7fff1da23ea0 sp 0x7fff1da23630\nWRITE of size 527 at 0x7fff1da24094 thread T0\n    #0 0x7f5728844724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f5728844bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x55ba5d96694f in list_item_to_string parts/gen_list_item_to_string.c:32\n    #3 0x55ba5d97299e in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x55ba5d970bd1 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55ba5d971111 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55ba5d971b3f in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55ba5d972c53 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f57285a7fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f57285a807c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55ba5d966844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7fff1da24094 is located in stack of thread T0 at offset 196 in frame\n    #0 0x55ba5d9727b3 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100063b3c7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c7d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c7f0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 f2\n  0x100063b3c800: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00\n=>0x100063b3c810: 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n  0x100063b3c820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100063b3c850: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 00 00\n  0x100063b3c860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3819295==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[  FAILED  ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_longitem.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_longitem\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819613==ERROR: AddressSanitizer: SEGV on unknown address 0x564171445750 (pc 0x7fd0b9025a16 bp 0x564171445750 sp 0x7ffd2d0cf250 T0)\n==3819613==The signal is caused by a WRITE memory access.\n    #0 0x7fd0b9025a15 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order) ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79\n    #1 0x7fd0b9025a15 in __asan::Allocator::AtomicallySetQuarantineFlagIfAllocated(__asan::AsanChunk*, void*, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cc:552\n    #2 0x7fd0b9025a15 in __asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:629\n    #3 0x7fd0b9025a15 in __asan::asan_free(void*, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cc:865\n    #4 0x7fd0b910a3d8 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:127\n    #5 0x56417144138a in list_free test_common.h:35\n    #6 0x564171441a52 in test_list_update_item_at_pos tests_ref/test_list_update_item_at_pos.c:31\n    #7 0x56417143fbab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #8 0x5641714400eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #9 0x564171440b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #10 0x564171441c53 in main tests_ref/test_list_update_item_at_pos.c:38\n    #11 0x7fd0b8dfefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #12 0x7fd0b8dff07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #13 0x564171435804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV ../../../../src/libsanitizer/sanitizer_common/sanitizer_atomic_clang.h:79 in bool __sanitizer::atomic_compare_exchange_strong<__sanitizer::atomic_uint8_t>(__sanitizer::atomic_uint8_t volatile*, __sanitizer::atomic_uint8_t::Type*, __sanitizer::atomic_uint8_t::Type, __sanitizer::memory_order)\n==3819613==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819847==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56085512e8e8 bp 0x7fff4d3ce380 sp 0x7fff4d3ce380 T0)\n==3819847==The signal is caused by a READ memory access.\n==3819847==Hint: address points to the zero page.\n    #0 0x56085512e8e7 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:29\n    #1 0x56085513a7bb in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x560855138bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5608551390eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x560855139b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x56085513a96a in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f39bb145fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f39bb14607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x56085512e804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:29 in list_update_item_at_pos\n==3819847==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_update_item_at_pos_nullstr.c:26: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_update_item_at_pos_nullstr\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820068==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x55e97b1468f5 bp 0x7fff13ee6490 sp 0x7fff13ee6490 T0)\n==3820068==The signal is caused by a READ memory access.\n==3820068==Hint: address points to the zero page.\n    #0 0x55e97b1468f4 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:31\n    #1 0x55e97b1528d0 in test_list_update_item_at_pos_oob tests_ref/test_list_update_item_at_pos_oob.c:27\n    #2 0x55e97b150bab in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e97b1510eb in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e97b151b19 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e97b152cd3 in main tests_ref/test_list_update_item_at_pos_oob.c:41\n    #6 0x7fe4aea5ffcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fe4aea6007c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e97b146804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_update_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:31 in list_update_item_at_pos\n==3820068==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820271==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5592542378dc bp 0x7ffc51e34640 sp 0x7ffc51e34640 T0)\n==3820271==The signal is caused by a READ memory access.\n==3820271==Hint: address points to the zero page.\n    #0 0x5592542378db in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:30\n    #1 0x5592542437bf in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x559254241bce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55925424210e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x559254242b3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55925424396e in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7fccfbd64fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fccfbd6507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x559254237804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:30 in list_remove_item_at_pos\n==3820271==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820444==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x558b3b4d3949 bp 0x7fffb99ec780 sp 0x7fffb99ec780 T0)\n==3820444==The signal is caused by a WRITE memory access.\n==3820444==Hint: address points to the zero page.\n    #0 0x558b3b4d3948 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:43\n    #1 0x558b3b4df8d1 in test_list_remove_item_at_pos_oob tests_ref/test_list_remove_item_at_pos_oob.c:26\n    #2 0x558b3b4ddbce in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x558b3b4de10e in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x558b3b4deb3c in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x558b3b4dfcec in main tests_ref/test_list_remove_item_at_pos_oob.c:41\n    #6 0x7fea4821afcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fea4821b07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x558b3b4d3804 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_remove_item_at_pos_oob.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:43 in list_remove_item_at_pos\n==3820444==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_swap_item_positions_oob": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullhead": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_nullfilename": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_save_badfile": {
            "return_code": "skipped: compile_error",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_load": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820669==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x56309559fb6e bp 0x7ffd830da760 sp 0x7ffd830da6c0 T0)\n==3820669==The signal is caused by a READ memory access.\n==3820669==Hint: address points to the zero page.\n    #0 0x56309559fb6d in test_list_load tests_ref/test_list_load.c:36\n    #1 0x56309559dc35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x56309559e175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x56309559eba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x5630955a049e in main tests_ref/test_list_load.c:53\n    #5 0x7f14c30acfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7f14c30ad07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x563095593824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load.c:36 in test_list_load\n==3820669==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820891==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e875a6d927 bp 0x7ffe43d0deb0 sp 0x7ffe43d0de60 T0)\n==3820891==The signal is caused by a READ memory access.\n==3820891==Hint: address points to the zero page.\n    #0 0x55e875a6d926 in list_load parts/gen_list_load.c:35\n    #1 0x55e875a79833 in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x55e875a77c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e875a78175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e875a78ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e875a799e2 in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f63b1699fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f63b169a07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e875a6d824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:35 in list_load\n==3820891==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821100==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd0c952a18d bp 0x7ffcfb9f78d0 sp 0x7ffcfb9f6ff0 T0)\n==3821100==The signal is caused by a READ memory access.\n==3821100==Hint: address points to the zero page.\n    #0 0x7fd0c952a18c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7fd0c976adc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x55984122d988 in list_load parts/gen_list_load.c:43\n    #3 0x5598412398ca in test_list_load_nullfilename tests_ref/test_list_load_nullfilename.c:24\n    #4 0x559841237c35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x559841238175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x559841238ba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x559841239ac9 in main tests_ref/test_list_load_nullfilename.c:31\n    #8 0x7fd0c94d3fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fd0c94d407c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55984122d824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_nullfilename.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3821100==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821434==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f967bc4a5a bp 0x7fff0b842ac0 sp 0x7fff0b8427e0 T0)\n==3821434==The signal is caused by a READ memory access.\n==3821434==Hint: address points to the zero page.\n    #0 0x55f967bc4a59 in test_list_load_longitem tests_ref/test_list_load_longitem.c:30\n    #1 0x55f967bc2c55 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #2 0x55f967bc3195 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #3 0x55f967bc3bc3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #4 0x55f967bc4e02 in main tests_ref/test_list_load_longitem.c:40\n    #5 0x7f5135645fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #6 0x7f513564607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #7 0x55f967bb8844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_longitem.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV tests_ref/test_list_load_longitem.c:30 in test_list_load_longitem\n==3821434==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821658==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f9d16c3818d bp 0x7ffe7f076660 sp 0x7ffe7f075d80 T0)\n==3821658==The signal is caused by a READ memory access.\n==3821658==Hint: address points to the zero page.\n    #0 0x7f9d16c3818c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7f9d16e78dc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x55bb253e09a8 in list_load parts/gen_list_load.c:43\n    #3 0x55bb253ec9e8 in test_list_load_badfile tests_ref/test_list_load_badfile.c:30\n    #4 0x55bb253eac55 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55bb253eb195 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55bb253ebbc3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55bb253ecbef in main tests_ref/test_list_load_badfile.c:37\n    #8 0x7f9d16be1fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f9d16be207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55bb253e0844 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_badfile.bin+0x5844)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3821658==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3822015==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fdc5c35118d bp 0x7ffeb035efa0 sp 0x7ffeb035e6c0 T0)\n==3822015==The signal is caused by a READ memory access.\n==3822015==Hint: address points to the zero page.\n    #0 0x7fdc5c35118c in __GI___getdelim libio/iogetdelim.c:46\n    #1 0x7fdc5c591dc7 in __interceptor_getline ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4960\n    #2 0x55acca7f3988 in list_load parts/gen_list_load.c:43\n    #3 0x55acca7ff94f in test_list_load_missingfile tests_ref/test_list_load_missingfile.c:29\n    #4 0x55acca7fdc35 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55acca7fe175 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55acca7feba3 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55acca7ffb50 in main tests_ref/test_list_load_missingfile.c:36\n    #8 0x7fdc5c2fafcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fdc5c2fb07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55acca7f3824 in _start (/home/gustavo/git/codex_study_grading/repos/dc47e379-a3ba-464c-aa89-69374080111a/tests_ref/test_list_load_missingfile.bin+0x6824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/iogetdelim.c:46 in __GI___getdelim\n==3822015==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[  FAILED  ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0x1 != 0xb\n[   LINE   ] --- tests_ref/test_list_deduplicate.c:30: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n[  FAILED  ] test_list_deduplicate_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_deduplicate_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_deduplicate_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 5,
    "total": 45,
    "passed_functional": 5,
    "total_functional": 26
}
