{
    "results": {
        "test_list_init": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_init_nullhead": {
            "return_code": "skipped: unimplemented",
            "stdout": "",
            "stderr": "",
            "passed": false,
            "skipped": true
        },
        "test_list_add_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos\n[       OK ] test_list_add_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818231==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55b036c25924 bp 0x7ffc6b9a2940 sp 0x7ffc6b9a2900 T0)\n==3818231==The signal is caused by a READ memory access.\n==3818231==Hint: address points to the zero page.\n    #0 0x55b036c25923 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:46\n    #1 0x55b036c3187c in test_list_add_item_at_pos_nullhead tests_ref/test_list_add_item_at_pos_nullhead.c:23\n    #2 0x55b036c2fc77 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55b036c301b7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55b036c30be5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55b036c31a2b in main tests_ref/test_list_add_item_at_pos_nullhead.c:30\n    #6 0x7eff781aefcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7eff781af07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55b036c25824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_add_item_at_pos_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_add_item_at_pos.c:46 in list_add_item_at_pos\n==3818231==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_nullitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_nullitem\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818457==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f884bad305d bp 0x7ffdd9b97770 sp 0x7ffdd9b96ee8 T0)\n==3818457==The signal is caused by a READ memory access.\n==3818457==Hint: address points to the zero page.\n    #0 0x7f884bad305c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7f884bbc690b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x55c5707b2986 in list_add_item_at_pos parts/gen_list_add_item_at_pos.c:65\n    #3 0x55c5707be94a in test_list_add_item_at_pos_nullitem tests_ref/test_list_add_item_at_pos_nullitem.c:25\n    #4 0x55c5707bcc77 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x55c5707bd1b7 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x55c5707bdbe5 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x55c5707beb4b in main tests_ref/test_list_add_item_at_pos_nullitem.c:32\n    #8 0x7f884b960fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f884b96107c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x55c5707b2824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_add_item_at_pos_nullitem.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3818457==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_add_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_add_item_at_pos_oob\n[       OK ] test_list_add_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string\n[       OK ] test_list_item_to_string\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullhead\n[       OK ] test_list_item_to_string_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_item_to_string_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3818801==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fe10c0db667 bp 0x000000000031 sp 0x7ffd33a51b30 T0)\n==3818801==The signal is caused by a WRITE memory access.\n==3818801==Hint: address points to the zero page.\n    #0 0x7fe10c0db666 in __GI__IO_str_overflow libio/strops.c:133\n    #1 0x7fe10c0d9de3 in __GI__IO_default_xsputn libio/genops.c:399\n    #2 0x7fe10c0d9de3 in __GI__IO_default_xsputn libio/genops.c:370\n    #3 0x7fe10c0c1b23 in outstring_func stdio-common/vfprintf-internal.c:239\n    #4 0x7fe10c0c1b23 in __vfprintf_internal stdio-common/vfprintf-internal.c:1646\n    #5 0x7fe10c0cdae7 in __vsprintf_internal libio/iovsprintf.c:95\n    #6 0x7fe10c0cdae7 in __vsprintf libio/iovsprintf.c:104\n    #7 0x7fe10c312664 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #8 0x7fe10c312bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #9 0x55de5ed9a93d in list_item_to_string parts/gen_list_item_to_string.c:38\n    #10 0x55de5eda68f5 in test_list_item_to_string_nullstr tests_ref/test_list_item_to_string_nullstr.c:26\n    #11 0x55de5eda4bcf in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #12 0x55de5eda510f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #13 0x55de5eda5b3d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #14 0x55de5eda6b1c in main tests_ref/test_list_item_to_string_nullstr.c:34\n    #15 0x7fe10c075fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #16 0x7fe10c07607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #17 0x55de5ed9a824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_item_to_string_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV libio/strops.c:133 in __GI__IO_str_overflow\n==3818801==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_item_to_string_longstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_item_to_string_longstr\n",
            "stderr": "=================================================================\n==3819157==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc9dde5c34 at pc 0x7f91239a1725 bp 0x7ffc9dde5a30 sp 0x7ffc9dde51c0\nWRITE of size 527 at 0x7ffc9dde5c34 thread T0\n    #0 0x7f91239a1724 in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627\n    #1 0x7f91239a1bde in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1670\n    #2 0x5572d8f3c95d in list_item_to_string parts/gen_list_item_to_string.c:38\n    #3 0x5572d8f489bc in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:30\n    #4 0x5572d8f46bef in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x5572d8f4712f in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x5572d8f47b5d in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x5572d8f48c71 in main tests_ref/test_list_item_to_string_longstr.c:38\n    #8 0x7f9123704fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7f912370507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x5572d8f3c844 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_item_to_string_longstr.bin+0x5844)\n\nAddress 0x7ffc9dde5c34 is located in stack of thread T0 at offset 196 in frame\n    #0 0x5572d8f487d1 in test_list_item_to_string_longstr tests_ref/test_list_item_to_string_longstr.c:21\n\n  This frame has 3 object(s):\n    [32, 40) 'head'\n    [96, 196) 'str'\n    [256, 768) 'longstr' <== Memory access at offset 196 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1627 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x100013bb4b30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4b40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4b50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1\n  0x100013bb4b70: f1 f1 00 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n=>0x100013bb4b80: 00 00 00 00 00 00[04]f2 f2 f2 f2 f2 f2 f2 00 00\n  0x100013bb4b90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4ba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100013bb4bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f3 f3\n  0x100013bb4bd0: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==3819157==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print\n[       OK ] test_list_print\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_print_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_nullhead\n[  FAILED  ] test_list_print_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_print_nullhead.c:23: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_print_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_print_longitem": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_print_longitem\n[       OK ] test_list_print_longitem\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos\n[       OK ] test_list_update_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819512==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55f469f70923 bp 0x7ffda2252c00 sp 0x7ffda2252bd0 T0)\n==3819512==The signal is caused by a READ memory access.\n==3819512==Hint: address points to the zero page.\n    #0 0x55f469f70922 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:35\n    #1 0x55f469f7c849 in test_list_update_item_at_pos_nullhead tests_ref/test_list_update_item_at_pos_nullhead.c:24\n    #2 0x55f469f7ac39 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55f469f7b179 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55f469f7bba7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55f469f7c9f8 in main tests_ref/test_list_update_item_at_pos_nullhead.c:31\n    #6 0x7f705df71fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f705df7207c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55f469f70824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_update_item_at_pos_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_update_item_at_pos.c:35 in list_update_item_at_pos\n==3819512==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_nullstr": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_nullstr\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3819726==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fb592c4805d bp 0x7ffcf7c96b70 sp 0x7ffcf7c962e8 T0)\n==3819726==The signal is caused by a READ memory access.\n==3819726==Hint: address points to the zero page.\n    #0 0x7fb592c4805c  (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c)\n    #1 0x7fb592d3b90b in __interceptor_strlen ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:352\n    #2 0x56483b17b973 in list_update_item_at_pos parts/gen_list_update_item_at_pos.c:50\n    #3 0x56483b18794e in test_list_update_item_at_pos_nullstr tests_ref/test_list_update_item_at_pos_nullstr.c:26\n    #4 0x56483b185c39 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #5 0x56483b186179 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #6 0x56483b186ba7 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #7 0x56483b187cd1 in main tests_ref/test_list_update_item_at_pos_nullstr.c:38\n    #8 0x7fb592ad5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #9 0x7fb592ad607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #10 0x56483b17b824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_update_item_at_pos_nullstr.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0x19c05c) \n==3819726==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_update_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_update_item_at_pos_oob\n[       OK ] test_list_update_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos\n[       OK ] test_list_remove_item_at_pos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_remove_item_at_pos_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820067==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x561a701ae8f8 bp 0x7ffcf641cfd0 sp 0x7ffcf641cfa0 T0)\n==3820067==The signal is caused by a READ memory access.\n==3820067==Hint: address points to the zero page.\n    #0 0x561a701ae8f7 in list_remove_item_at_pos parts/gen_list_remove_item_at_pos.c:36\n    #1 0x561a701ba7f1 in test_list_remove_item_at_pos_nullhead tests_ref/test_list_remove_item_at_pos_nullhead.c:23\n    #2 0x561a701b8c00 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x561a701b9140 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x561a701b9b6e in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x561a701ba9a0 in main tests_ref/test_list_remove_item_at_pos_nullhead.c:30\n    #6 0x7f94d0962fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f94d096307c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x561a701ae804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_remove_item_at_pos_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_remove_item_at_pos.c:36 in list_remove_item_at_pos\n==3820067==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_remove_item_at_pos_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_remove_item_at_pos_oob\n[       OK ] test_list_remove_item_at_pos_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions\n[       OK ] test_list_swap_item_positions\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_samepos": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_samepos\n[       OK ] test_list_swap_item_positions_samepos\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_swap_item_positions_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820282==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555682f6f907 bp 0x7fffb444d8b0 sp 0x7fffb444d8b0 T0)\n==3820282==The signal is caused by a READ memory access.\n==3820282==Hint: address points to the zero page.\n    #0 0x555682f6f906 in list_swap_item_positions parts/gen_list_swap_item_positions.c:38\n    #1 0x555682f7b86c in test_list_swap_item_positions_nullhead tests_ref/test_list_swap_item_positions_nullhead.c:23\n    #2 0x555682f79c76 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x555682f7a1b6 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x555682f7abe4 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x555682f7ba1b in main tests_ref/test_list_swap_item_positions_nullhead.c:30\n    #6 0x7f27c8f44fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f27c8f4507c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x555682f6f804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_swap_item_positions_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_swap_item_positions.c:38 in list_swap_item_positions\n==3820282==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_swap_item_positions_oob": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_swap_item_positions_oob\n[       OK ] test_list_swap_item_positions_oob\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position\n[       OK ] test_list_find_highest_price_item_position\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullhead\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_find_highest_price_item_position_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_find_highest_price_item_position_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_find_highest_price_item_position_nullpos": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_find_highest_price_item_position_nullpos\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820483==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5624a35bc8e4 bp 0x7fff9045ea20 sp 0x7fff9045ea20 T0)\n==3820483==The signal is caused by a WRITE memory access.\n==3820483==Hint: address points to the zero page.\n    #0 0x5624a35bc8e3 in list_find_highest_price_item_position parts/gen_list_find_highest_price_item_position.c:32\n    #1 0x5624a35c88b2 in test_list_find_highest_price_item_position_nullpos tests_ref/test_list_find_highest_price_item_position_nullpos.c:25\n    #2 0x5624a35c6bcd in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5624a35c710d in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5624a35c7b3b in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5624a35c8ab1 in main tests_ref/test_list_find_highest_price_item_position_nullpos.c:32\n    #6 0x7fbae0885fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7fbae088607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5624a35bc804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_find_highest_price_item_position_nullpos.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_find_highest_price_item_position.c:32 in list_find_highest_price_item_position\n==3820483==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum\n[       OK ] test_list_cost_sum\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_cost_sum_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nullhead\n[  FAILED  ] test_list_cost_sum_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_cost_sum_nullhead.c:24: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_cost_sum_nullhead\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_cost_sum_nulltotal": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_cost_sum_nulltotal\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820708==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55c34add792e bp 0x7ffd2281dfe0 sp 0x7ffd2281dfe0 T0)\n==3820708==The signal is caused by a WRITE memory access.\n==3820708==Hint: address points to the zero page.\n    #0 0x55c34add792d in list_cost_sum parts/gen_list_cost_sum.c:40\n    #1 0x55c34ade395b in test_list_cost_sum_nulltotal tests_ref/test_list_cost_sum_nulltotal.c:28\n    #2 0x55c34ade1bb3 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55c34ade20f3 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55c34ade2b21 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55c34ade3b82 in main tests_ref/test_list_cost_sum_nulltotal.c:36\n    #6 0x7f26da81bfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f26da81c07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55c34add7804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_cost_sum_nulltotal.bin+0x6804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_cost_sum.c:40 in list_cost_sum\n==3820708==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_save": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save\n[       OK ] test_list_save\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullhead": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullhead\n[       OK ] test_list_save_nullhead\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_nullfilename\n[       OK ] test_list_save_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_save_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_save_badfile\n[       OK ] test_list_save_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load\n[       OK ] test_list_load\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3820976==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5622a6870947 bp 0x7fffa00c3b70 sp 0x7fffa00c3ad0 T0)\n==3820976==The signal is caused by a READ memory access.\n==3820976==Hint: address points to the zero page.\n    #0 0x5622a6870946 in list_load parts/gen_list_load.c:40\n    #1 0x5622a687c88b in test_list_load_nullhead tests_ref/test_list_load_nullhead.c:24\n    #2 0x5622a687ac8d in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x5622a687b1cd in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x5622a687bbfb in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x5622a687ca3a in main tests_ref/test_list_load_nullhead.c:31\n    #6 0x7f16c7ca5fcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f16c7ca607c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x5622a6870824 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_load_nullhead.bin+0x5824)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_load.c:40 in list_load\n==3820976==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_nullfilename": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_nullfilename\n[       OK ] test_list_load_nullfilename\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_longitem": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_longitem\n",
            "stderr": "=================================================================\n==3821210==AddressSanitizer CHECK failed: ../../../../src/libsanitizer/asan/asan_thread.cc:348 \"((ptr[0] == kCurrentStackFrameMagic)) != (0)\" (0x0, 0x0)\nAddressSanitizer:DEADLYSIGNAL\nAddressSanitizer: nested bug in the same thread, aborting.\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badparse": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badparse\n[  FAILED  ] test_list_load_badparse\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  ERROR   ] --- 0 != 0x1\n[   LINE   ] --- tests_ref/test_list_load_badparse.c:27: error: Failure!\n[  PASSED  ] 0 test(s).\n[  FAILED  ] tests: 1 test(s), listed below:\n[  FAILED  ] test_list_load_badparse\n\n 1 FAILED TEST(S)\n\nSummary: [X]\n\n",
            "passed": false,
            "skipped": false
        },
        "test_list_load_badfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_badfile\n[       OK ] test_list_load_badfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_load_missingfile": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_load_missingfile\n[       OK ] test_list_load_missingfile\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate\n[       OK ] test_list_deduplicate\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nullhead": {
            "return_code": 1,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nullhead\n",
            "stderr": "AddressSanitizer:DEADLYSIGNAL\n=================================================================\n==3821252==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x55e2726438dd bp 0x7ffedb7649f0 sp 0x7ffedb7649b0 T0)\n==3821252==The signal is caused by a READ memory access.\n==3821252==Hint: address points to the zero page.\n    #0 0x55e2726438dc in list_deduplicate parts/gen_list_deduplicate.c:32\n    #1 0x55e27264f80f in test_list_deduplicate_nullhead tests_ref/test_list_deduplicate_nullhead.c:23\n    #2 0x55e27264dc23 in cmocka_run_one_test_or_fixture cmocka/cmocka.c:2937\n    #3 0x55e27264e163 in cmocka_run_one_tests cmocka/cmocka.c:3045\n    #4 0x55e27264eb91 in _cmocka_run_group_tests cmocka/cmocka.c:3176\n    #5 0x55e27264f9be in main tests_ref/test_list_deduplicate_nullhead.c:30\n    #6 0x7f41546adfcf in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n    #7 0x7f41546ae07c in __libc_start_main_impl ../csu/libc-start.c:409\n    #8 0x55e272643804 in _start (/home/gustavo/git/codex_study_grading/repos/1f53c71a-e1b9-4b65-a11e-c15f3c38a6cf/tests_ref/test_list_deduplicate_nullhead.bin+0x5804)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV parts/gen_list_deduplicate.c:32 in list_deduplicate\n==3821252==ABORTING\n",
            "passed": false,
            "skipped": false
        },
        "test_list_deduplicate_single": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_single\n[       OK ] test_list_deduplicate_single\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        },
        "test_list_deduplicate_nodups": {
            "return_code": 0,
            "stdout": "[==========] tests: Running 1 test(s).\n[ RUN      ] test_list_deduplicate_nodups\n[       OK ] test_list_deduplicate_nodups\n[==========] tests: 1 test(s) run.\n",
            "stderr": "[  PASSED  ] 1 test(s).\n\nSummary: [#]\n\n",
            "passed": true,
            "skipped": false
        }
    },
    "passed": 26,
    "total": 45,
    "passed_functional": 22,
    "total_functional": 26
}
